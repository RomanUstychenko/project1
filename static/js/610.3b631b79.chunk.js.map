{"version":3,"file":"static/js/610.3b631b79.chunk.js","mappings":"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","sources":["webpack://project1/./src/Pages/Registration/Registration.module.scss?d2b2","Pages/Registration/Registration.jsx","webpack://project1/./src/components/Button/Button.module.scss?f17a","components/Button/Button.jsx","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","../node_modules/nanoid/index.browser.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"registrationPage\":\"Registration_registrationPage__LoyTw\",\"registrationFormLabel\":\"Registration_registrationFormLabel__yHEip\",\"registrationForm\":\"Registration_registrationForm__Ff6xS\",\"registrationFormInput\":\"Registration_registrationFormInput__Lmv-L\"};","import { useState } from 'react';\nimport { nanoid } from \"nanoid\";\nimport { useDispatch, \n  useSelector\n } from \"react-redux\";\nimport { register } from 'redux/auth/auth-operation';\nimport scss from \"./Registration.module.scss\"\nimport { Button } from 'components/Button/Button';\n// import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { isRegister } from 'redux/auth/auth-selector';\nimport { Navigate } from 'react-router-dom';\nimport { Modal } from 'components/Modal/Modal';\n// import ModalRegisterVerify from 'components/ModalRegisterVerify/ModalRegisterVerify';\n\nexport default function Registration() {\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [modalActive, setModalActive] = useState('');\n\n  const nameId = nanoid();\n    const emailId = nanoid();\n    const passwordId = nanoid();\n\n  const dispatch = useDispatch();\n  const isUserRegister = useSelector(isRegister);\n\n  const handleChange = (event) => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n        case 'name':\n            setName(value);\n            break;\n        case 'email':\n            setEmail(value);\n            break;\n        case 'password':\n            setPassword(value);\n            break;\n        default:\n            setName('');\n            setEmail('');\n            setPassword('');\n    };\n};\n\nconst handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(\"reg\")\n    dispatch(register({ name: name, email: email, password: password }));    \n};\n\nconst openModal = () => {\n  if (isUserRegister) {\n  \n    //  return console.log(\"userRegister\")\n      setModalActive(true)\n    ;}\n    else {\n      console.log(\"enter name\")\n    }\n}\nif (isUserRegister) {\n  return <Navigate to=\"/register/verify\" />\n//  return console.log(\"userRegister\")\n\n  // setModalActive(true)\n;}\n\n  return (\n    <div className={scss.registrationPage}>\n       <h1>Registration Form</h1> \n       <form\n       onSubmit={handleSubmit}>\n       <div className={scss.registrationForm}>\n            {<div className={scss.registrationFormLabel}> <label \n            htmlFor={nameId}\n            >Login </label></div>}\n            <input \n            className={scss.registrationFormInput}\n            id={nameId} placeholder=\"Enter name\" name=\"name\" type=\"text\" required onChange={handleChange} value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n             />\n        </div>\n        <div className={scss.registrationForm}>\n            {<div className={scss.registrationFormLabel}><label \n            htmlFor={emailId}\n            >E-mail </label></div>}\n            <input \n            className={scss.registrationFormInput}\n            id={emailId} placeholder=\"Enter email\" name=\"email\" type=\"email\" required onChange={handleChange} value={email}\n            pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n             />\n        </div>\n        <div className={scss.registrationForm}>\n            {<div className={scss.registrationFormLabel}><label \n            htmlFor={passwordId}\n            >Password </label></div>}\n            <input \n            className={scss.registrationFormInput}\n            id={passwordId} placeholder=\"Enter password\" name=\"password\" type=\"password\" required onChange={handleChange} value={password}\n             />\n        </div>\n        <Button \n        text=\"Registration\"\n        type=\"button\"\n        onClick={() => openModal ()}\n        />\n       </form>\n       <button\n       onClick={() => openModal ()}\n       >\n        open\n       </button>\n       { modalActive && (\n        <Modal\n        // onClick={() => closeModal ()}\n        active={modalActive}\n        setActive={setModalActive}>\n          <p>Register</p>\n        {/* <ModalRegisterVerify \n        onClick={e => e.stopPropagation()}\n        setModalActive={setModalActive}\n        /> */}\n        </Modal>\n      )}\n       \n       </div>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"Button\":\"Button_Button__XMdsc\"};","import scss from \"./Button.module.scss\"\nimport PropTypes from 'prop-types';\n\nexport const Button = ({style, text, \n  onClick\n}) => {\n  return (\n    <button \n    style={style}\n    className={scss.Button}\n    onClick={onClick}\n    >\n      {text}\n    </button>\n  );\n};\n\nButton.propTypes = {\n    onClick: PropTypes.func,\n  };","import styled\n//  {keyframes} \n from 'styled-components';\n// import { device } from 'Device';\n\n// const rotateAnim = keyframes`\n// 0% {\n// transform: scale(0.5);\n// }\n// 100% {\n//   transform: scale(1);\n// }\n// `\nexport const ModalBackdrop = styled.div`\n  position: fixed;\n  z-index: 1000;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(17, 17, 17, 0.6);\n  backdrop-filter: blur(10px);\n  overflow-y: scroll;\n  overflow-x: hidden;\n  transition: 0.5s;\n  align-items: center;\njustify-content: center;\n  display: flex;\n  opacity: 0;\npointer-events: none;\ntransition: 1s;\n&.active {\n    opacity: 1;\n    pointer-events: all;\n  };\n`\n\n// export const ModalContentDellLogout = styled.div`\n// position: absolute;\n//   padding: 20px;\n//   border-radius: 40px;\n//   background-color: ${p => p.theme.colors.white};\n//   box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11);\n// /* transform: scale(0.5); */\n// transition: 0.5s all;\n// /* &.active {\n//   animation: ${rotateAnim}\n//     1s infinite linear\n//   transform: scale(1);\n// } */\n// `\n// export const ModalContent = styled.div`\n//   position: absolute;\n  \n//   /* left: 50%; */\n\n//   /* transform: translate(-50%, -5%); */\n//   background: ${p => p.theme.colors.white};\n//   border-radius: 40px;\n//   box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11),\n//   0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n\n\n//   transform: scale(0.5);\n// transition: 1s all;\n// &.active {\n//   transform: scale(1);\n// }\n// `\n// export const ModalContentAddPets1 = styled(ModalContent)`\n//   top: 15%;\n//   height: 530px;\n//   width: 280px;\n\n//   @media ${device.tablet} {\n//     height: 570px;\n//     width: 620px;\n//   }`\n\n// export const ModalContentAddPets2 = styled(ModalContent)`\n//   top: 15%;\n//   height: 670px;\n//   width: 280px;\n//   @media ${device.tablet} {\n//     height: 662px;\n//     width: 608px;\n//   }\n// `\n// export const ModalContentAddNotice = styled(ModalContent)`\n//   top: 5%;\n//   height: 700px;\n//   width: 280px;\n//   @media ${device.tablet} {\n//     width: 608px;\n//   }\n\n// `;\n// export const ModalContentLearnMore = styled(ModalContent)`\n// //   width: 280px;\n//   padding: 60px 20px 40px 20px;\n//   top: 5%;\n//   height: 530px;\n//   overflow-x: hidden;\n//   overflow-y: scroll;\n\n//   @media ${device.tablet} {\n//     width: 704px;\n//     padding: 32px 40px 32px 20px;\n//     top: 10%;\n//     overflow-y: hidden;\n//   }\n\n// `;\n// export const WrapperModal = styled.div`\n//   position: absolute;\n//   top: 0;\n//   left: 0;\n//   height: 100%;\n//   overflow-y: auto;\n//   width: 100%;\n// `;\n// export const WrapperModalAddPet1 = styled(WrapperModal)`\n// padding: 30px 20px;\n//   @media ${device.tablet} {\n//     width: 620px;\n//     height: 100%;\n//     padding: 40px 75px;\n//   }\n// `;\n// export const WrapperModalAddPet2 = styled(WrapperModal)`\n//   padding: 20px 20px;\n//   @media ${device.tablet} {\n//     width: 620px;\n//     height: 100%;\n//     padding: 40px 75px;\n//   }\n// `;\n// export const WrapperModalAddNotice = styled(WrapperModal)`\n//   padding: 10px 20px;\n//   @media ${device.tablet} {\n//     width: 608px;\n//     padding: 10px 75px;\n//   }\n// `;\n\n// export const ModalButton = styled.button`\n// z-index: 1;\n// position: absolute;\n// display: flex;\n// top: 16px;\n// right: 16px;\n// background-color: transparent;\n// border: 0;\n// transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n//   :hover,\n//   :focus {\n//     cursor: pointer;\n//   transform: scale(1.2);\n//   }\n// `;\n","import React from 'react';\n// import { createPortal } from 'react-dom';\nimport { ModalBackdrop } from './Modal.styled';\n\n// const modalRoot = document.querySelector('#modal_root');\n\nexport const Modal = ({active, className, onClick, setActive, children}) => {\n  const handleKeyDown = e => {\n    if (e.code === 'Escape') {\n        setActive(false);\n        document.body.style.overflow = '';\n    }\n  };\n  window.addEventListener('keydown', handleKeyDown);\n \n  return (    \n  <ModalBackdrop \n    className={active ? \"modal active\" : \"modal\"}\n    onClick={onClick}\n    >\n      {children}\n    </ModalBackdrop>\n  );\n};","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n"],"names":["Registration","useState","name","setName","email","setEmail","password","setPassword","modalActive","setModalActive","nameId","nanoid","emailId","passwordId","dispatch","useDispatch","isUserRegister","useSelector","isRegister","handleChange","event","currentTarget","value","openModal","console","log","to","className","scss","onSubmit","e","preventDefault","register","htmlFor","id","placeholder","type","required","onChange","pattern","Button","text","onClick","Modal","active","setActive","style","ModalBackdrop","styled","children","window","addEventListener","code","document","body","overflow","size","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase"],"sourceRoot":""}