{"version":3,"file":"static/js/342.447c7291.chunk.js","mappings":"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","sources":["webpack://project1/./src/components/Button/Button.module.scss?f17a","components/Button/Button.jsx","components/Navbar/NavbarAuth/items.js","components/Navbar/NavbarAuth/NavbarAuth.styled.jsx","components/Navbar/NavbarAuth/NavbarAuth.jsx","components/Navbar/NavbarUser/NavbarUser.styled.jsx","components/Navbar/NavbarUser/NavbarUser.jsx","redux/user/user-selector.js","components/Live/LiveTitle/LiveTitle.styled.jsx","components/Live/LiveTitle/LiveTitle.jsx","components/Navbar/Navbar.styled.jsx","components/hooks/useLive.js","components/Navbar/Navbar.jsx","redux/items/items-selector.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Button\":\"Button_Button__XMdsc\"};","import scss from \"./Button.module.scss\"\nimport PropTypes from 'prop-types';\n\nexport const Button = ({style, text, \n  onClick\n}) => {\n  return (\n    <button \n    style={style}\n    className={scss.Button}\n    onClick={onClick}\n    >\n      {text}\n    </button>\n  );\n};\n\nButton.propTypes = {\n    onClick: PropTypes.func,\n  };","import { nanoid } from \"nanoid\";\n\nconst items = [\n    {id: nanoid(),\n    to: \"/register\",\n    text: \"Registration\"\n},\n    {id: nanoid(),\n    to: \"/login\",\n    text: \"Login\"\n},\n\n]\n\n\nexport default items;","import styled from 'styled-components';\nimport { NavLink } from \"react-router-dom\"\n\nexport const NavbarAuthList = styled.ul`\n    display: flex;\n    margin-right: auto;\n    margin-left: auto;\n    align-items: center;\n    justify-content: center;\n`\nexport const Link = styled(NavLink)`\n    text-decoration: none;\n    font-size: 20px;\n    font-weight: 700;\n    color: rgb(10, 3, 3);\n    &.active {\n        padding-left: 5px;\n        padding-right: 5px;\n        color: white;\n        background-color: #3f51b5;\n        border-radius: 5px;\n    }\n    &:hover, \n    :focus {\n        color: #333d72;\n    }\n\n`\nexport const NavbarAuthListItem = styled.li`\n    &:not(:last-child) {\n    margin-right: 20px;\n}\n`","import items from \"./items\"\n\nimport { NavbarAuthList, Link, NavbarAuthListItem } from \"./NavbarAuth.styled\"\n\n\n\nexport default function NavbarAuth() {\n  return (\n    <NavbarAuthList >\n        {items.map(({id, to, text}) => {\n            return (\n                <NavbarAuthListItem  key={id}>\n                    <Link  to={to} end>{text}</Link>\n                </NavbarAuthListItem>\n            )})\n        }\n    </NavbarAuthList>\n  )\n}","import styled from 'styled-components';\nimport { NavLink } from \"react-router-dom\"\nimport {AiOutlineSetting} from 'react-icons/ai';\n\nexport const NavbarUserList = styled.div`\n    position: relative;\n    margin-right: 20px;\n    font-size: 15px;\n    font-weight: 600;\n`\n\n\nexport const NavbarUserName = styled.div`\ndisplay: flex;\n/* margin-left: auto;\nmargin-right: auto; */\n/* align-items: center; */\njustify-content: center;\n/* text-align: center; */\n    /* font-size: 15px;\n    font-weight: 600; */\n`\nexport const NavbarUserSet = styled.div`\n    text-align: right;\n`\nexport const Welcome = styled.p`\n    \n`\nexport const UserName = styled.p`\n    font-size: 20px;\n`\n\nexport const Setting = styled(AiOutlineSetting)`\n    color: #291e1e;\n    width:20px;\n    &:hover, \n    :focus {\n        color: #333d72;\n    }\n`\n\n// import { device } from 'Device';\n\nexport const NavbarMenuList = styled.ul`\n    display: flex;\n    margin-right: auto;\n    margin-left: auto;\n    align-items: center;\n    justify-content: center;\n`\nexport const NavbarMenuListItem = styled.li`\n    &:not(:last-child) {\n    margin-right: 20px;\n}\n`\nexport const Link = styled(NavLink)`\n    text-decoration: none;\n    /* font-size: 40px; */\n    /* font-weight: 700; */\n    /* color: rgb(10, 3, 3); */\n    /* &.active {\n        padding-left: 5px;\n        padding-right: 5px;\n        color: white;\n        background-color: #3f51b5;\n        border-radius: 5px;\n    } */\n    &:hover, \n    :focus {\n        color: #333d72;\n    }\n`","import { useDispatch, useSelector } from \"react-redux\"\nimport { logout } from \"redux/auth/auth-operation\"\nimport { NavbarUserList, NavbarUserName, Welcome, UserName, Setting, NavbarUserSet,\n  // NavbarMenuList, NavbarMenuListItem, \n  Link } from \"./NavbarUser.styled\";\n// import { NavbarMenuList, NavbarMenuListItem, Link } from \"./NavbarMenu.styled\"\nimport { getUser } from \"redux/auth/auth-selector\";\nimport { Button } from \"components/Button/Button\";\n\n\nexport default function NavbarUser() {\nconst user = useSelector(getUser)\n\nconst dispatch = useDispatch();\nconst onLogout =() => {\n    dispatch(logout())\n}\n\n// console.log(user)\n\nconst chekName = Boolean(user)\n  return (\n    <>\n    {/* <NavbarMenuList > */}\n    {/* <NavbarMenuListItem > */}\n              \n  {/* </NavbarMenuListItem> */}\n      \n  \n{/* </NavbarMenuList> */}\n    <NavbarUserList>\n      {chekName ? <NavbarUserName >\n        {/* <img src={user.avatarURL} alt=\"avatar\" /> */}\n       <Welcome>Welcome,</Welcome> <UserName>{user.name}</UserName>\n       </NavbarUserName> : \n       <Welcome>Welcome, <UserName>User</UserName>\n       </Welcome> }\n       <NavbarUserSet>\n       <Link \n               to={\"/users\"} \n               end><Setting/>\n               </Link>\n               <Button \n        style={{\n          position: 'relative',\n          right: '0px',\n          height: '25px',\n          padding: '0px 0px',\n          minWidth: '100px',\n          fontSize: 15,\n          color: '#010101'\n        }}\n    \n      text=\"Logout\"\n      type=\"button\"\n      onClick={onLogout}\n      />\n       </NavbarUserSet>\n        \n    </NavbarUserList>\n    </>\n  )\n}\n","\nexport const getAllUser = ({users}) => users.users;\n\n\n\n","import styled from 'styled-components';\nimport { NavLink } from \"react-router-dom\"\n\n\nexport const List = styled.div`\nmargin-top: 20px;\n    text-align: center;\nmargin-left: auto;\nmargin-right: auto;\n\n`\nexport const Link = styled(NavLink)`\n\ncolor: #7e2323;\ntext-decoration: none;\nfont-size: 35px;\nfont-family: 'Luckiest Guy', cursive;\n\n`","// import items from \"./items\"\nimport { nanoid } from \"nanoid\";\nimport {  getAllUser } from \"redux/user/user-selector\";\nimport { useSelector } from \"react-redux\";\nimport { Link, List } from \"./LiveTitle.styled\";\nimport { useLocation } from 'react-router-dom'\n\n\n\nexport default function LiveTitle() {\n  const users = useSelector(getAllUser);\n  const location = useLocation();\n  const category = (location.pathname.split('/')[2])\n  const user = users.find(user => user._id === category)\n  console.log(user)\n  const chekName = Boolean(user)\n  const items = chekName ? [\n   \n    {id: nanoid(),\n      to: `/live/${user._id}`,\n      text: `${user.name}`,\n  },\n   \n    ] : \"\";\n\n\n  \n  return (\n    <List >\n      {chekName ? items.map(({id, to, text}) => {\n       console.log({to})\n       console.log({text})\n            return (\n                \n                    <Link  to={to} end>{text}</Link>\n                \n            )})\n         : <></> }\n\n        \n    </List>\n  )\n}","import styled from 'styled-components';\n\n\nexport const NavbarTitles = styled.nav`\n    padding-top: 5px;\n    padding-bottom: 5px;\n    border: 1px solid ;\n    border-radius: 25px;\n    background-color: rgb(152, 218, 235);\n`\n    \n\nexport const NavbarList = styled.div`\n    /* display: flex; */\n`","import {  useSelector  } from \"react-redux\";\nimport { isLive } from 'redux/items/items-selector';\n\nconst UseLive = () => {\n    const result = useSelector(isLive)\n    // console.log(result)\n    return result\n};\n\nexport default UseLive;\n\n\n// if (isUserLogin) {\n//     return <Navigate to=\"/contacts\" />\n//   }","// import NavbarMenu from \"components/Navbar/NavbarMenu/NavbarMenu\"\nimport NavbarAuth from \"components/Navbar/NavbarAuth/NavbarAuth\"\nimport NavbarUser from \"./NavbarUser/NavbarUser\"\nimport LiveTitle from \"components/Live/LiveTitle/LiveTitle\"\nimport { NavbarTitles, NavbarList } from \"./Navbar.styled\"\nimport UseAuth from \"components/hooks/useAuth\"\nimport UseLive from \"components/hooks/useLive\"\n\nexport default function Navbar() {\n  const isUserLogin = UseAuth()\n  const isUseLive = UseLive()\n  return (\n    <>\n    {isUseLive ? <LiveTitle /> : \n    <NavbarTitles >\n        <NavbarList >\n          {/* {isUserLogin &&  <NavbarMenu /> } */}\n          {/* {isUserLogin &&  !<NavbarLive />} */}\n           {isUserLogin ? <NavbarUser /> : <NavbarAuth />}\n           \n        </NavbarList>\n    \n    </NavbarTitles>\n    }\n    </>\n  )\n}","export const getItems = ({items}) => items.items;\nexport const getItemsLive = ({items}) => items.itemsLive;\nexport const isLive = ({items}) => items.isLive;\nexport const getItemsByCategory = ({items}) => ( items.itemsByCategory);\nexport const getItemUpdate = ({items}) => (items.itemsByCategory);\nexport const getState = ({items}) => ({loading: items.loading, error: items.error});\nexport const getFilteredItems = ({filter, items}) => {   \n    if (!filter) \n    {return items.items};\n};"],"names":["Button","style","text","onClick","className","scss","id","nanoid","to","NavbarAuthList","styled","Link","NavLink","NavbarAuthListItem","NavbarAuth","items","end","NavbarUserList","NavbarUserName","NavbarUserSet","Welcome","UserName","Setting","AiOutlineSetting","NavbarUser","user","useSelector","getUser","dispatch","useDispatch","chekName","Boolean","name","position","right","height","padding","minWidth","fontSize","color","type","logout","getAllUser","users","List","LiveTitle","category","useLocation","pathname","split","find","_id","console","log","map","NavbarTitles","NavbarList","isLive","Navbar","isUserLogin","UseAuth","isUseLive","UseLive","getItems","getItemsLive","itemsLive","getItemsByCategory","itemsByCategory","getState","loading","error"],"sourceRoot":""}