{"version":3,"file":"static/js/297.1c56980b.chunk.js","mappings":"wLACA,EAAuB,0BAAvB,EAA6D,+BAA7D,EAA4G,mCAA5G,EAA8J,kCAA9J,EAA0M,6B,UCD7LA,EAAc,SAAC,GAAD,SAAEC,SAAuBC,KAAzB,EACdC,EAAW,SAAC,GAAD,IAAEF,EAAF,EAAEA,SAAF,MAAiB,CAACG,QAASH,EAASG,QAASC,MAAOJ,EAASI,MAA7D,EACXC,EAAsB,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,OAAQN,EAAc,EAAdA,SACzC,IAAKM,EACJ,OAAON,EAASC,KACpB,E,6BCGc,SAASM,EAAT,GAAkC,IAAXC,EAAU,EAAVA,QAC9BR,GAAWS,EAAAA,EAAAA,IAAYJ,GAEvBK,GAAWC,EAAAA,EAAAA,MAEjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAsCJ,EAAAA,EAAAA,UAAS,IAA/C,eAAOK,EAAP,KAAoBC,EAApB,KAEMC,GAASC,EAAAA,EAAAA,MACTC,GAAQD,EAAAA,EAAAA,MACRE,GAAgBF,EAAAA,EAAAA,MAEhBG,EAAe,SAACC,GAEhB,OADiBA,EAAEC,cAAXZ,MAEN,IAAK,OACHC,EAAQU,EAAEC,cAAcC,OACxB,MACA,IAAK,cACLR,EAAeM,EAAEC,cAAcC,OAC/B,MACF,IAAK,QACHV,EAASQ,EAAEC,cAAcC,OAK9B,EAoBD,OACE,kBACAlB,QAASA,EACTmB,UAAWC,EACXC,SAtBe,SAACL,GAChBA,EAAEM,iBACF,IAAMC,EAAoB/B,EAASgC,MAAK,SAAAC,GAAO,OAAIA,EAAQpB,KAAKqB,sBAAwBrB,EAAKqB,mBAA9C,IACjDC,QAAQC,IAAIL,GACVI,QAAQC,IAAIpC,GACN+B,EACFM,EAAAA,OAAAA,QAAA,UAAkBxB,EAAlB,4BAKAH,GAAS4B,EAAAA,EAAAA,IAAY,CAAEzB,KAAAA,EAAMI,YAAAA,EAAaF,MAAAA,KAC1CD,EAAQ,IACRI,EAAe,IACfF,EAAS,IAEd,EAGC,WAIA,iBAAKW,UAAWC,EAAhB,WACE,kBAAOW,QAASpB,EAAhB,mBACA,kBACAQ,UAAWC,EACXY,GAAIrB,EACJsB,KAAK,OACL5B,KAAK,OACL6B,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRlB,MAAOb,EACPgC,SAAUtB,QAEZ,iBAAKI,UAAWC,EAAhB,WACE,kBAAOW,QAASjB,EAAhB,0BACA,kBACAK,UAAWC,EACXY,GAAIlB,EACJmB,KAAK,OACL5B,KAAK,cACL6B,QAAQ,yHACRC,MAAM,yIACNjB,MAAOT,EACP4B,SAAUtB,QAEZ,iBAAKI,UAAWC,EAAhB,WACE,kBAAOW,QAASlB,EAAhB,oBACA,kBACAM,UAAWC,EACXY,GAAInB,EACJoB,KAAK,SACL5B,KAAK,QACL6B,QAAQ,yFACRC,MAAM,+FACNjB,MAAOX,EACP8B,SAAUtB,EACVqB,UAAQ,QAEV,mBACAjB,UAAWC,EACXa,KAAK,SAFL,mBAKP,CCxGM,IAAMK,EAAY,SAAAC,GAAK,OAAIA,EAAMzC,MAAV,E,MCAiB0C,EAASC,ECa3CC,E,QAAgBC,GAAAA,IAAH,IDbqBH,ECarB,8aDZnBC,IACHA,EAAMD,EAAQI,MAAM,ICWE,EDRjBC,OAAOC,OAAOD,OAAOE,iBAAiBP,EAAS,CACpDC,IAAK,CACHvB,MAAO2B,OAAOC,OAAOL,SEDdO,EAAQ,SAAC,GAAuD,IAAtDC,EAAqD,EAArDA,OAAmBjD,GAAkC,EAA7CmB,UAA6C,EAAlCnB,SAASkD,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,SAS5D,OAFAC,OAAOC,iBAAiB,WANF,SAAArC,GACL,WAAXA,EAAEsC,OACFJ,GAAU,GACVK,SAASC,KAAKC,MAAMC,SAAW,GAEpC,KAID,SAAChB,EAAD,CACEvB,UAAW8B,EAAS,eAAiB,QACrCjD,QAASA,EAFX,SAIKmD,GAGN,ECtBD,GAAgB,YAAc,iCAAiC,YAAc,kCCS9D,SAASQ,EAAT,GAA0C,IAAnBC,EAAkB,EAAlBA,gBAIhCvD,EAIAuD,EAJAvD,KACAI,EAGAmD,EAHAnD,YACAF,EAEAqD,EAFArD,MACFsD,EACED,EADFC,IAIE3D,GAAWC,EAAAA,EAAAA,MAEjB,GAAsCC,EAAAA,EAAAA,WAAS,GAA/C,eAAO0D,EAAP,KAAoBC,EAApB,KAME,OACE,iCACA,gBAAI5C,UAAWC,EAAAA,YAAf,WACQ,iCADR,KACuBf,EADvB,KAC6B,mBACrB,wCAFR,KAE8BI,EAF9B,KAE2C,mBACnC,cAAGU,UAAWC,EAAAA,IAAd,kBAHR,IAG0Cb,GAClC,iBAAMY,UAAWC,EAAAA,YACjBpB,QAAS,kBAAM+D,GAAe,EAArB,EADT,sBAJ8BF,GASrCC,IACK,SAACd,EAAD,CACAhD,QAAS,kBAhBf+D,GAAe,QACfR,SAASC,KAAKC,MAAMC,SAAW,GAehB,EACTT,OAAQa,EACRZ,UAAWa,EAHX,UAKJ,iBACA/D,QAAS,SAAAgB,GAAC,OAAIA,EAAEgD,iBAAN,EADV,2CAKI,mBACAhE,QAAS,WAELE,GAAS+D,EAAAA,EAAAA,IAAcJ,GAAM,EAHjC,wBAaT,CCpDO,IAAMK,EAAc,WAIxB,IAAM1E,GAAWS,EAAAA,EAAAA,IAAYV,GAGvBO,GAASG,EAAAA,EAAAA,IAAYqC,GAqB3B,OACE,+BACM,wBAlBmB,WACvB,IAAKxC,EACH,OAAON,EAEL,IAAM2E,EAAmBrE,EAAO4B,oBAMlC,OAL0BlC,EAASM,QAAO,YAGxC,OAHoD,EAAVO,KACdqB,oBACE0C,SAASD,EAExC,GAEF,CAQIE,GAAqBC,KAAI,SAAAV,GAAe,OACvC,SAACD,EAAD,CAEAC,gBAAiBA,GADZA,EAAgBC,IAFkB,OAmB3C,EC7DV,EAAqC,mCAArC,EAA6F,mCAA7F,EAAgJ,8B,UCoC9I,EA/Ba,WAEX,IAAMU,GAAUtE,EAAAA,EAAAA,IAAYqC,GACtBpC,GAAWC,EAAAA,EAAAA,MAEXqE,GAAS5D,EAAAA,EAAAA,MAOnB,OACI,iBAAKO,UAAWC,EAAhB,WACU,kBACAD,UAAWC,EACXW,QAASyC,EAFT,oCAKA,kBACArD,UAAWC,EACXa,KAAK,OACL5B,KAAK,SACLa,MAAOqD,EACPlC,SAjBY,SAACrB,GACnB,IAAOE,EAASF,EAAEyD,OAAXvD,MACPhB,GAASwE,EAAAA,EAAAA,GAAUxD,GACpB,EAeOiB,MAAM,SACNC,UAAQ,MAGpB,EClCF,EAA4B,4BAA5B,EAAyE,iCAAzE,EAAwH,8BAAxH,EAAiK,2BAAjK,EAA8M,kCCa/L,SAASuC,IAEtB,OAAsCvE,EAAAA,EAAAA,WAAS,GAA/C,eAAO0D,EAAP,KAAoBC,EAApB,KAOA,IAAM7D,GAAWC,EAAAA,EAAAA,MACXX,GAAWS,EAAAA,EAAAA,IAAYV,GAC9B,GAAyBU,EAAAA,EAAAA,IAAYP,GAA9BC,EAAP,EAAOA,QAASC,EAAhB,EAAgBA,MAIf,OAHIgF,EAAAA,EAAAA,YAAU,WACN1E,GAAS2E,EAAAA,EAAAA,MACR,GAAE,CAAC3E,KAEV,iBAAMiB,UAAWC,EAAjB,WACE,iBAAKD,UAAWC,EAAhB,WACA,eAAID,UAAWC,EAAf,sBACE0C,IACA,SAACd,EAAD,CACAhD,QAAS,kBAhBb+D,GAAe,QACfR,SAASC,KAAKC,MAAMC,SAAW,GAelB,EACTT,OAAQa,EACRZ,UAAWa,EAHX,UAIA,SAAChE,EAAD,CACAC,QAAS,SAAAgB,GAAC,OAAIA,EAAEgD,iBAAN,UAIZ,iBAAK7C,UAAWC,EAAhB,WACA,sCACE,SAAC,EAAD,KACIzB,GAAWH,EAASsF,OAAS,IAAK,SAACZ,EAAD,IACnCvE,IAAW,cAAGwB,UAAWC,EAAd,wBACXxB,IAAS,0DAEd,mBACAqC,KAAK,SACLjC,QAAS,kBAAM+D,GAAe,EAArB,EAFT,wBAOL,C,wDCxDD,IAkBInD,EAAS,WAGX,IAH0B,IAAdmE,EAAc,uDAAP,GACf/C,EAAK,GACLgD,EAAQC,OAAOC,gBAAgB,IAAIC,WAAWJ,IAC3CA,KAAQ,CACb,IAAIK,EAAqB,GAAdJ,EAAMD,GAEf/C,GADEoD,EAAO,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,GAET,CACD,OAAOpD,CACR,C","sources":["webpack://project1/./src/components/ContactForm/ContactForm.module.scss?6b75","redux/contacts/contacts-selector.js","components/ContactForm/ContactForm.jsx","redux/filter/filter-selector.js","../node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","webpack://project1/./src/components/ContactItem/ContactList.module.scss?c10e","components/ContactItem/ContactsItem.jsx","components/ContactList/ContactList.jsx","webpack://project1/./src/components/filter/Filter.module.scss?f3f1","components/filter/Filter.jsx","webpack://project1/./src/Pages/Contacts/Contacts.module.scss?edcc","Pages/Contacts/Contacts.jsx","../node_modules/nanoid/index.browser.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__zqkUM\",\"formInput\":\"ContactForm_formInput__4newl\",\"formInputName\":\"ContactForm_formInputName__MS9gi\",\"formInputTel\":\"ContactForm_formInputTel__QLeAr\",\"formBtn\":\"ContactForm_formBtn__EULMB\"};","export const getContacts = ({contacts}) => contacts.items;\nexport const getState = ({contacts}) => ({loading: contacts.loading, error: contacts.error});\nexport const getFilteredContacts = ({filter, contacts}) => {   \n    if (!filter) \n    {return contacts.items};\n};\nexport const selectContactInfo = state => console.log(state.contacts.items)\n\n","import { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport scss from \"./ContactForm.module.scss\"\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilteredContacts } from 'redux/contacts/contacts-selector';\nimport { addContacts } from \"redux/contacts/contacts-operation\"; \nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nexport default function ContactForm ({onClick}) {\n  const contacts = useSelector(getFilteredContacts);\n  \n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n  const [description, setDescription] = useState('');\n\n  const nameID = nanoid();\n  const telID = nanoid();\n  const descriptionID = nanoid();\n\n  const handleChange = (e) => {\n        const { name } = e.currentTarget;\n        switch (name) {\n          case 'name':\n            setName(e.currentTarget.value);\n            break;\n            case 'description':\n            setDescription(e.currentTarget.value);\n            break;\n          case 'phone':\n            setPhone(e.currentTarget.value);\n            break;\n          default:\n            break;\n        }\n      };\n\n  const handleSubmit = (e) => {\n        e.preventDefault()\n        const duplicateContacts = contacts.find(contact => contact.name.toLocaleLowerCase() === name.toLocaleLowerCase());\n      console.log(duplicateContacts)\n        console.log(contacts)\n          if (duplicateContacts) {\n            Notify.failure(`${name} is already in contact`)\n            // alert (`${name} is already in contact`)\n            return\n          }\n          else {\n            dispatch(addContacts({ name, description, phone }));\n            setName('');\n            setDescription('');\n            setPhone('');\n          }\n      }; \n\n      return ( \n        <form \n        onClick={onClick}\n        className={scss.form}\n        onSubmit={handleSubmit}>\n        <div className={scss.formInput}>\n          <label htmlFor={nameID}>Name</label>\n          <input \n          className={scss.formInputName}\n          id={nameID} \n          type=\"text\" \n          name=\"name\" \n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name} \n          onChange={handleChange} />\n        </div>\n        <div className={scss.formInput}>\n          <label htmlFor={descriptionID}>Description</label>\n          <input \n          className={scss.formInputName}\n          id={descriptionID} \n          type=\"text\" \n          name=\"description\" \n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          value={description} \n          onChange={handleChange} />\n        </div>\n        <div className={scss.formInput}>\n          <label htmlFor={telID}>Phone</label>\n          <input \n          className={scss.formInputTel}\n          id={telID} \n          type=\"number\" \n          name=\"phone\" \n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          value={phone} \n          onChange={handleChange} \n          required/>\n        </div>\n        <button \n        className={scss.formBtn}\n        type=\"submit\">Add</button>\n        </form>\n        )\n};","export const getFilter = store => store.filter;","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","import styled\n//  {keyframes} \n from 'styled-components';\n// import { device } from 'Device';\n\n// const rotateAnim = keyframes`\n// 0% {\n// transform: scale(0.5);\n// }\n// 100% {\n//   transform: scale(1);\n// }\n// `\nexport const ModalBackdrop = styled.div`\n  position: fixed;\n  z-index: 1000;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(17, 17, 17, 0.6);\n  backdrop-filter: blur(10px);\n  overflow-y: scroll;\n  overflow-x: hidden;\n  transition: 0.5s;\n  align-items: center;\njustify-content: center;\n  display: flex;\n  opacity: 0;\npointer-events: none;\ntransition: 1s;\n&.active {\n    opacity: 1;\n    pointer-events: all;\n  };\n`\n\n// export const ModalContentDellLogout = styled.div`\n// position: absolute;\n//   padding: 20px;\n//   border-radius: 40px;\n//   background-color: ${p => p.theme.colors.white};\n//   box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11);\n// /* transform: scale(0.5); */\n// transition: 0.5s all;\n// /* &.active {\n//   animation: ${rotateAnim}\n//     1s infinite linear\n//   transform: scale(1);\n// } */\n// `\n// export const ModalContent = styled.div`\n//   position: absolute;\n  \n//   /* left: 50%; */\n\n//   /* transform: translate(-50%, -5%); */\n//   background: ${p => p.theme.colors.white};\n//   border-radius: 40px;\n//   box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11),\n//   0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n\n\n//   transform: scale(0.5);\n// transition: 1s all;\n// &.active {\n//   transform: scale(1);\n// }\n// `\n// export const ModalContentAddPets1 = styled(ModalContent)`\n//   top: 15%;\n//   height: 530px;\n//   width: 280px;\n\n//   @media ${device.tablet} {\n//     height: 570px;\n//     width: 620px;\n//   }`\n\n// export const ModalContentAddPets2 = styled(ModalContent)`\n//   top: 15%;\n//   height: 670px;\n//   width: 280px;\n//   @media ${device.tablet} {\n//     height: 662px;\n//     width: 608px;\n//   }\n// `\n// export const ModalContentAddNotice = styled(ModalContent)`\n//   top: 5%;\n//   height: 700px;\n//   width: 280px;\n//   @media ${device.tablet} {\n//     width: 608px;\n//   }\n\n// `;\n// export const ModalContentLearnMore = styled(ModalContent)`\n// //   width: 280px;\n//   padding: 60px 20px 40px 20px;\n//   top: 5%;\n//   height: 530px;\n//   overflow-x: hidden;\n//   overflow-y: scroll;\n\n//   @media ${device.tablet} {\n//     width: 704px;\n//     padding: 32px 40px 32px 20px;\n//     top: 10%;\n//     overflow-y: hidden;\n//   }\n\n// `;\n// export const WrapperModal = styled.div`\n//   position: absolute;\n//   top: 0;\n//   left: 0;\n//   height: 100%;\n//   overflow-y: auto;\n//   width: 100%;\n// `;\n// export const WrapperModalAddPet1 = styled(WrapperModal)`\n// padding: 30px 20px;\n//   @media ${device.tablet} {\n//     width: 620px;\n//     height: 100%;\n//     padding: 40px 75px;\n//   }\n// `;\n// export const WrapperModalAddPet2 = styled(WrapperModal)`\n//   padding: 20px 20px;\n//   @media ${device.tablet} {\n//     width: 620px;\n//     height: 100%;\n//     padding: 40px 75px;\n//   }\n// `;\n// export const WrapperModalAddNotice = styled(WrapperModal)`\n//   padding: 10px 20px;\n//   @media ${device.tablet} {\n//     width: 608px;\n//     padding: 10px 75px;\n//   }\n// `;\n\n// export const ModalButton = styled.button`\n// z-index: 1;\n// position: absolute;\n// display: flex;\n// top: 16px;\n// right: 16px;\n// background-color: transparent;\n// border: 0;\n// transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n//   :hover,\n//   :focus {\n//     cursor: pointer;\n//   transform: scale(1.2);\n//   }\n// `;\n","import React from 'react';\n// import { createPortal } from 'react-dom';\nimport { ModalBackdrop } from './Modal.styled';\n\n// const modalRoot = document.querySelector('#modal_root');\n\nexport const Modal = ({active, className, onClick, setActive, children}) => {\n  const handleKeyDown = e => {\n    if (e.code === 'Escape') {\n        setActive(false);\n        document.body.style.overflow = '';\n    }\n  };\n  window.addEventListener('keydown', handleKeyDown);\n \n  return (    \n  <ModalBackdrop \n    className={active ? \"modal active\" : \"modal\"}\n    onClick={onClick}\n    >\n      {children}\n    </ModalBackdrop>\n  );\n};","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__d3iOA\",\"delContacts\":\"ContactList_delContacts__+Ilco\"};","import React from 'react'\nimport { \n    // useSelector, \n    useDispatch } from 'react-redux';\n// import { getContacts } from 'redux/contacts/contacts-selector';\nimport { Modal } from \"components/Modal/Modal\";\nimport scss from \"./ContactList.module.scss\"\nimport { useState } from 'react';\nimport { deleteContact } from \"redux/contacts/contacts-operation\"; \n\nexport default function ContactsItem({filteredContact}) {\n\n    // const contacts = useSelector(getContacts);\n    const {\n      name, \n      description,\n      phone,\n    _id,\n  } = filteredContact;\n// console.log(filteredContact)\n\nconst dispatch = useDispatch();\n\nconst [modalActive, setModalActive] = useState(false);\n\nfunction closeModal () {\n    setModalActive(false)\n    document.body.style.overflow = '';\n  }\n  return (\n    <>\n    <li className={scss.contactList} key={_id}> \n            <b>Name:</b>  {name} <br />\n            <b>Description:</b>  {description} <br />\n            <b className={scss.tel}>Tel:</b> {phone} \n            <span className={scss.delContacts} \n            onClick={() => setModalActive(true)}>Delete</span>\n            \n            </li>\n            \n   { modalActive && (\n          <Modal\n          onClick={() => closeModal ()}\n          active={modalActive}\n          setActive={setModalActive}>\n\n      <div\n      onClick={e => e.stopPropagation()}\n      // active={modalActive}\n      >\n        Do you really wont to delete?\n          <button\n          onClick={() => \n            \n            { dispatch(deleteContact(_id))}} \n          >\n            yes\n          </button>\n        \n      </div>\n          </Modal>\n         )}\n    </>\n  )\n}\n","// import scss from \"./ContactList.module.scss\"\nimport { useSelector, \n  // useDispatch\n } from 'react-redux';\n// import { useState } from 'react';\nimport { getContacts } from 'redux/contacts/contacts-selector';\nimport  { getFilter }from 'redux/filter/filter-selector';\n// import { deleteContact } from \"redux/contacts/contacts-operation\"; \nimport ContactsItem from \"components/ContactItem/ContactsItem\";\n\n\n\n export const ContactList = () => {\n\n\n    \n    const contacts = useSelector(getContacts);\n\n\n    const filter = useSelector(getFilter);\n    // const dispatch = useDispatch();\n\n\n\n    const getFilteredContact = () => {\n        if (!filter) {\n          return contacts;\n        }\n            const normalizedFilter = filter.toLocaleLowerCase();\n            const filteredContact = contacts.filter(({name}) => {\n            const nornalizedName = name.toLocaleLowerCase();\n            const result = nornalizedName.includes(normalizedFilter);\n            return result;\n          })\n          return filteredContact;\n        };\n\n\n\n\n    return (\n      <>\n            <ul>\n            {getFilteredContact().map(filteredContact => (\n              <ContactsItem\n              key={filteredContact._id}\n              filteredContact={filteredContact}/>\n            // <li className={scss.contactList} key={_id}> \n            // <b>Name:</b>  {name} <br />\n            // <b className={scss.tel}>Tel:</b> {phone} \n            // <span className={scss.delContacts} \n            // onClick={() => setModalActive(true)}>Delete</span>\n            \n            // </li>\n            \n     ))} \n\n         </ul>\n         \n         </>\n    )\n\n         }","// extracted by mini-css-extract-plugin\nexport default {\"contactFilterInput\":\"Filter_contactFilterInput__A7VY6\",\"contactFilterLabel\":\"Filter_contactFilterLabel__EgZcb\",\"contactFilter\":\"Filter_contactFilter__CK3n0\"};","import scss from \"./Filter.module.scss\"\nimport { useSelector, useDispatch } from 'react-redux';\nimport  { getFilter }from 'redux/filter/filter-selector';\nimport { nanoid } from \"nanoid\";\nimport { setFilter } from \"redux/filter/filter-slice\";\n\nconst Filter = () => {\n\n    const filters = useSelector(getFilter);\n    const dispatch = useDispatch();\n\n    const findID = nanoid();\n\n    const  handleChange = (e) => {\n        const {value} = e.target;\n        dispatch(setFilter(value))\n      };\n\nreturn (\n    <div className={scss.contactFilter}>\n              <label\n              className={scss.contactFilterLabel}\n              htmlFor={findID}\n              >Find contacts by name\n              </label>\n              <input \n              className={scss.contactFilterInput}\n              type=\"text\" \n              name=\"filter\" \n              value={filters}\n              onChange={handleChange}\n              title=\"Search\"\n              required\n              />\n          </div>\n)};\n\n  export default Filter;","// extracted by mini-css-extract-plugin\nexport default {\"phoneBook\":\"Contacts_phoneBook__+krXn\",\"titlePhoneBook\":\"Contacts_titlePhoneBook__zzISd\",\"contactForm\":\"Contacts_contactForm__Pmztk\",\"contacts\":\"Contacts_contacts__B9d10\",\"contactsLoading\":\"Contacts_contactsLoading__GlHiY\"};","// import { useEffect } from \"react\";\nimport  ContactForm  from \"../../components/ContactForm/ContactForm\"\nimport {ContactList} from \"../../components/ContactList/ContactList\"\nimport { fetchContacts } from \"redux/contacts/contacts-operation\"\nimport Filter from \"../../components/filter/Filter\"\nimport scss from \"./Contacts.module.scss\"\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { getState } from 'redux/contacts/contacts-selector';\nimport { getContacts } from 'redux/contacts/contacts-selector';\nimport { Modal } from \"components/Modal/Modal\";\n// import UseAuth from \"components/hooks/useAuth\"\n// import { Navigate } from \"react-router-dom\"\n\nexport default function Contacts() {\n\n  const [modalActive, setModalActive] = useState(false);\n\n  function closeModal () {\n    setModalActive(false)\n    document.body.style.overflow = '';\n  }\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n const {loading, error} = useSelector(getState);\n      useEffect(() => {\n          dispatch(fetchContacts());\n          }, [dispatch]);\n  return (\n    <div  className={scss.phoneBook}>\n      <div className={scss.contactForm}>\n      <h2 className={scss.titlePhoneBook}>New Item</h2>\n      { modalActive && (\n        <Modal\n        onClick={() => closeModal ()}\n        active={modalActive}\n        setActive={setModalActive}>\n        <ContactForm \n        onClick={e => e.stopPropagation()}/>\n        </Modal>\n      )}\n      </div>\n      <div className={scss.contacts}>\n      <h2>Contacts</h2>\n        <Filter />\n          {!loading && contacts.length > 0 && <ContactList />}\n          {loading && <p className={scss.contactsLoading}>...loading</p>}\n          {error && <p>oops, something went wrong</p>}\n      </div>\n      <button\n      type=\"button\"\n      onClick={() => setModalActive(true)}>\n        Add Item\n      </button>\n    </div>\n    )\n};","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n"],"names":["getContacts","contacts","items","getState","loading","error","getFilteredContacts","filter","ContactForm","onClick","useSelector","dispatch","useDispatch","useState","name","setName","phone","setPhone","description","setDescription","nameID","nanoid","telID","descriptionID","handleChange","e","currentTarget","value","className","scss","onSubmit","preventDefault","duplicateContacts","find","contact","toLocaleLowerCase","console","log","Notify","addContacts","htmlFor","id","type","pattern","title","required","onChange","getFilter","store","strings","raw","ModalBackdrop","styled","slice","Object","freeze","defineProperties","Modal","active","setActive","children","window","addEventListener","code","document","body","style","overflow","ContactsItem","filteredContact","_id","modalActive","setModalActive","stopPropagation","deleteContact","ContactList","normalizedFilter","includes","getFilteredContact","map","filters","findID","target","setFilter","Contacts","useEffect","fetchContacts","length","size","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase"],"sourceRoot":""}