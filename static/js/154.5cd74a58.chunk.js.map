{"version":3,"file":"static/js/154.5cd74a58.chunk.js","mappings":"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","sources":["Pages/MenuItems/MenuItems.styled.jsx","components/Section/ItemSections/ItemsSections.styled.jsx","components/Section/ModalChangeSectionName/ModalChangeSectionName.styled.jsx","components/Button/Button.jsx","components/Section/ModalSectionDelete/ModalSectionDelete.styled.jsx","components/Section/ModalSectionDelete/ModalSectionDelete.jsx","components/Section/ModalChangeSectionName/ModalChangeSectionName.jsx","components/Section/ItemSections/ItemsSections.jsx","components/QROptions/QROptions.styled.jsx","components/QROptions/QROptions.jsx","components/Item/ModalItemAddForm/ModalItemAddForm.jsx","components/Section/ModalAddSectionForm/ModalAddSectionForm.jsx","components/QRCode/QRCode.styled.jsx","components/QRCode/QRCode.jsx","Pages/MenuItems/ToggleMenu/ToggleButton.styled.jsx","Pages/MenuItems/ToggleMenu/ToggleButton.jsx","Pages/MenuItems/MenuItems.jsx"],"sourcesContent":["import styled, { css } from 'styled-components';\nimport { Btn, TextBtn } from 'components/Button/Button.styled';\nimport { device } from 'Device';\n\nexport const Sections = styled.div`\n    display: flex;\n    /* margin-top: 25px; */\n    padding-left: 5px;\n    padding-right: 5px;\n`  \n\n\nexport const SectionWrap = styled.div`\nheight:calc(100vh - ${props => props.theme.size.navbarHeightMobile});\nposition: relative;\n  background-color: #cbcbcb;\n  transition: \n  width 0.3s cubic-bezier(0.645, 0.045, 0.355, 1);\n  ${props =>\n    props.value &&\n    css`\n      width: 40px;\n    `};\n    @media ${device.tablet} {\n      height:calc(100vh - ${props => props.theme.size.navbarHeightTablet});\n    }; \n    @media ${device.tablet} {\n      height:calc(100vh - ${props => props.theme.size.navbarHeightDesktop});\n    }; \n`\n\nexport const SectionForm = styled.div`\nbox-sizing: border-box;\n    border: 4px;\n    width: 160px;\n    padding-top: 35px;\n    /* display: none; */\n    opacity: 1;\n    /* position: fixed; */\n  /* top: 0; */\n  /* left: 0; */\n  /* width: 100%; */\n  /* height: 90vh; */\n  \n  background-color: #cbcbcb;\n\n  /* transform: translateX(0); */\n\n  transition: \n  transform 0.3s cubic-bezier(0.645, 0.045, 0.355, 1),\n  opacity 0.3s;\n\n  ${props =>\n    props.value &&\n    css`\n      transform: translateX(-100%);\n      opacity: 0;\n    `}\n\n    @media ${device.tablet} {\n        width: 300px;\n    };\n`\n\nexport const AddButton = styled(Btn)`\n        position: relative;\n          right: 0px;\n          height: 25px;\n          margin-top: 10px;\n          min-width: 100px;\n          font-size: 15px;\n          color: #010101;\n`\nexport const AddButtonText = styled(TextBtn)`\n  \n\n`\n","import styled from 'styled-components';\nimport { device } from 'Device';\nimport { NavLink } from 'react-router-dom';\n// import {MdOutlineDriveFileRenameOutline} from 'react-icons/md';\nimport {CiEdit} from 'react-icons/ci';\nimport {MdDeleteForever} from 'react-icons/md';\n\n\n\nexport const Wrapper = styled.div`\n  position: relative;\n\n`;\n\nexport const FilterList = styled.li`\n\n  list-style: none;\n  display: flex;\n  /* &:not(:last-child) { */\n    margin-bottom: 5px;\n/* } */\n  /* justify-content: flex-start; */\n  /* align-items: center; */\n  /* flex-wrap: wrap; */\n  /* gap: 12px; */\n\n`;\n\nexport const Item = styled.li`\n  display: flex;\n`;\n\nexport const Button = styled(NavLink)`\nword-wrap: break-word;\npadding-left: 5px;\n\nbox-sizing: border-box;\n/* list-style: none; */\nborder: none;\nwidth: 77%;\ncolor: #181515;\nfont-size: 20px;\nfont-weight: 900;\n  line-height: 1.35;\n  letter-spacing: 0.04em;\n  \n  border-radius: 5px;\n  transition: color 250ms linear, background-color 250ms linear;\n      &:hover,\n       &:focus {\n        background-color: ${props => props.theme.colors.btnActive};\n        cursor: pointer;\n  }\n\n  &.active {\n   color: #573131;\n   background-color: #749574;\n  }\n\n  @media ${device.tablet} {  \n        width: 100%;\n    };\n`;\nexport const CommonLinks = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  flex-wrap: wrap-reverse;\n  gap: 12px;\n \n`;\nexport const AuthLinks = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  gap: 12px;\n`;\n// const Change = ({ className }) => <MdOutlineDriveFileRenameOutline className={className} />;\nexport const BtnChange = styled.button`\n  border: none;\n  background-color: transparent;\n`\nexport const StyledChange = styled(CiEdit)`\nwidth:  25px;\nheight: 25px;\n  color: red;\n  &:hover,\n       &:focus {\n        color: ${props => props.theme.colors.btnActive};\n        cursor: pointer;\n  }\n  \n`\nexport const DelSection = styled(MdDeleteForever)`\n  color: red;\n  \n`","import styled from 'styled-components';\n\n\n\nexport const BtnList = styled.div`\n  margin-top: 10px;\n`","import { Btn, TextBtn } from './Button.styled';\nimport PropTypes from 'prop-types';\n\nexport const Button = ({style, text, type,\n  onClick\n}) => {\n  return (\n    <Btn \n    style={style}\n    onClick={onClick}\n    type={type}\n    >\n      <TextBtn>{text}</TextBtn>\n    </Btn>\n  );\n};\n\nButton.propTypes = {\n    onClick: PropTypes.func,\n  };","import styled from 'styled-components';\n\nexport const TextWrapper = styled.div`\n    /* width: 250px;\n    height: 100px; */\n    /* border: 1px solid #749574; */\n    font-size: 25px;\n    border: 1px solid rgb(7, 94, 138);\n    border-radius: 5px;\n    padding: 30px 10px 10px 10px;\n    width: 300px;\n    background-color: #919191;\n`\nexport const Text = styled.p`\nmargin-top: 20px;\nmargin-bottom: 20px;\n    font-size: 15px;\n`","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteSection } from 'redux/sections/sections-operation';\nimport { delItemsByCategory } from 'redux/items/items-operation';\nimport { Button } from 'components/Button/Button';\nimport { Text, TextWrapper } from './ModalSectionDelete.styled';\nexport default function ModalSectionDelete({ _id, closeModal }) {\n  const dispatch = useDispatch();\n  console.log(_id);\n  function DelSection() {\n    dispatch(delItemsByCategory(_id));\n    dispatch(deleteSection(_id));\n    closeModal();\n  }\n\n  return (\n    <TextWrapper onClick={e => e.stopPropagation()}>\n      <Text>Do you really wont to delete? All items will also be deleted\n      </Text>\n\n      <Button\n        style={{\n          marginRight: '25px',\n          position: 'relative',\n          right: '0px',\n          height: '25px',\n          padding: '0px 0px',\n          minWidth: '80px',\n          fontSize: 15,\n          color: '#010101',\n        }}\n        text=\"Yes\"\n        type=\"button\"\n        onClick={() => {\n          DelSection();\n        }}\n      />\n      <Button\n        style={{\n          position: 'relative',\n          right: '0px',\n          height: '25px',\n          padding: '0px 0px',\n          minWidth: '80px',\n          fontSize: 15,\n          color: '#010101',\n        }}\n        text=\"No\"\n        type=\"button\"\n        onClick={() => closeModal()}\n      />\n    </TextWrapper>\n  );\n}\n","import { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport { Form, FormInputList, FormInput, FormInputLabel, LabelName } from \"components/common/GeneralStyle/Input.styled\";\nimport {\n  useSelector, \n  useDispatch } from 'react-redux';\nimport { getSections } from 'redux/sections/sections-selector';\nimport { updateSection } from \"redux/sections/sections-operation\"; \nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { BtnList } from \"./ModalChangeSectionName.styled\";\nimport { Modal } from \"components/common/Modal/Modal\";\nimport ModalSectionDelete from \"../ModalSectionDelete/ModalSectionDelete\";\n  import { Button } from \"components/Button/Button\";\n\nexport default function ModalChangeSectionName ({ \n   category, \n   _id,\n   closeModal\n  }) {\n  const sections = useSelector(getSections);\n  \n  const dispatch = useDispatch();\n\n  const [newSectionName, setNewSectionName] = useState(category);\n  const [modalDeleteActive, setModalDeleteActive] = useState(false);\n\n  const sectionNameID = nanoid();\n  console.log(category)\n \n  const handleChange = (e) => {\n        const { name } = e.currentTarget;\n        switch (name) {\n          case 'newSectionName':\n            setNewSectionName ( e.currentTarget.value);\n            break;\n          default:\n            break;\n        }\n      };\n\n  const handleSubmit = (e) => {\n\n        e.preventDefault()\n        const duplicateItems = sections.find(section => section.category.toLocaleLowerCase() === newSectionName.toLocaleLowerCase());\n      \n       \n          if (duplicateItems) {\n            Notify.failure(`${newSectionName} is already in item`)\n            return\n          }\n\n            dispatch(updateSection(\n              {_id, \n                category: newSectionName,              \n              } ));\n                setNewSectionName('');\n              closeModal ();\n      }; \n      \n      function closeModalDelete () {\n        setModalDeleteActive(false)\n        document.body.style.overflow = '';\n      };\n\n      return ( \n        <Form \n        onClick={e => e.stopPropagation()}\n        onSubmit={handleSubmit}\n        >\n          <>\n        <FormInputList>\n          <FormInputLabel htmlFor={sectionNameID}><LabelName>Change Name</LabelName></FormInputLabel>\n          <FormInput \n          id={sectionNameID} \n          type=\"text\" \n          name=\"newSectionName\" \n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may \"\n          required\n          defaultValue={category}\n          onChange={handleChange} />\n        </FormInputList>\n        \n<BtnList>\n        <Button \n        style={{\n          position: 'relative',\n          right: '0px',\n          height: '25px',\n          padding: '0px 0px',\n          minWidth: '80px',\n          fontSize: 15,\n          color: '#010101',\n          marginRight: 'auto',\n          marginLeft: 'auto',\n          \n        }}\n    \n      text=\"Rename\"\n      type=\"submit\"\n      />\n      <Button \n        style={{\n          position: 'relative',\n          right: '0px',\n          height: '25px',\n          minWidth: '110px',\n          fontSize: 15,\n          color: '#632121',\n          marginRight: 'auto',\n          marginLeft: '25px',\n        }}\n    \n      text=\"Delete Section\"\n      type=\"button\"\n      onClick={() => setModalDeleteActive(true)}\n      />\n   </BtnList>\n              { modalDeleteActive && (\n          <Modal\n          onClick={() => closeModalDelete ()}\n          active={modalDeleteActive}\n          setActive={setModalDeleteActive}>\n          <ModalSectionDelete\n          closeModal={closeModalDelete}\n          _id={_id}\n          category={category}\n          />\n          </Modal>\n         )}\n        </>\n        </Form>\n        )\n};","import {useState} from 'react';\nimport { useDispatch} from 'react-redux';\n\nimport { fetchSections } from \"redux/sections/sections-operation\"\n\nimport {\n  Button,\n  FilterList,\n  StyledChange,\n  BtnChange,\n} from './ItemsSections.styled';\nimport { Modal } from 'components/common/Modal/Modal';\nimport ModalChangeSectionName from '../ModalChangeSectionName/ModalChangeSectionName';\n\nfunction ItemsSections({section}) {\n \n  const [ModalChangeSectionActive, setModalChangeSectionActive] = useState(false);\n  const dispatch = useDispatch();\n  function closeModal () {\n    setModalChangeSectionActive(false)\n    \n    document.body.style.overflow = '';\n    dispatch(fetchSections());\n  }\n  const { \n    _id,\n    category,\n  } = section;\n\n  const buttons = [\n    {\n      btn: category,\n      link: _id,\n    }\n  \n  ];\n\n  return (\n    \n      <FilterList\n       key={section._id}\n       >\n          {buttons.map(b => (\n              <Button \n              key={b.link}\n              to={'/items/' + b.link} name={b.link}>\n                {b.btn}\n              </Button>\n          ))}\n          <BtnChange\n          onClick={() => setModalChangeSectionActive(true)}>\n                <StyledChange/>\n              </BtnChange>\n              { ModalChangeSectionActive && (\n          <Modal\n          onClick={() => closeModal ()}\n          active={ModalChangeSectionActive}\n          setActive={setModalChangeSectionActive}>\n          <ModalChangeSectionName\n          closeModal={closeModal}\n          _id={_id}\n          category={category}\n          />\n          </Modal>\n         )}\n        \n      </FilterList>\n    \n  );\n}\n\nexport default ItemsSections;","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport { device } from 'Device';\n\n\nexport const ToLiveLink = styled(NavLink)`\n    /* position: relative;\n    top: 35px;\n    right: 15px; */\n    font-weight: 900;\n    color: #181515;\n    &:hover,\n       &:focus {\n        color: ${props => props.theme.colors.btnActive};\n        cursor: pointer;\n  }\n`\n\nexport const NavbarWrap = styled.div`\n    /* margin-top: 10px;  */\n    text-align: end;\n    min-width: 150px;\n    position: absolute;\n    top:calc(5px + ${props => props.theme.size.navbarHeightMobile});\n    right: 15px;\n    @media ${device.tablet} {\n      top:calc(5px + ${props => props.theme.size.navbarHeightTablet});\n  };\n  @media ${device.desktop} {\n      top:calc(5px + ${props => props.theme.size.navbarHeightDesktop});\n  };\n`\n\n export const CreateQr = styled.p`\n margin-top: 10px;\n  font-weight: bold;\n  \n      &:hover,\n       &:focus {\n        color: ${props => props.theme.colors.btnActive};\n        cursor: pointer;\n  }\n  @media ${device.tablet} {\n    \n    };\n `","// import items from \"./items\"\nimport { nanoid } from \"nanoid\";\n// import { NavLink } from \"react-router-dom\"\nimport { getUser } from \"redux/auth/auth-selector\";\nimport { useSelector } from \"react-redux\";\nimport { ToLiveLink, NavbarWrap, CreateQr } from \"./QROptions.styled\";\n\n\n\nexport default function QROptions({setModalQrActive}) {\n  const user = useSelector(getUser);\n  // console.log(user)\n  const chekName = Boolean(user)\n  const items = chekName ? [\n   \n    {id: nanoid(),\n      to: `/live/${user._id}`,\n      text: \"Go to QR Menu\",\n  },\n    ] : \"\";\n\n\n  \n  return (\n     <NavbarWrap>\n      {chekName ? items.map(({id, to, text}) => {\n            return (\n                // <ToLiveLinkList  key={id}>\n                    <ToLiveLink \n                    key={id} \n                    target=\"_blank\"\n                    rel=\"noreferrer noopener\"\n                    to={to}\n                    end>\n                      {text}\n                     </ToLiveLink>\n                  // </ToLiveLinkList>\n            )})\n         : <></> }\n\n      \n      <CreateQr onClick={() => setModalQrActive(true)}\n      >Create QR</CreateQr>\n      </NavbarWrap>\n    //  </>\n  )\n}","import { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport { Form, FormInputList, FormInputLabel, FormInput } from \"components/common/GeneralStyle/Input.styled\";\nimport {\n  // useSelector, \n  useDispatch } from 'react-redux';\n// import { getFilteredItems } from 'redux/items/items-selector';\n\nimport { addItems } from \"redux/items/items-operation\"; \nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { Button } from \"components/Button/Button\";\n\n\nexport default function ModalItemAddForm ({\n   setModalActive, category, itemsCategory}) {\n  \n  console.log(itemsCategory)\n  const dispatch = useDispatch();\n\n  const [itemName, setItemName] = useState('');\n  const [price, setPrice] = useState('');\n  const [description, setDescription] = useState('');\n  const [section, setSection] = useState(category)\n\n\n  const itemNameID = nanoid();\n  const priceID = nanoid();\n  const descriptionID = nanoid();\n\n  const handleChange = (e) => {\n        const { name } = e.currentTarget;\n        switch (name) {\n          case 'itemName':\n            setItemName ( e.currentTarget.value);\n            break;\n            case 'description':\n              setDescription (e.currentTarget.value);\n            break;\n          case 'price':\n            setPrice (e.currentTarget.value);\n            break;\n          default:\n            break;\n        }\n      };\n\n  const handleSubmit = (e) => {\n\n  \n\n        e.preventDefault()\n        \n        const duplicateItems = itemsCategory.find(itemCategory => itemCategory.itemName.toLocaleLowerCase() === itemName.toLocaleLowerCase());\n      \n       \n          if (duplicateItems) {\n            Notify.failure(`${itemName} is already in item`)\n            return\n          }\n          if (description === \"\") {\n            setSection (category)\n            dispatch(addItems(\n              {itemName, price, section}\n              ));\n              setItemName('');\n            // setDescription('');\n            setPrice('');\n            setSection('');\n            setModalActive(false);\n          }\n          else {\n            setSection (category)\n            dispatch(addItems(\n             {itemName, description, price, section}\n              ));\n              setItemName('');\n              setDescription('');\n              setPrice('');\n              setSection('');\n              setModalActive(false);\n          }\n      }; \n  \n     \n      return ( \n        <Form \n        onClick={e => e.stopPropagation()}\n        onSubmit={handleSubmit}\n        >\n          <>\n        <FormInputList>\n          <FormInputLabel htmlFor={itemNameID}>Name</FormInputLabel>\n          <FormInput \n          id={itemNameID} \n          type=\"text\" \n          name=\"itemName\" \n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={itemName} \n          onChange={handleChange} />\n        </FormInputList>\n        <FormInputList>\n          <FormInputLabel htmlFor={descriptionID}>Description</FormInputLabel>\n          <FormInput \n          id={descriptionID} \n          type=\"text\" \n          name=\"description\" \n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          value={description} \n          onChange={handleChange} />\n        </FormInputList>\n        <FormInputList>\n          <FormInputLabel htmlFor={priceID}>Price</FormInputLabel>\n          <FormInput \n          id={priceID} \n          type=\"number\" \n          name=\"price\" \n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          value={price} \n          onChange={handleChange} \n          required/>\n        </FormInputList>\n\n        <Button \n        style={{\n          position: 'relative',\n          marginTop: '10px',\n          right: '0px',\n          \n        }}\n    \n      text=\"Add Item\"\n      type=\"submit\"\n      // onClick={() => setModalSectionActive(true)}\n      />\n        </>\n        </Form>\n        )\n};","import { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport { Form, FormInputList, FormInputLabel, FormInput } from \"components/common/GeneralStyle/Input.styled\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getSections } from 'redux/sections/sections-selector';\nimport { addSection } from \"redux/sections/sections-operation\"; \nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { Button } from \"components/Button/Button\";\n\nexport default function ModalAddSectionForm ({onClick, setModalSectionActive}) {\n  // console.log(setModalSectionActive)\n  const sections = useSelector(getSections);\n  // console.log(sections)\n  \n  const dispatch = useDispatch();\n\n  const [category, setCategory] = useState('');\n  \n\n\n  const sectionNameID = nanoid();\n;\n\n  const handleChange = (e) => {\n        const { name } = e.currentTarget;\n        switch (name) {\n          case 'category':\n            setCategory ( e.currentTarget.value);\n            break;\n          default:\n            break;\n        }\n      };\n\n  const handleSubmit = (e) => {\n\n          e.preventDefault()\n        const duplicateSections = sections.find(section => section.category.toLocaleLowerCase() === category.toLocaleLowerCase());\n      \n          if (duplicateSections) {\n            Notify.failure(`${category} is already in item`)\n            return\n          }\n              dispatch(addSection({category}));\n              setCategory('');\n              setModalSectionActive(false);\n      }; \n\n      return ( \n        <Form \n        onClick={e => e.stopPropagation()}\n        onSubmit={handleSubmit}\n        >\n          <>\n        <FormInputList>\n          <FormInputLabel htmlFor={sectionNameID}>Name</FormInputLabel>\n          <FormInput \n          id={sectionNameID} \n          type=\"text\" \n          name=\"category\" \n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={category} \n          onChange={handleChange} />\n        </FormInputList>\n       \n        <Button \n        style={{\n          position: 'relative',\n          right: '0px',\n          height: '25px',\n          padding: '0px 0px',\n          minWidth: '80px',\n          fontSize: 15,\n          color: '#010101',\n        }}\n    \n      text=\"Add\"\n      type=\"submit\"\n      />\n        </>\n        </Form>\n        )\n};","import styled from 'styled-components';\n// import { device } from 'Device';\nimport { Btn, TextBtn } from 'components/Button/Button.styled';\n\nexport const Wrapper = styled.div`\n    display: grid;\n    justify-content: center;\n    width: 400px;\n    height: 450px;\n    z-index: 1;\nbackground-color: #919191;\n    border: 1px solid rgb(7, 94, 138);\n`\nexport const Title = styled.h1`\n    margin-top: 10px;\n    margin-bottom: 10px;\n    font-size: 22px;\n`\nexport const QrName = styled.p`\n    padding-top: 5px;\n    padding-bottom: 10px;\n`\nexport const QrWrap = styled.div`\n/* display: flex; */\n    width: 300px;\n    height: 300px;\n    /* margin: auto; */\n    margin-bottom: 15px;\n    background-color: #fff;\n`\nexport const Button = styled(Btn)`\n    \n`\nexport const Text = styled(TextBtn)`\n    \n`","import React, { useRef } from 'react';\nimport QRCode from 'react-qr-code';\n\nimport { getUser } from \"redux/auth/auth-selector\";\nimport { useSelector } from \"react-redux\";\n\nimport * as htmlToImage from 'html-to-image';\n\nimport { Wrapper, Title, QrName, QrWrap, Button, Text } from './QRCode.styled';\n\nfunction QrResult() {\n\n  const user = useSelector(getUser);\n\n  const protocol = window.location.protocol;\n  const hostname = window.location.hostname;\n  // Перевіряємо, чи встановлений порт\n  const port = window.location.port ? `:${window.location.port}` : '';\n  const pathAfterHostname = window.location.pathname;\n   // Розбиваємо шлях на частини\n   const pathParts = pathAfterHostname.split('/');\n   // Перший підкаталог після доменного імені\n   const firstSubdirectory = pathParts[1];\n  // Складаємо початок адреси\n  const baseURL = `${protocol}//${hostname}${port}/${firstSubdirectory}`;\n\n\n  const wey = `${baseURL}/live/${user._id}`\n\n\nconst ref = useRef(null)\n\n\nconst saveQRCode = async () => {\n  const svgElement = ref.current; // Отримання посилання на SVG-елемент за допомогою useRef\n\n  if (!svgElement) {\n    console.error('SVG елемент не знайдено');\n    return;\n  }\n  console.log(svgElement)\n  htmlToImage.toPng(svgElement)\n    .then(function (dataUrl) {\n      const link = document.createElement('a');\n      link.href = dataUrl;\n      link.download = `QRCode-${user.name}.png`;\n      link.click();\n    })\n    .catch(function (error) {\n      console.error('Помилка при конвертації SVG в PNG:', error);\n    });\n};\n\n\n  return (\n    <Wrapper\n    onClick={e => e.stopPropagation()}>\n      <Title>QR Code {user.name}</Title>\n<QrWrap\nref={ref}\n>\n  <QrName\n  >{user.name}</QrName>\n      <QRCode \n      value={wey} \n      />\n      </QrWrap>\n      <Button onClick={saveQRCode}>\n        <Text>Зберегти QR-код</Text></Button>\n    </Wrapper>\n  );\n}\nexport default QrResult;","import styled from 'styled-components';\nimport { TbArrowsLeft } from \"react-icons/tb\";\nimport { TbArrowsRight } from \"react-icons/tb\";\n\nexport const MenuButton = styled.button`\nposition: absolute;\ntop: 0px;\nright: 0px;\n /* z-index: 1000; */\n  display: block;\n  height: 30px;\n  outline: 0;\n  border: 0;\n  padding: 5px 5px 0px 5px;\n  /* padding-left: 5px;\n  padding-top: 5px; */\n  background: none;\n\n  /* span {\n    transition: all 0.3s cubic-bezier(0.645, 0.045, 0.355, 1);\n  } */\n\n  /* :focus {\n    border: medium none rgb(111, 255, 176);\n    box-shadow: rgb(111, 255, 176) 0 0 2px 2px;\n    outline: 0;\n  } */\n\n  &:hover,\n  :focus{\n    border: medium none rgb(111, 255, 176);\n    box-shadow: rgb(111, 255, 176) 0 0 2px 2px;\n    /* outline: 0; */\n    /* span:nth-of-type(1) {\n      width: 33px;\n    }\n\n    span:nth-of-type(2) {\n      width: 40px;\n    }\n\n    span:nth-of-type(3) {\n      width: 30px;\n    } */\n  }\n\n  &.active {\n\n    /* span:nth-of-type(1) {\n      transform: rotate(45deg) translate(10px, 10px);\n      width: 40px;\n    }\n\n    span:nth-of-type(2) {\n      opacity: 0;\n      pointer-events: none;\n    }\n\n    span:nth-of-type(3) {\n      transform: rotate(-45deg) translate(7px, -7px);\n      width: 40px;\n    } */\n  }\n`;\n\n// export const Bar = styled.span`\n//   display: block;\n//   width: 40px;\n//   height: 5px;\n//   margin-bottom: 7px;\n//   background-color: #6b0707;\n// `;\n\nexport const BarOpen  = styled(TbArrowsRight)`\n  width: 30px;\n  height: 30px;\n`\nexport const BarClose  = styled(TbArrowsLeft)`\n  width: 30px;\n  height: 30px;\n`","import React, { useContext } from 'react';\n// import styled from 'styled-components';\nimport { MenuContext } from './navState';\nimport { MenuButton, BarClose, BarOpen } from './ToggleButton.styled';\n\n\nconst HamburgerButton = () => {\n  const { isMenuClose, toggleMenuMode } = useContext(MenuContext);\n\n  const clickHandler = () => {\n    toggleMenuMode();\n  };\n\n  return (\n    <MenuButton\n      // className={isMenuOpen ? 'active' : ''}\n    //   aria-label=\"Открыть главное меню\"\n      onClick={clickHandler}\n    >{isMenuClose ? <BarOpen />  : <BarClose />} \n      {/* <BarClose />\n      <BarOpen /> */}\n      {/* <Bar />\n      <Bar /> */}\n    </MenuButton>\n  );\n};\n\nexport default HamburgerButton;","import { useEffect, useState, useContext } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\n\nimport {\n  Sections,\n  SectionForm,\n  SectionWrap,\n  AddButton,\n  AddButtonText,\n} from './MenuItems.styled';\n\nimport { fetchItems } from 'redux/items/items-operation';\nimport { getItemsByCategory } from 'redux/items/items-selector';\nimport { getSections } from 'redux/sections/sections-selector';\nimport { fetchSections } from 'redux/sections/sections-operation';\n\nimport { Modal } from 'components/common/Modal/Modal';\nimport ItemsSections from 'components/Section/ItemSections/ItemsSections';\nimport MenuItemsDetails from 'components/MenuItemsDetails/MenuItemsDetails';\nimport QROptions from 'components/QROptions/QROptions';\nimport ModalItemAddForm from '../../components/Item/ModalItemAddForm/ModalItemAddForm';\nimport ModalAddSectionForm from 'components/Section/ModalAddSectionForm/ModalAddSectionForm';\nimport QrResult from 'components/QRCode/QRCode';\n\nimport { MenuContext } from './ToggleMenu/navState';\nimport HamburgerButton from './ToggleMenu/ToggleButton';\nimport NavState from 'Pages/MenuItems/ToggleMenu/navState';\n\nexport default function MenuItems() {\n  const location = useLocation();\n  const category = location.pathname.split('/')[2];\n\n  const [modalActive, setModalActive] = useState(false);\n  const [modalAddSectionActive, setModalAddSectionActive] = useState(false);\nconst   [modalQrActive, setModalQrActive] = useState(false);\n\n  const dispatch = useDispatch();\n  const itemsCategory = useSelector(getItemsByCategory);\n  const sections = useSelector(getSections);\n\n  const SideMenu = () => {\n    const { isMenuClose } = useContext(MenuContext);\n    \n\n    return (\n      <>\n        {/* <SectionWrap close={isMenuClose} > */}\n        <SectionWrap value={isMenuClose} >\n          <HamburgerButton value={isMenuClose} />\n          <SectionForm value={isMenuClose} >\n            <ul>\n              {sections.map((section) => (\n                <ItemsSections \n                key={section._id}\n                section={section}></ItemsSections>\n              ))}\n            </ul>\n            <AddButton\n              type=\"button\"\n              onClick={() => setModalAddSectionActive(true)}\n            >\n              <AddButtonText>Add Section</AddButtonText>\n            </AddButton>\n          </SectionForm>\n        </SectionWrap>\n      </>\n    );\n  };\n\n  function closeModal() {\n    setModalActive(false);\n    setModalAddSectionActive(false);\n    setModalQrActive(false);\n    document.body.style.overflow = '';\n  }\n  useEffect(() => {\n    dispatch(fetchItems());\n    dispatch(fetchSections());\n  }, [dispatch]);\n\n  return (\n    <>\n      <QROptions \n      setModalQrActive={setModalQrActive}/>\n      {/* <CreateQrWrap>\n      <CreateQr onClick={() => setModalQrActive(true)}\n      >Create QR</CreateQr>\n      </CreateQrWrap> */}\n      \n          {modalQrActive && (\n            <Modal\n            onClick={() => closeModal()}\n            active={modalQrActive}\n            setActive={setModalQrActive}\n          >\n            <QrResult></QrResult>\n          </Modal>\n          )\n\n          }\n      <Sections>\n        <NavState>\n          <SideMenu />\n          {modalAddSectionActive && (\n            <Modal\n              onClick={() => closeModal()}\n              active={modalAddSectionActive}\n              setActive={setModalAddSectionActive}\n            >\n              <ModalAddSectionForm\n                onClick={e => e.stopPropagation()}\n                setModalSectionActive={setModalAddSectionActive}\n              />\n            </Modal>\n          )}\n          {modalActive && (\n            <Modal\n              onClick={() => closeModal()}\n              active={modalActive}\n              setActive={setModalActive}\n            >\n              <ModalItemAddForm\n                onClick={e => e.stopPropagation()}\n                setModalActive={setModalActive}\n                category={category}\n                itemsCategory={itemsCategory}\n              />\n            </Modal>\n          )}\n          <MenuItemsDetails setModalActive={setModalActive} />\n        </NavState>\n      </Sections>\n    </>\n  );\n}\n"],"names":["Sections","styled","div","_templateObject","_taggedTemplateLiteral","SectionWrap","_templateObject2","props","theme","size","navbarHeightMobile","value","css","_templateObject3","device","tablet","navbarHeightTablet","navbarHeightDesktop","SectionForm","_templateObject4","_templateObject5","AddButton","Btn","_templateObject6","AddButtonText","TextBtn","_templateObject7","FilterList","li","Button","NavLink","colors","btnActive","BtnChange","button","StyledChange","CiEdit","_templateObject8","MdDeleteForever","_templateObject9","BtnList","_ref","style","text","type","onClick","_jsx","children","TextWrapper","Text","p","ModalSectionDelete","_id","closeModal","dispatch","useDispatch","console","log","_jsxs","e","stopPropagation","marginRight","position","right","height","padding","minWidth","fontSize","color","delItemsByCategory","deleteSection","ModalChangeSectionName","category","sections","useSelector","getSections","_useState","useState","_useState2","_slicedToArray","newSectionName","setNewSectionName","_useState3","_useState4","modalDeleteActive","setModalDeleteActive","sectionNameID","nanoid","closeModalDelete","document","body","overflow","Form","onSubmit","preventDefault","find","section","toLocaleLowerCase","Notify","failure","concat","updateSection","_Fragment","FormInputList","FormInputLabel","htmlFor","LabelName","FormInput","id","name","pattern","title","required","defaultValue","onChange","currentTarget","marginLeft","Modal","active","setActive","ModalChangeSectionActive","setModalChangeSectionActive","fetchSections","buttons","btn","link","map","b","to","ToLiveLink","NavbarWrap","desktop","CreateQr","QROptions","setModalQrActive","user","getUser","chekName","Boolean","items","_ref2","target","rel","end","ModalItemAddForm","setModalActive","itemsCategory","itemName","setItemName","price","setPrice","_useState5","_useState6","description","setDescription","_useState7","_useState8","setSection","itemNameID","priceID","descriptionID","handleChange","itemCategory","addItems","marginTop","ModalAddSectionForm","setModalSectionActive","setCategory","addSection","Wrapper","Title","h1","QrName","QrWrap","_regeneratorRuntime","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","protocol","window","location","hostname","port","firstSubdirectory","pathname","split","baseURL","wey","ref","useRef","saveQRCode","_asyncToGenerator","_callee","svgElement","_context","current","error","htmlToImage","dataUrl","createElement","href","download","click","apply","arguments","QRCode","MenuButton","BarOpen","TbArrowsRight","BarClose","TbArrowsLeft","_useContext","useContext","MenuContext","isMenuClose","toggleMenuMode","MenuItems","useLocation","modalActive","modalAddSectionActive","setModalAddSectionActive","modalQrActive","getItemsByCategory","SideMenu","HamburgerButton","ItemsSections","useEffect","fetchItems","QrResult","NavState","MenuItemsDetails"],"sourceRoot":""}