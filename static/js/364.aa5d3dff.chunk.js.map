{"version":3,"file":"static/js/364.aa5d3dff.chunk.js","mappings":"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","sources":["components/Item/ModalItemAddForm/ModalItemAddForm.jsx","components/Section/ModalAddSectionForm/ModalAddSectionForm.jsx","Pages/MenuItems/MenuItems.styled.jsx","components/Section/ItemSections/ItemsSections.styled.jsx","components/Section/ModalChangeSectionName/ModalChangeSectionName.styled.jsx","components/Section/ModalSectionDelete/ModalSectionDelete.styled.jsx","components/Section/ModalSectionDelete/ModalSectionDelete.jsx","components/Section/ModalChangeSectionName/ModalChangeSectionName.jsx","components/Section/ItemSections/ItemsSections.jsx","components/Navbar/NavbarLive/NavbarLive.styled.jsx","components/Navbar/NavbarLive/NavbarLive.jsx","Pages/MenuItems/MenuItems.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport { Form, FormInputList, FormInputLabel, FormInput } from \"components/common/Input.styled\";\nimport {\n  // useSelector, \n  useDispatch } from 'react-redux';\n// import { getFilteredItems } from 'redux/items/items-selector';\n\nimport { addItems } from \"redux/items/items-operation\"; \nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { Button } from \"components/Button/Button\";\n\n\nexport default function ModalItemAddForm ({\n  // onClick,\n   setModalActive, category, itemsCategory}) {\n  // const items = useSelector(getFilteredItems);\n  // console.log(\"category\", category)\n  console.log(itemsCategory)\n  const dispatch = useDispatch();\n\n  const [itemName, setItemName] = useState('');\n  const [price, setPrice] = useState('');\n  const [description, setDescription] = useState('');\n  const [section, setSection] = useState(category)\n// console.log(section)\n  // const [datat, setDatat] = useState({\n  //   name: '',\n  //   description: '',\n  //   phone: '',\n\n  // });\n\n  const itemNameID = nanoid();\n  const priceID = nanoid();\n  const descriptionID = nanoid();\n\n  const handleChange = (e) => {\n        const { name } = e.currentTarget;\n        switch (name) {\n          case 'itemName':\n            setItemName ( e.currentTarget.value);\n            break;\n            case 'description':\n              setDescription (e.currentTarget.value);\n            break;\n          case 'price':\n            setPrice (e.currentTarget.value);\n            break;\n          default:\n            break;\n        }\n      };\n\n  const handleSubmit = (e) => {\n\n    // const { name, description, phone } = values;\n\n    // const data = new FormData();\n\n    // data.append('name', name);\n    // data.append('description', description);\n    // data.append('phone', phone);\n\n        e.preventDefault()\n        \n        const duplicateItems = itemsCategory.find(itemCategory => itemCategory.itemName.toLocaleLowerCase() === itemName.toLocaleLowerCase());\n      \n       \n          if (duplicateItems) {\n            Notify.failure(`${itemName} is already in item`)\n            return\n          }\n          if (description === \"\") {\n            setSection (category)\n            dispatch(addItems(\n              {itemName, price, section}\n              ));\n              setItemName('');\n            // setDescription('');\n            setPrice('');\n            setSection('');\n            setModalActive(false);\n          }\n          else {\n            setSection (category)\n            dispatch(addItems(\n             {itemName, description, price, section}\n              ));\n              setItemName('');\n              setDescription('');\n              setPrice('');\n              setSection('');\n              setModalActive(false);\n          }\n      }; \n  \n     \n      return ( \n        <Form \n        onClick={e => e.stopPropagation()}\n        onSubmit={handleSubmit}\n        >\n          <>\n        <FormInputList>\n          <FormInputLabel htmlFor={itemNameID}>Name</FormInputLabel>\n          <FormInput \n          id={itemNameID} \n          type=\"text\" \n          name=\"itemName\" \n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={itemName} \n          onChange={handleChange} />\n        </FormInputList>\n        <FormInputList>\n          <FormInputLabel htmlFor={descriptionID}>Description</FormInputLabel>\n          <FormInput \n          id={descriptionID} \n          type=\"text\" \n          name=\"description\" \n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          value={description} \n          onChange={handleChange} />\n        </FormInputList>\n        <FormInputList>\n          <FormInputLabel htmlFor={priceID}>Price</FormInputLabel>\n          <FormInput \n          id={priceID} \n          type=\"number\" \n          name=\"price\" \n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          value={price} \n          onChange={handleChange} \n          required/>\n        </FormInputList>\n\n        <Button \n        style={{\n          position: 'relative',\n          marginTop: '10px',\n          right: '0px',\n          \n        }}\n    \n      text=\"Add Item\"\n      type=\"submit\"\n      // onClick={() => setModalSectionActive(true)}\n      />\n        {/* <button \n        // onClick={values => handleSubmit(values)}\n        className={scss.formBtn}\n        type=\"submit\">Add</button> */}\n        </>\n        </Form>\n        )\n};","import { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport { Form, FormInputList, FormInputLabel, FormInput } from \"components/common/Input.styled\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getSections } from 'redux/sections/sections-selector';\nimport { addSection } from \"redux/sections/sections-operation\"; \nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { Button } from \"components/Button/Button\";\n\nexport default function ModalAddSectionForm ({onClick, setModalSectionActive}) {\n  // console.log(setModalSectionActive)\n  const sections = useSelector(getSections);\n  // console.log(sections)\n  \n  const dispatch = useDispatch();\n\n  const [category, setCategory] = useState('');\n  \n\n  // const [datat, setDatat] = useState({\n  //   name: '',\n  //   description: '',\n  //   phone: '',\n\n  // });\n\n  const sectionNameID = nanoid();\n;\n\n  const handleChange = (e) => {\n        const { name } = e.currentTarget;\n        switch (name) {\n          case 'category':\n            setCategory ( e.currentTarget.value);\n            break;\n          default:\n            break;\n        }\n      };\n\n  const handleSubmit = (e) => {\n\n    // const { name, description, phone } = values;\n\n    // const data = new FormData();\n\n    // data.append('name', name);\n    // data.append('description', description);\n    // data.append('phone', phone);\n\n        e.preventDefault()\n        const duplicateSections = sections.find(section => section.category.toLocaleLowerCase() === category.toLocaleLowerCase());\n      \n       \n          if (duplicateSections) {\n            Notify.failure(`${category} is already in item`)\n            return\n          }\n              dispatch(addSection({category}));\n              setCategory('');\n              setModalSectionActive(false);\n          \n      }; \n\n\n      return ( \n        <Form \n        onClick={e => e.stopPropagation()}\n        onSubmit={handleSubmit}\n        >\n          <>\n        <FormInputList>\n          <FormInputLabel htmlFor={sectionNameID}>Name</FormInputLabel>\n          <FormInput \n          id={sectionNameID} \n          type=\"text\" \n          name=\"category\" \n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={category} \n          onChange={handleChange} />\n        </FormInputList>\n       \n        <Button \n        style={{\n          position: 'relative',\n          right: '0px',\n          height: '25px',\n          padding: '0px 0px',\n          minWidth: '80px',\n          fontSize: 15,\n          color: '#010101',\n        }}\n    \n      text=\"Add\"\n      type=\"submit\"\n      // onClick={() => setModalActive(true)}\n      />\n        {/* <button \n        // onClick={values => handleSubmit(values)}\n        className={scss.formBtn}\n        type=\"submit\">Add</button> */}\n        </>\n        </Form>\n        )\n};","import styled from 'styled-components';\n\n\nexport const Sections = styled.div`\n/* color: white; */\n    /* color: rgb(38, 146, 179); */\n    display: flex;\n    margin-top: 25px;\n    /* margin-left: 15px; */\n    padding-left: 5px;\n    padding-right: 5px;\n`\n export const BtnAddSection = styled.button`\n\n padding: 10px 10px;\n border: none;\n    border-radius: 5px;\n    background-color: ${props => props.theme.colors.btn};\n        &:hover,\n       &:focus {\n        background-color: ${props => props.theme.colors.btnActive};\n        cursor: pointer;\n  }\n `   \nexport const SectionForm = styled.div`\n    border: 4px;\n    width: 150px;\n`\n\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n// import {MdOutlineDriveFileRenameOutline} from 'react-icons/md';\nimport {CiEdit} from 'react-icons/ci';\nimport {MdDeleteForever} from 'react-icons/md';\n\n\n\nexport const Wrapper = styled.div`\n  position: relative;\n\n`;\n\nexport const FilterList = styled.li`\n\n  list-style: none;\n  display: flex;\n  /* &:not(:last-child) { */\n    margin-bottom: 5px;\n/* } */\n  /* justify-content: flex-start; */\n  /* align-items: center; */\n  /* flex-wrap: wrap; */\n  /* gap: 12px; */\n\n`;\n\nexport const Item = styled.li`\n  display: flex;\n`;\n\nexport const Button = styled(NavLink)`\n/* list-style: none; */\nborder: none;\nwidth: 100%;\ncolor: #181515;\nfont-weight: 900;\n  line-height: 1.35;\n  letter-spacing: 0.04em;\n  \n  border-radius: 5px;\n  transition: color 250ms linear, background-color 250ms linear;\n      &:hover,\n       &:focus {\n        background-color: ${props => props.theme.colors.btnActive};\n        cursor: pointer;\n  }\n\n  &.active {\n   color: #573131;\n   background-color: #749574;\n  }\n\n`;\nexport const CommonLinks = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  flex-wrap: wrap-reverse;\n  gap: 12px;\n \n`;\nexport const AuthLinks = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  gap: 12px;\n`;\n// const Change = ({ className }) => <MdOutlineDriveFileRenameOutline className={className} />;\nexport const BtnChange = styled.button`\n  border: none;\n  background-color: transparent;\n`\nexport const StyledChange = styled(CiEdit)`\n  color: red;\n  \n`\nexport const DelSection = styled(MdDeleteForever)`\n  color: red;\n  \n`","import styled from 'styled-components';\n\n\n\nexport const BtnList = styled.div`\n  margin-top: 10px;\n`","import styled from 'styled-components';\n\nexport const TextWrapper = styled.div`\n    width: 250px;\n    height: 100px;\n    /* border: 1px solid #749574; */\n`\nexport const Text = styled.p`\nmargin-top: 30px;\nmargin-bottom: 20px;\n    font-size: 15px;\n`","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteSection } from 'redux/sections/sections-operation';\nimport { delItemsByCategory } from 'redux/items/items-operation';\nimport { Button } from 'components/Button/Button';\nimport { Text, TextWrapper } from './ModalSectionDelete.styled';\nexport default function ModalSectionDelete({ _id, closeModal }) {\n  const dispatch = useDispatch();\n  console.log(_id);\n  function DelSection() {\n    dispatch(delItemsByCategory(_id));\n    dispatch(deleteSection(_id));\n    closeModal();\n  }\n\n  return (\n    <TextWrapper onClick={e => e.stopPropagation()}>\n      <Text>Do you really wont to delete? All items will also be deleted\n      </Text>\n\n      <Button\n        style={{\n          marginRight: '25px',\n          position: 'relative',\n          right: '0px',\n          height: '25px',\n          padding: '0px 0px',\n          minWidth: '80px',\n          fontSize: 15,\n          color: '#010101',\n        }}\n        text=\"Yes\"\n        type=\"button\"\n        onClick={() => {\n          DelSection();\n        }}\n      />\n      <Button\n        style={{\n          position: 'relative',\n          right: '0px',\n          height: '25px',\n          padding: '0px 0px',\n          minWidth: '80px',\n          fontSize: 15,\n          color: '#010101',\n        }}\n        text=\"No\"\n        type=\"button\"\n        onClick={() => closeModal()}\n      />\n    </TextWrapper>\n  );\n}\n","import { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport { Form, FormInputList, FormInput, FormInputLabel, LabelName } from \"components/common/Input.styled\";\nimport {\n  useSelector, \n  useDispatch } from 'react-redux';\nimport { getSections } from 'redux/sections/sections-selector';\nimport { updateSection } from \"redux/sections/sections-operation\"; \nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { BtnList } from \"./ModalChangeSectionName.styled\";\nimport { Modal } from \"components/common/Modal/Modal\";\nimport ModalSectionDelete from \"../ModalSectionDelete/ModalSectionDelete\";\n  import { Button } from \"components/Button/Button\";\n\nexport default function ModalChangeSectionName ({ \n   category, \n   _id,\n   closeModal\n  }) {\n  const sections = useSelector(getSections);\n  \n  const dispatch = useDispatch();\n\n  const [newSectionName, setNewSectionName] = useState(category);\n  const [modalDeleteActive, setModalDeleteActive] = useState(false);\n\n  const sectionNameID = nanoid();\n \n \n  const handleChange = (e) => {\n        const { name } = e.currentTarget;\n        switch (name) {\n          case 'newSectionName':\n            setNewSectionName ( e.currentTarget.value);\n            break;\n          default:\n            break;\n        }\n      };\n\n  const handleSubmit = (e) => {\n\n        e.preventDefault()\n        const duplicateItems = sections.find(section => section.category.toLocaleLowerCase() === newSectionName.toLocaleLowerCase());\n      \n       \n          if (duplicateItems) {\n            Notify.failure(`${newSectionName} is already in item`)\n            return\n          }\n\n            dispatch(updateSection(\n              {_id, \n                category: newSectionName,              \n              } ));\n                setNewSectionName('');\n              closeModal ();\n      }; \n      \n      function closeModalDelete () {\n        setModalDeleteActive(false)\n        document.body.style.overflow = '';\n      };\n\n      return ( \n        <Form \n        onClick={e => e.stopPropagation()}\n        onSubmit={handleSubmit}\n        >\n          <>\n        <FormInputList>\n          <FormInputLabel htmlFor={sectionNameID}><LabelName>Change Name</LabelName></FormInputLabel>\n          <FormInput \n          id={sectionNameID} \n          type=\"text\" \n          name=\"newSectionName\" \n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may \"\n          required\n          defaultValue={category}\n          onChange={handleChange} />\n        </FormInputList>\n        \n<BtnList>\n        <Button \n        style={{\n          position: 'relative',\n          right: '0px',\n          height: '25px',\n          padding: '0px 0px',\n          minWidth: '80px',\n          fontSize: 15,\n          color: '#010101',\n          marginRight: 'auto',\n          marginLeft: 'auto',\n          \n        }}\n    \n      text=\"Rename\"\n      type=\"submit\"\n      />\n      <Button \n        style={{\n          position: 'relative',\n          right: '0px',\n          height: '25px',\n          minWidth: '110px',\n          fontSize: 15,\n          color: '#632121',\n          marginRight: 'auto',\n          marginLeft: '25px',\n        }}\n    \n      text=\"Delete Section\"\n      type=\"button\"\n      onClick={() => setModalDeleteActive(true)}\n      />\n   </BtnList>\n              { modalDeleteActive && (\n          <Modal\n          onClick={() => closeModalDelete ()}\n          active={modalDeleteActive}\n          setActive={setModalDeleteActive}>\n          <ModalSectionDelete\n          closeModal={closeModalDelete}\n          _id={_id}\n          category={category}\n          />\n          </Modal>\n         )}\n        </>\n        </Form>\n        )\n};","import {useState} from 'react';\nimport { \n  // useSelector,\n  useDispatch} from 'react-redux';\n// import { getSections } from 'redux/sections/sections-selector';\n// import { selectIsLoggedIn } from 'redux/auth/authSelectors';\nimport { nanoid } from 'nanoid';\nimport {\n  Button,\n  FilterList,\n  StyledChange,\n  BtnChange,\n  // Item,\n  // Wrapper,\n  // AuthLinks,\n  // CommonLinks,\n} from './ItemsSections.styled';\nimport { Modal } from 'components/common/Modal/Modal';\nimport ModalChangeSectionName from '../ModalChangeSectionName/ModalChangeSectionName';\n// import { useEffect } from \"react\";\n// import {  geItemsByCategory } from \"redux/items/items-operation\";\nimport { fetchSections } from \"redux/sections/sections-operation\"\n\n// const btnId = nanoid();\n// const sectionId = nanoid();\n\n// const authButtons = [\n//   {\n//     btn: 'favorite ads',\n//     link: 'favorites-ads',\n//   },\n//   {\n//     btn: 'my ads',\n//     link: 'my-ads',\n//   },\n// ];\n\nfunction ItemsSections({section}) {\n  // const sections = useSelector(getSections);\n  // console.log(section)\n  const [modalActive, setModalActive] = useState(false);\n  const dispatch = useDispatch();\n  function closeModal () {\n    setModalActive(false)\n    \n    document.body.style.overflow = '';\n    dispatch(fetchSections());\n  }\n  const { \n    _id,\n    category,\n  } = section;\n  // console.log(category)\n\n  const buttons = [\n    {\n      btn: category,\n      link: _id,\n    }\n  \n  ];\n  // const isLoggedIn = useSelector(selectIsLoggedIn);\n\n  return (\n    // <Wrapper>\n      <FilterList key={nanoid()}>\n        {/* <CommonLinks> */}\n        \n          {buttons.map(b => (\n            // <Item key={btnId}>\n              <Button \n              key={nanoid()}\n              to={'/items/' + b.link} name={b.link}>\n                {b.btn}\n              </Button>\n              \n            //  </Item>\n          ))}\n          <BtnChange\n          key={nanoid()}\n          onClick={() => setModalActive(true)}>\n                <StyledChange/>\n              </BtnChange>\n              { modalActive && (\n          <Modal\n          onClick={() => closeModal ()}\n          active={modalActive}\n          setActive={setModalActive}>\n          <ModalChangeSectionName\n          closeModal={closeModal}\n          _id={_id}\n          category={category}\n          />\n     \n          </Modal>\n         )}\n        {/* </CommonLinks> */}\n        {/* <AuthLinks>\n          {isLoggedIn &&\n            authButtons.map(b => (\n              <Item key={nanoid()}>\n                <Button to={'/items/' + b.link} name={b.link}>\n                  {b.btn}\n                </Button>\n              </Item>\n            ))}\n        </AuthLinks> */}\n      </FilterList>\n    // </Wrapper>\n  );\n}\n\nexport default ItemsSections;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const ToLiveLinkList = styled.div`\n    display: flex;\n    flex-direction: row-reverse;\n\n`\nexport const ToLiveLink = styled(NavLink)`\n    position: relative;\n    top: 5px;\n    right: 15px;\n    font-weight: 900;\n    color: #181515;\n    &:hover,\n       &:focus {\n        color: ${props => props.theme.colors.btnActive};\n        cursor: pointer;\n  }\n`","// import items from \"./items\"\nimport { nanoid } from \"nanoid\";\n// import { NavLink } from \"react-router-dom\"\nimport { getUser } from \"redux/auth/auth-selector\";\nimport { useSelector } from \"react-redux\";\nimport { ToLiveLink, ToLiveLinkList } from \"./NavbarLive.styled\";\n\n\n\nexport default function NavbarLive() {\n  const user = useSelector(getUser);\n  console.log(user)\n  const chekName = Boolean(user)\n  const items = chekName ? [\n   \n    {id: nanoid(),\n      to: `/live/${user._id}`,\n      text: \"Go to QR Menu\",\n  },\n   \n    ] : \"\";\n\n\n  \n  return (\n    <ToLiveLinkList>\n      {chekName ? items.map(({id, to, text}) => {\n            return (\n                // <li  key={id}>\n                    <ToLiveLink  \n                    target=\"_blank\"\n                    rel=\"noreferrer noopener\"\n                    to={to}\n                    end>\n                      {text}\n                     </ToLiveLink>\n                // </li>\n            )})\n         : <></> }\n\n        \n    </ToLiveLinkList>\n  )\n}","// import { useEffect } from \"react\";\nimport  ModalItemAddForm  from \"../../components/Item/ModalItemAddForm/ModalItemAddForm\"\nimport ModalAddSectionForm from \"components/Section/ModalAddSectionForm/ModalAddSectionForm\"\n// import {ItemList} from \"../../components/Item/ItemList/ItemList\"\nimport { \n  fetchItems,\n  //  geItemsByCategory\n   } from \"redux/items/items-operation\"\n// import Filter from \"../../components/filter/Filter\"\nimport { Sections, SectionForm,\n  //  BtnAddSection \n  } from \"./MenuItems.styled\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\n// import { getState } from 'redux/items/items-selector';\nimport { \n  // getItems,\n   getItemsByCategory } from 'redux/items/items-selector';\nimport { getSections } from \"redux/sections/sections-selector\"\nimport { Modal } from \"components/common/Modal/Modal\";\nimport ItemsSections from \"components/Section/ItemSections/ItemsSections\"\nimport { useLocation,\n  // useParams\n  //  useSearchParams\n   } from 'react-router-dom'\n// import UseAuth from \"components/hooks/useAuth\"\n// import { Navigate } from \"react-router-dom\"\nimport { fetchSections } from \"redux/sections/sections-operation\"\n// import {  allUsers } from \"redux/user/user-operation\";\nimport MenuItemsDetails from \"components/MenuItemsDetails/MenuItemsDetails\"\nimport NavbarLive from \"components/Navbar/NavbarLive/NavbarLive\"\nimport { Button } from \"components/Button/Button\";\n\nexport default function MenuItems() {\n\n\n  const location = useLocation();\n  const category = location.pathname.split('/')[2];\n  // console.log(\"category\", category)\n  const [modalActive, setModalActive] = useState(false);\n  const [modalSectionActive, setModalSectionActive] = useState(false);\n\n\n\n  function closeModal () {\n    setModalActive(false)\n    setModalSectionActive(false)\n    document.body.style.overflow = '';\n  }\n\n  const dispatch = useDispatch();\n  // const items = useSelector(getItems);\n  const itemsCategory = useSelector(getItemsByCategory);\n  const sections = useSelector(getSections);\n  // console.log(\"sections\", sections)\n  // console.log(sections)\n//  const {loading, error} = useSelector(getState);\n\n\n      useEffect(() => {\n        // dispatch(allUsers())\n          dispatch(fetchItems());\n          dispatch(fetchSections());\n          \n        \n            // if (category === undefined) {\n              \n            // }\n            // else {\n             \n            //   dispatch(geItemsByCategory({category: category}))\n            // }\n          \n          }, \n           [ dispatch\n            // category, \n            // , items\n          ]\n          );\n\n    // const { category } = useParams();\n    // console.log(category)\n  return (\n    <>\n    <NavbarLive/>\n    <Sections  >\n      <SectionForm >\n        <ul>\n          {sections.map(section =>\n           <ItemsSections\n           section={section}\n           ></ItemsSections>)\n        }\n        </ul>\n        <Button \n        style={{\n          position: 'relative',\n          right: '0px',\n          height: '25px',\n          padding: '0px 0px',\n          minWidth: '100px',\n          fontSize: 15,\n          color: '#010101'\n        }}\n    \n      text=\"Add Section\"\n      type=\"button\"\n      onClick={() => setModalSectionActive(true)}\n      />\n        {/* <Button\n      typAdd Sectione=\"button\"\n      onClick={() => setModalSectionActive(true)}>\n        \n      </Button> */}\n      { modalSectionActive && (\n        <Modal\n        onClick={() => closeModal ()}\n        active={modalSectionActive}\n        setActive={setModalSectionActive}>\n        <ModalAddSectionForm \n        onClick={e => e.stopPropagation()}\n        setModalSectionActive={setModalSectionActive}\n        />\n        </Modal>\n      )}\n      { modalActive && (\n        <Modal\n        onClick={() => closeModal ()}\n        active={modalActive}\n        setActive={setModalActive}>\n        <ModalItemAddForm \n        onClick={e => e.stopPropagation()}\n        setModalActive={setModalActive}\n        category={category}\n        itemsCategory={itemsCategory}\n        />\n        </Modal>\n      )}\n      </SectionForm>\n      <MenuItemsDetails \n      setModalActive={setModalActive}\n      />\n      {/* <div className={scss.contacts}>\n      <h2>Menu</h2>\n        <Filter />\n          {!loading && items.length > 0 && \n          <ItemList\n          items={items} \n          itemsCategory={itemsCategory}\n          />}\n          {loading && <p className={scss.contactsLoading}>...loading</p>}\n          {error && <p>No items yet</p>}\n      </div>\n      <button\n      type=\"button\"\n      onClick={() => setModalActive(true)}>\n        Add Item\n      </button> */}\n    </Sections>\n    </>\n    )\n};"],"names":["ModalItemAddForm","_ref","setModalActive","category","itemsCategory","console","log","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","itemName","setItemName","_useState3","_useState4","price","setPrice","_useState5","_useState6","description","setDescription","_useState7","_useState8","section","setSection","itemNameID","nanoid","priceID","descriptionID","handleChange","e","currentTarget","name","value","_jsx","Form","onClick","stopPropagation","onSubmit","preventDefault","find","itemCategory","toLocaleLowerCase","Notify","concat","addItems","children","_jsxs","_Fragment","FormInputList","FormInputLabel","htmlFor","FormInput","id","type","pattern","title","required","onChange","Button","style","position","marginTop","right","text","ModalAddSectionForm","setModalSectionActive","sections","useSelector","getSections","setCategory","sectionNameID","addSection","height","padding","minWidth","fontSize","color","Sections","styled","_templateObject","_taggedTemplateLiteral","SectionForm","_templateObject2","props","theme","colors","btn","btnActive","_templateObject3","FilterList","NavLink","_templateObject4","BtnChange","_templateObject5","_templateObject6","_templateObject7","StyledChange","CiEdit","_templateObject8","BtnList","MdDeleteForever","_templateObject9","TextWrapper","Text","ModalSectionDelete","_id","closeModal","marginRight","delItemsByCategory","deleteSection","ModalChangeSectionName","newSectionName","setNewSectionName","modalDeleteActive","setModalDeleteActive","closeModalDelete","document","body","overflow","updateSection","LabelName","defaultValue","marginLeft","Modal","active","setActive","modalActive","fetchSections","buttons","link","map","b","to","ToLiveLinkList","ToLiveLink","NavbarLive","user","getUser","chekName","Boolean","items","target","rel","end","MenuItems","useLocation","pathname","split","modalSectionActive","getItemsByCategory","useEffect","fetchItems","ItemsSections","MenuItemsDetails"],"sourceRoot":""}