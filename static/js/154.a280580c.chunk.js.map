{"version":3,"file":"static/js/154.a280580c.chunk.js","mappings":"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","sources":["Pages/MenuItems/MenuItems.styled.jsx","components/Section/ItemSections/ItemsSections.styled.jsx","components/Section/ModalChangeSectionName/ModalChangeSectionName.styled.jsx","components/Button/Button.jsx","components/Section/ModalSectionDelete/ModalSectionDelete.styled.jsx","components/Section/ModalSectionDelete/ModalSectionDelete.jsx","components/Section/ModalChangeSectionName/ModalChangeSectionName.jsx","components/Section/ItemSections/ItemsSections.jsx","components/QROptions/QROptions.styled.jsx","components/QROptions/QROptions.jsx","components/Item/ModalItemAddForm/ModalItemAddForm.jsx","components/Section/ModalAddSectionForm/ModalAddSectionForm.jsx","components/QRCode/QRCode.styled.jsx","components/QRCode/QRCode.jsx","Pages/MenuItems/ToggleMenu/ToggleButton.styled.jsx","Pages/MenuItems/ToggleMenu/ToggleButton.jsx","Pages/MenuItems/MenuItems.jsx"],"sourcesContent":["import styled, { css } from 'styled-components';\nimport { Btn, TextBtn } from 'components/Button/Button.styled';\nimport { device } from 'Device';\n\nexport const Sections = styled.div`\n    display: flex;\n    /* margin-top: 25px; */\n    padding-left: 5px;\n    padding-right: 5px;\n`  \n\nexport const SectionWrapWrap = styled.div`\n  \n\n`\nexport const SectionWrap = styled.div`\nheight:calc(100vh - ${props => props.theme.size.navbarHeightMobile});\n\n  background-color: #cbcbcb;\n\n  \n  position: fixed;\n    top: ${props => props.theme.size.navbarHeightMobile};\n    /* left: 0px; */\n    z-index:  500;\n    overflow-y: auto;\n\n    scrollbar-width: none;\n\n  transition: \n  width 0.3 s ease;\n  \n  ${props =>\n    props.value &&\n    css`\n    /* position: relative; */\n      width: 40px;\n    `};\n    @media ${device.tablet} {\n      height:calc(100vh - ${props => props.theme.size.navbarHeightTablet});\n      top: ${props => props.theme.size.navbarHeightTablet};\n    }; \n    @media ${device.desktop} {\n      height:calc(100vh - ${props => props.theme.size.navbarHeightDesktop});\n      top: ${props => props.theme.size.navbarHeightDesktop};\n    }; \n`\n\nexport const SectionForm = styled.div`\nbox-sizing: border-box;\n    border: 4px;\n    width: 160px;\n    padding-top: 35px;\n    /* display: none; */\n    opacity: 1;\n    /* position: fixed; */\n  /* top: 0; */\n  /* left: 0; */\n  /* width: 100%; */\n  /* height: 90vh; */\n  \n  \n  background-color: #cbcbcb;\n\n  /* transform: translateX(0); */\n\n  transition: \n  transform 1s cubic-bezier(0.645, 0.045, 0.355, 1),\n  opacity 2s;\n\n  ${props =>\n    props.value &&\n    css`\n      transform: translateX(-100%);\n      opacity: 0;\n    `}\n\n    @media ${device.tablet} {\n        width: 300px;\n    };\n`\n\nexport const AddButton = styled(Btn)`\n        position: relative;\n          right: 0px;\n          height: 25px;\n          margin-top: 10px;\n          min-width: 100px;\n          font-size: 15px;\n          color: #010101;\n`\nexport const AddButtonText = styled(TextBtn)`\n  \n\n`\n","import styled from 'styled-components';\nimport { device } from 'Device';\n// import { NavLink } from 'react-router-dom';\n// import {MdOutlineDriveFileRenameOutline} from 'react-icons/md';\nimport {CiEdit} from 'react-icons/ci';\nimport {MdDeleteForever} from 'react-icons/md';\nimport { MdOutlineKeyboardDoubleArrowUp, MdOutlineKeyboardDoubleArrowDown  } from \"react-icons/md\";\n\n\n\nexport const Wrapper = styled.div`\n  position: relative;\n\n`;\n\nexport const FilterList = styled.li`\n\n\n\n  list-style: none;\n  display: flex;\n  /* &:not(:last-child) { */\n    margin-bottom: 5px;\n\n    min-height: 48px;\n  background-color: #cbcbcb;\n    border-radius: 10px;\n    box-shadow: 7px 20px 14px rgba(10, 4, 1, 0.1);\n    margin-bottom: 10px;\n  \n  transition: color 250ms linear, background-color 250ms linear;\n    &:hover,\n       &:focus {\n        background-color: ${props => props.theme.colors.btnActive};\n        cursor: pointer;\n  }\n`;\n\nexport const Item = styled.li`\n  display: flex;\n`;\n\nexport const Button = styled.a`\nword-wrap: break-word;\npadding-left: 5px;\n\n\nbox-sizing: border-box;\nborder: none;\nwidth: 70%;\ncolor: #181515;\nfont-size: 20px;\nfont-weight: 900;\n  line-height: 1.35;\n  letter-spacing: 0.04em;\n  border-radius: 5px;\n  \n  ${FilterList}:first-child & {\n    width: 100%;\n    @media ${device.tablet} {  \n        width: 100%;\n    };\n    };\n    ${FilterList}:last-child & {\n    width: 100%;\n    @media ${device.tablet} {  \n        width: 100%;\n    };\n    };\n    \n  @media ${device.tablet} {  \n        width: 100%;\n    };\n`;\n\nexport const ex = styled.div`\n  \n  \n\n`\n\nexport const CommonLinks = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  flex-wrap: wrap-reverse;\n  gap: 12px;\n \n`;\nexport const AuthLinks = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  gap: 12px;\n`;\n// const Change = ({ className }) => <MdOutlineDriveFileRenameOutline className={className} />;\nexport const BtnChange = styled.button`\n  border: none;\n  background-color: transparent;\n  padding: 0;\n`\nexport const StyledChange = styled(CiEdit)`\nwidth:  25px;\nheight: 25px;\n\n  color: red;\n  &:hover,\n       &:focus {\n        color: ${props => props.theme.colors.btnActive};\n        cursor: pointer;\n  }\n  \n`\nexport const DelSection = styled(MdDeleteForever)`\n  color: red;\n  \n`\nexport const MoveButtonSection = styled.button`\n  border: none;\n  background-color: inherit;\n  padding: 0;\n  width: 20px;\n  &:hover,\n       &:focus {\n        color: ${props => props.theme.colors.btnActive};\n        cursor: pointer;\n  }\n`\nexport const MoveUpSection = styled(MdOutlineKeyboardDoubleArrowUp)`\n  height: 20px;\n    width: 20px;\n`\nexport const MoveDownSection = styled(MdOutlineKeyboardDoubleArrowDown)`\nheight: 20px;\n    width: 20px;\n`\nexport const FilterListWrap = styled.ul`\n\n   li.active {\n    \n  color: #573131;\n  background-color: #749574;\n\n}\n`\nexport const MoveButtonWrap = styled.div`\n    \n    width: 20px;\n`\n\n","import styled from 'styled-components';\n\n\n\nexport const BtnList = styled.div`\n  margin-top: 10px;\n`","import { Btn, TextBtn } from './Button.styled';\nimport PropTypes from 'prop-types';\n\nexport const Button = ({style, text, type,\n  onClick\n}) => {\n  return (\n    <Btn \n    style={style}\n    onClick={onClick}\n    type={type}\n    >\n      <TextBtn>{text}</TextBtn>\n    </Btn>\n  );\n};\n\nButton.propTypes = {\n    onClick: PropTypes.func,\n  };","import styled from 'styled-components';\n\nexport const TextWrapper = styled.div`\n    /* width: 250px;\n    height: 100px; */\n    /* border: 1px solid #749574; */\n    font-size: 25px;\n    border: 1px solid rgb(7, 94, 138);\n    border-radius: 5px;\n    padding: 30px 10px 10px 10px;\n    width: 300px;\n    background-color: #919191;\n`\nexport const Text = styled.p`\nmargin-top: 20px;\nmargin-bottom: 20px;\n    font-size: 15px;\n`","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteSection } from 'redux/sections/sections-operation';\nimport { delItemsByCategory } from 'redux/items/items-operation';\nimport { Button } from 'components/Button/Button';\nimport { Text, TextWrapper } from './ModalSectionDelete.styled';\nexport default function ModalSectionDelete({ _id, closeModal }) {\n  const dispatch = useDispatch();\n  console.log(_id);\n  function DelSection() {\n    dispatch(delItemsByCategory(_id));\n    dispatch(deleteSection(_id));\n    closeModal();\n  }\n\n  return (\n    <TextWrapper onClick={e => e.stopPropagation()}>\n      <Text>Do you really wont to delete? All items will also be deleted\n      </Text>\n\n      <Button\n        style={{\n          marginRight: '25px',\n          position: 'relative',\n          right: '0px',\n          height: '25px',\n          padding: '0px 0px',\n          minWidth: '80px',\n          fontSize: 15,\n          color: '#010101',\n        }}\n        text=\"Yes\"\n        type=\"button\"\n        onClick={() => {\n          DelSection();\n        }}\n      />\n      <Button\n        style={{\n          position: 'relative',\n          right: '0px',\n          height: '25px',\n          padding: '0px 0px',\n          minWidth: '80px',\n          fontSize: 15,\n          color: '#010101',\n        }}\n        text=\"No\"\n        type=\"button\"\n        onClick={() => closeModal()}\n      />\n    </TextWrapper>\n  );\n}\n","import { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport { Form, FormInputList, FormInput, FormInputLabel, LabelName } from \"components/common/GeneralStyle/Input.styled\";\nimport {\n  useSelector, \n  useDispatch } from 'react-redux';\nimport { getSections } from 'redux/sections/sections-selector';\nimport { updateSection } from \"redux/sections/sections-operation\"; \nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { BtnList } from \"./ModalChangeSectionName.styled\";\nimport { Modal } from \"components/common/Modal/Modal\";\nimport ModalSectionDelete from \"../ModalSectionDelete/ModalSectionDelete\";\n  import { Button } from \"components/Button/Button\";\n\nexport default function ModalChangeSectionName ({ \n   category, \n   _id,\n   idSort,\n   closeModal\n  }) {\n  const sections = useSelector(getSections);\n  \n  const dispatch = useDispatch();\nconsole.log(\"idSort\", idSort)\n  const [newSectionName, setNewSectionName] = useState(category);\n  // const [newIdSort, setNewIdSort] = useState(idSort);\n\n  const [modalDeleteActive, setModalDeleteActive] = useState(false);\n\n  const sectionNameID = nanoid();\n  console.log(_id)\n  console.log(category)\n \n  const handleChange = (e) => {\n        const { name } = e.currentTarget;\n        switch (name) {\n          case 'newSectionName':\n            setNewSectionName ( e.currentTarget.value);\n            break;\n          default:\n            break;\n        }\n      };\n\n  const handleSubmit = (e) => {\n\n        e.preventDefault()\n        const duplicateItems = sections.find(section => section.category.toLocaleLowerCase() === newSectionName.toLocaleLowerCase());\n      \n       \n          if (duplicateItems) {\n            Notify.failure(`${newSectionName} is already in item`)\n            return\n          }\n\n            dispatch(updateSection(\n               {\n                _id,\n                idSort,\n                category: newSectionName,              \n              } ));\n                setNewSectionName('');\n              closeModal ();\n      }; \n      \n      function closeModalDelete () {\n        setModalDeleteActive(false)\n        document.body.style.overflow = '';\n      };\n\n      return ( \n        <Form \n        onClick={e => e.stopPropagation()}\n        onSubmit={handleSubmit}\n        >\n          <>\n        <FormInputList>\n          <FormInputLabel htmlFor={sectionNameID}><LabelName>Change Name</LabelName></FormInputLabel>\n          <FormInput \n          id={sectionNameID} \n          type=\"text\" \n          name=\"newSectionName\" \n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may \"\n          required\n          defaultValue={category}\n          onChange={handleChange} />\n        </FormInputList>\n        \n<BtnList>\n        <Button \n        style={{\n          position: 'relative',\n          right: '0px',\n          height: '25px',\n          padding: '0px 0px',\n          minWidth: '80px',\n          fontSize: 15,\n          color: '#010101',\n          marginRight: 'auto',\n          marginLeft: 'auto',\n          \n        }}\n    \n      text=\"Rename\"\n      type=\"submit\"\n      />\n      <Button \n        style={{\n          position: 'relative',\n          right: '0px',\n          height: '25px',\n          minWidth: '110px',\n          fontSize: 15,\n          color: '#632121',\n          marginRight: 'auto',\n          marginLeft: '25px',\n        }}\n    \n      text=\"Delete Section\"\n      type=\"button\"\n      onClick={() => setModalDeleteActive(true)}\n      />\n   </BtnList>\n              { modalDeleteActive && (\n          <Modal\n          onClick={() => closeModalDelete ()}\n          active={modalDeleteActive}\n          setActive={setModalDeleteActive}>\n          <ModalSectionDelete\n          closeModal={closeModalDelete}\n          _id={_id}\n          category={category}\n          />\n          </Modal>\n         )}\n        </>\n        </Form>\n        )\n};","import {useState, useEffect, useRef  } from 'react';\nimport { useDispatch} from 'react-redux';\n\nimport { fetchSections, updateSection } from \"redux/sections/sections-operation\"\nimport { getSections } from 'redux/sections/sections-selector';\n\nimport {\n  Button,\n  FilterList,\n  StyledChange,\n  BtnChange,\n  MoveButtonSection,\n  MoveUpSection,\n  MoveDownSection,\n  FilterListWrap,\n  MoveButtonWrap\n} from './ItemsSections.styled';\nimport { Modal } from 'components/common/Modal/Modal';\nimport ModalChangeSectionName from '../ModalChangeSectionName/ModalChangeSectionName';\n\nimport {  useSelector } from 'react-redux';\n\nimport { useNavigate  } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\n\nfunction ItemsSections() {\n \n  const [ModalChangeSectionActive, setModalChangeSectionActive] = useState(false);\n    const [state, setState] = useState({\n    idTarget: \"\",\n    idSortTarget: \"\",\n    valueTarget: \"\",\n  });\n  \n\n  const [activeIndex, setActiveIndex] = useState(() => {\n    const savedIndex = localStorage.getItem('activeIndex');\n    return savedIndex !== null ? JSON.parse(savedIndex) : null;\n  });\n  \n\n  // const listRef = useRef(null);\n  const buttonClickedRef = useRef(false); // Використання useRef для buttonClicked\n\n  const navigate = useNavigate();\n  const location = useLocation();\n  const dispatch = useDispatch();\n  \n  function closeModal () {\n    setModalChangeSectionActive(false)\n    document.body.style.overflow = '';\n    // dispatch(fetchSections());\n  };\n \n  const sections = useSelector(getSections);\n\n\n  const handleSectionChange = (item) => {\n    buttonClickedRef.current = true;\n    setState({\n      idTarget: item._id,\n      idSortTarget: item.idSort,\n      valueTarget: item.category,\n    });\n    setModalChangeSectionActive(true)\n    \n      };\n\n  const handleDownSection = (item, index) => {\n    // setButtonClicked(true)\n    buttonClickedRef.current = true;\nconst downIdSort = sections[index + 1].idSort;  //// над поточним IdSort\nconst tempIdSort = sections[index].idSort; //// поточний IdSort\nconst downElement = sections.find(item => item.idSort === downIdSort);\n\n\n///// оновлення idSort поточного елемента /////////\n        dispatch(updateSection({\n          _id: item._id,\n          idSort: downIdSort,\n          category: item.category\n        }));\n ///// оновлення idSort верхнього елемента /////////       \n        dispatch(updateSection({\n          _id: downElement._id,\n          idSort: tempIdSort,\n          category: downElement.category\n        }));\n        \n        setTimeout(() => {\n          navigate(location.pathname);\n          dispatch(fetchSections());\n        }, 300)\n       \n      };\n\n  const handleUpSection = (event, item, index) => {\nconsole.log(\"location.pathname\", location.pathname)\n    // setButtonClicked(true); // Позначаємо, що була натиснута кнопка\n    buttonClickedRef.current = true; // Позначаємо, що була натиснута кнопка\n    \n    \n        const upIdSort = sections[index - 1].idSort;  //// над поточним IdSort\n        const tempIdSort = sections[index].idSort; //// поточний IdSort\n        const upElement = sections.find(item => item.idSort === upIdSort);\n        \n        \n        ///// оновлення idSort поточного елемента /////////\n                dispatch(updateSection({\n                  _id: item._id,\n                  idSort: upIdSort,\n                  category: item.category\n                }));\n         ///// оновлення idSort верхнього елемента /////////       \n         dispatch(updateSection({\n                  _id: upElement._id,\n                  idSort: tempIdSort,\n                  category: upElement.category\n                }));\n\n\n                setTimeout(() => {\n                  navigate(location.pathname);\n                  dispatch(fetchSections());\n                }, 300)\n          \n          // event.stopPropagation()\n              };\n\n\n              \nconst handleSection = (event, index, item) => {\n  event.preventDefault();\n  console.log(\"item\", item._id)\n  // const scrollPosition = listRef.current.scrollTop;\n  if (!buttonClickedRef.current) {\n  setActiveIndex(item._id)\n  // setButtonClicked(true);\n  \nsetTimeout(() => {\n  const sectionsId = sections[index]._id;\n  navigate('/items/' + sectionsId);\n}, 300);\n  }\n  \n  buttonClickedRef.current = false; // Скидаємо значення після кліку\n\n}\n              // console.log(\"activeIndex\", activeIndex)\n\n              useEffect(() => {\n                localStorage.setItem('activeIndex', JSON.stringify(activeIndex));\n              console.log(\"useeffect\")\n               },[activeIndex]);\n\n\n  return (\n    <>\n    <FilterListWrap\n    >\n          {sections.map((item, index) => (\n                       \n            <FilterList\n       key={index}\n       id={item._id}\n      //  className={ (index  === activeIndex  ? \"active\" : \"\")\n      //  || (`${index}`=== activeIndex  ? \"active\" : \"\")\n      // } \n      className={ (item._id  === activeIndex  ? \"active\" : \"\")\n       || (`${item._id}`=== activeIndex  ? \"active\" : \"\")\n      } \n       onClick={(event) => handleSection(event, index, item)}\n       >\n                 \n        <MoveButtonWrap>\n        {index !== 0 && (\n        <MoveButtonSection\n        onClick={(event) => handleUpSection(event, item, index)}>\n          <MoveUpSection/>\n        </MoveButtonSection>\n        )}\n        {index !== sections.length - 1 && (\n              <MoveButtonSection\n              onClick={() => handleDownSection(item, index)}\n              >\n          <MoveDownSection/>\n        </MoveButtonSection>\n        )}\n        </MoveButtonWrap>\n              <Button \n              key={item._id}\n              // to={'/items/' + item._id} \n              >\n               \n                {item.category}\n              </Button>\n              \n              <BtnChange\n              id={item._id}\n              onClick={() => handleSectionChange(item)}\n          >\n                <StyledChange/>\n              </BtnChange>\n              </FilterList>\n              \n          ))}\n          </FilterListWrap>\n             {ModalChangeSectionActive && (\n          <Modal\n          onClick={() => closeModal ()}\n          active={ModalChangeSectionActive}\n          setActive={setModalChangeSectionActive}\n          >\n          <ModalChangeSectionName\n          closeModal={closeModal}\n          _id={state.idTarget}\n          idSort={state.idSortTarget}\n          category={state.valueTarget}\n          />\n          </Modal>\n         )} \n        </>  \n  );\n}\n\nexport default ItemsSections;\n\n\n\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport { device } from 'Device';\n\n\nexport const ToLiveLink = styled(NavLink)`\n    /* position: relative;\n    top: 35px;\n    right: 15px; */\n    font-weight: 900;\n    color: #181515;\n    &:hover,\n       &:focus {\n        color: ${props => props.theme.colors.btnActive};\n        cursor: pointer;\n  }\n`\n\nexport const NavbarWrap = styled.div`\n    /* margin-top: 10px;  */\n    text-align: end;\n    min-width: 150px;\n    position: absolute;\n    top:calc(5px + ${props => props.theme.size.navbarHeightMobile});\n    right: 15px;\n    @media ${device.tablet} {\n      top:calc(5px + ${props => props.theme.size.navbarHeightTablet});\n  };\n  @media ${device.desktop} {\n      top:calc(5px + ${props => props.theme.size.navbarHeightDesktop});\n  };\n`\n\n export const CreateQr = styled.p`\n margin-top: 10px;\n  font-weight: bold;\n  \n      &:hover,\n       &:focus {\n        color: ${props => props.theme.colors.btnActive};\n        cursor: pointer;\n  }\n  @media ${device.tablet} {\n    \n    };\n `","// import items from \"./items\"\nimport { nanoid } from \"nanoid\";\n// import { NavLink } from \"react-router-dom\"\nimport { getUser } from \"redux/auth/auth-selector\";\nimport { useSelector } from \"react-redux\";\nimport { ToLiveLink, NavbarWrap, CreateQr } from \"./QROptions.styled\";\n\n\n\nexport default function QROptions({setModalQrActive}) {\n  const user = useSelector(getUser);\n  // console.log(user)\n  const chekName = Boolean(user)\n  const items = chekName ? [\n   \n    {id: nanoid(),\n      to: `/live/${user._id}`,\n      text: \"Go to QR Menu\",\n  },\n    ] : \"\";\n\n\n  \n  return (\n     <NavbarWrap>\n      {chekName ? items.map(({id, to, text}) => {\n            return (\n                // <ToLiveLinkList  key={id}>\n                    <ToLiveLink \n                    key={id} \n                    target=\"_blank\"\n                    rel=\"noreferrer noopener\"\n                    to={to}\n                    end>\n                      {text}\n                     </ToLiveLink>\n                  // </ToLiveLinkList>\n            )})\n         : <></> }\n\n      \n      <CreateQr onClick={() => setModalQrActive(true)}\n      >Create QR</CreateQr>\n      </NavbarWrap>\n    //  </>\n  )\n}","import { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport { Form, FormInputList, FormInputLabel, FormInput } from \"components/common/GeneralStyle/Input.styled\";\nimport {\n  // useSelector, \n  useDispatch } from 'react-redux';\n// import { getFilteredItems } from 'redux/items/items-selector';\n\nimport { addItems } from \"redux/items/items-operation\"; \nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { Button } from \"components/Button/Button\";\n\n\nexport default function ModalItemAddForm ({\n   setModalActive, category, itemsCategory}) {\n  \n  console.log(itemsCategory)\n  const dispatch = useDispatch();\n\n  const [itemName, setItemName] = useState('');\n  const [price, setPrice] = useState('');\n  const [description, setDescription] = useState('');\n  const [section, setSection] = useState(category)\n\n\n  const itemNameID = nanoid();\n  const priceID = nanoid();\n  const descriptionID = nanoid();\n\n  const handleChange = (e) => {\n        const { name } = e.currentTarget;\n        switch (name) {\n          case 'itemName':\n            setItemName ( e.currentTarget.value);\n            break;\n            case 'description':\n              setDescription (e.currentTarget.value);\n            break;\n          case 'price':\n            setPrice (e.currentTarget.value);\n            break;\n          default:\n            break;\n        }\n      };\n\n      // Функція для отримання максимального значення idSort в масиві\n      const getMaxIdSort = (itemsCategory) => {\n        return itemsCategory.reduce((max, item) => {\n          console.log(\"max\", max)\n          console.log(\"item\", item)\n            return Math.max(max, parseInt(item.idSort));\n        }, 0);\n      };\n\n  const handleSubmit = (e) => {\n\n    const maxIdSort = getMaxIdSort(itemsCategory);\n    console.log(\"maxIdSort\", maxIdSort)\n\n        e.preventDefault()\n        \n        const duplicateItems = itemsCategory.find(itemCategory => itemCategory.itemName.toLocaleLowerCase() === itemName.toLocaleLowerCase());\n      \n       \n          if (duplicateItems) {\n            Notify.failure(`${itemName} is already in item`)\n            return\n          }\n           else {\n            setSection (category)\n            dispatch(addItems(\n             {itemName, \n              description, \n              price, \n              section,\n              idSort: (maxIdSort + 1).toString()}\n              ));\n              setItemName('');\n              setDescription('');\n              setPrice('');\n              setSection('');\n              setModalActive(false);\n          }\n      }; \n  \n     \n      return ( \n        <Form \n        onClick={e => e.stopPropagation()}\n        onSubmit={handleSubmit}\n        >\n          <>\n        <FormInputList>\n          <FormInputLabel htmlFor={itemNameID}>Name</FormInputLabel>\n          <FormInput \n          id={itemNameID} \n          type=\"text\" \n          name=\"itemName\" \n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={itemName} \n          onChange={handleChange} />\n        </FormInputList>\n        <FormInputList>\n          <FormInputLabel htmlFor={descriptionID}>Description</FormInputLabel>\n          <FormInput \n          id={descriptionID} \n          type=\"text\" \n          name=\"description\" \n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          value={description} \n          onChange={handleChange} />\n        </FormInputList>\n        <FormInputList>\n          <FormInputLabel htmlFor={priceID}>Price</FormInputLabel>\n          <FormInput \n          id={priceID} \n          type=\"number\" \n          name=\"price\" \n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          value={price} \n          onChange={handleChange} \n          required/>\n        </FormInputList>\n\n        <Button \n        style={{\n          position: 'relative',\n          marginTop: '10px',\n          right: '0px',\n          \n        }}\n    \n      text=\"Add Item\"\n      type=\"submit\"\n      // onClick={() => setModalSectionActive(true)}\n      />\n        </>\n        </Form>\n        )\n};","import { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport { Form, FormInputList, FormInputLabel, FormInput } from \"components/common/GeneralStyle/Input.styled\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getSections } from 'redux/sections/sections-selector';\nimport { addSection } from \"redux/sections/sections-operation\"; \nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { Button } from \"components/Button/Button\";\n\nexport default function ModalAddSectionForm ({setModalSectionActive}) {\n  // console.log(setModalSectionActive)\n  const sections = useSelector(getSections);\n  console.log(sections)\n  \n  const dispatch = useDispatch();\n\n  const [category, setCategory] = useState('');\n  \n  \n\n\n  const sectionNameID = nanoid();\n;\n\n  const handleChange = (e) => {\n        const { name } = e.currentTarget;\n        switch (name) {\n          case 'category':\n            setCategory ( e.currentTarget.value);\n            break;\n          default:\n            break;\n        }\n      };\n\n      // Функція для отримання максимального значення idSort в масиві\nconst getMaxIdSort = (sections) => {\n  return sections.reduce((max, section) => {\n      return Math.max(max, parseInt(section.idSort));\n  }, 0);\n};\n\n  const handleSubmit = (e) => {\n\n    const maxIdSort = getMaxIdSort(sections);\n    // console.log((maxIdSort + 1).toString(),)\n          e.preventDefault()\n        const duplicateSections = sections.find(section => section.category.toLocaleLowerCase() === category.toLocaleLowerCase());\n      \n          if (duplicateSections) {\n            Notify.failure(`${category} is already in item`)\n            return\n          }\n              dispatch(addSection({\n                idSort: (maxIdSort + 1).toString(),\n                category}));\n              setCategory('');\n              setModalSectionActive(false);\n      }; \n\n      return ( \n        <Form \n        onClick={e => e.stopPropagation()}\n        onSubmit={handleSubmit}\n        >\n          <>\n        <FormInputList>\n          <FormInputLabel htmlFor={sectionNameID}>Name</FormInputLabel>\n          <FormInput \n          id={sectionNameID} \n          type=\"text\" \n          name=\"category\" \n          pattern=\"^[^0-9].*\"\n          title=\"A section cannot start with a number\"\n          required\n          value={category} \n          onChange={handleChange} />\n        </FormInputList>\n       \n        <Button \n        style={{\n          position: 'relative',\n          right: '0px',\n          height: '25px',\n          padding: '0px 0px',\n          minWidth: '80px',\n          fontSize: 15,\n          color: '#010101',\n        }}\n    \n      text=\"Add\"\n      type=\"submit\"\n      />\n        </>\n        </Form>\n        )\n};","import styled from 'styled-components';\n// import { device } from 'Device';\nimport { Btn, TextBtn } from 'components/Button/Button.styled';\n\nexport const Wrapper = styled.div`\n    display: grid;\n    justify-content: center;\n    width: 400px;\n    height: 450px;\n    z-index: 1;\nbackground-color: #919191;\n    border: 1px solid rgb(7, 94, 138);\n`\nexport const Title = styled.h1`\n    margin-top: 10px;\n    margin-bottom: 10px;\n    font-size: 22px;\n`\nexport const QrName = styled.p`\n    padding-top: 5px;\n    padding-bottom: 10px;\n`\nexport const QrWrap = styled.div`\n/* display: flex; */\n    width: 300px;\n    height: 300px;\n    /* margin: auto; */\n    margin-bottom: 15px;\n    background-color: #fff;\n`\nexport const Button = styled(Btn)`\n    \n`\nexport const Text = styled(TextBtn)`\n    \n`","import React, { useRef } from 'react';\nimport QRCode from 'react-qr-code';\n\nimport { getUser } from \"redux/auth/auth-selector\";\nimport { useSelector } from \"react-redux\";\n\nimport * as htmlToImage from 'html-to-image';\n\nimport { Wrapper, Title, QrName, QrWrap, Button, Text } from './QRCode.styled';\n\nfunction QrResult() {\n\n  const user = useSelector(getUser);\n\n  const protocol = window.location.protocol;\n  const hostname = window.location.hostname;\n  // Перевіряємо, чи встановлений порт\n  const port = window.location.port ? `:${window.location.port}` : '';\n  const pathAfterHostname = window.location.pathname;\n   // Розбиваємо шлях на частини\n   const pathParts = pathAfterHostname.split('/');\n   // Перший підкаталог після доменного імені\n   const firstSubdirectory = pathParts[1];\n  // Складаємо початок адреси\n  const baseURL = `${protocol}//${hostname}${port}/${firstSubdirectory}`;\n\n\n  const wey = `${baseURL}/live/${user._id}`\n\n\nconst ref = useRef(null)\n\n\nconst saveQRCode = async () => {\n  const svgElement = ref.current; // Отримання посилання на SVG-елемент за допомогою useRef\n\n  if (!svgElement) {\n    console.error('SVG елемент не знайдено');\n    return;\n  }\n  console.log(svgElement)\n  htmlToImage.toPng(svgElement)\n    .then(function (dataUrl) {\n      const link = document.createElement('a');\n      link.href = dataUrl;\n      link.download = `QRCode-${user.name}.png`;\n      link.click();\n    })\n    .catch(function (error) {\n      console.error('Помилка при конвертації SVG в PNG:', error);\n    });\n};\n\n\n  return (\n    <Wrapper\n    onClick={e => e.stopPropagation()}>\n      <Title>QR Code {user.name}</Title>\n<QrWrap\nref={ref}\n>\n  <QrName\n  >{user.name}</QrName>\n      <QRCode \n      value={wey} \n      />\n      </QrWrap>\n      <Button onClick={saveQRCode}>\n        <Text>Зберегти QR-код</Text></Button>\n    </Wrapper>\n  );\n}\nexport default QrResult;","import styled from 'styled-components';\nimport { TbArrowsLeft } from \"react-icons/tb\";\nimport { TbArrowsRight } from \"react-icons/tb\";\n\nexport const MenuButton = styled.button`\nposition: absolute;\ntop: 0px;\nright: 0px;\n /* z-index: 1000; */\n  display: block;\n  height: 30px;\n  outline: 0;\n  border: 0;\n  padding: 5px 5px 0px 5px;\n  /* padding-left: 5px;\n  padding-top: 5px; */\n  background: none;\n\n  /* span {\n    transition: all 0.3s cubic-bezier(0.645, 0.045, 0.355, 1);\n  } */\n\n  /* :focus {\n    border: medium none rgb(111, 255, 176);\n    box-shadow: rgb(111, 255, 176) 0 0 2px 2px;\n    outline: 0;\n  } */\n\n  &:hover,\n  :focus{\n    border: medium none rgb(111, 255, 176);\n    box-shadow: rgb(111, 255, 176) 0 0 2px 2px;\n    /* outline: 0; */\n    /* span:nth-of-type(1) {\n      width: 33px;\n    }\n\n    span:nth-of-type(2) {\n      width: 40px;\n    }\n\n    span:nth-of-type(3) {\n      width: 30px;\n    } */\n  }\n\n  &.active {\n\n    /* span:nth-of-type(1) {\n      transform: rotate(45deg) translate(10px, 10px);\n      width: 40px;\n    }\n\n    span:nth-of-type(2) {\n      opacity: 0;\n      pointer-events: none;\n    }\n\n    span:nth-of-type(3) {\n      transform: rotate(-45deg) translate(7px, -7px);\n      width: 40px;\n    } */\n  }\n`;\n\n// export const Bar = styled.span`\n//   display: block;\n//   width: 40px;\n//   height: 5px;\n//   margin-bottom: 7px;\n//   background-color: #6b0707;\n// `;\n\nexport const BarOpen  = styled(TbArrowsRight)`\n  width: 30px;\n  height: 30px;\n`\nexport const BarClose  = styled(TbArrowsLeft)`\n  width: 30px;\n  height: 30px;\n`","// import React, { useContext } from 'react';\n// import styled from 'styled-components';\n// import { MenuContext } from './navState';\nimport { MenuButton, BarClose, BarOpen } from './ToggleButton.styled';\n\n\nconst HamburgerButton = ({moveMenu, moveSection}) => {\n  // const { isMenuClose, toggleMenuMode } = useContext(MenuContext);\n\n\n  console.log(\"moveSection\", moveSection)\n\n  const clickHandler = () => {\n    moveMenu();\n    // console.log(\"value\", value)\n    // toggleMenuMode();\n    \n  };\n\n  return (\n    <MenuButton\n      \n      onClick={clickHandler}\n    >{moveSection ? <BarOpen />  : <BarClose />} \n\n    </MenuButton>\n  );\n};\n\nexport default HamburgerButton;","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\n\nimport {\n  Sections,\n  SectionForm,\n  SectionWrap,\n  SectionWrapWrap,\n  AddButton,\n  AddButtonText,\n} from './MenuItems.styled';\n\nimport { fetchItems } from 'redux/items/items-operation';\nimport { getItemsByCategory } from 'redux/items/items-selector';\n// import { getSections } from 'redux/sections/sections-selector';\nimport { fetchSections } from 'redux/sections/sections-operation';\n\nimport { Modal } from 'components/common/Modal/Modal';\nimport ItemsSections from 'components/Section/ItemSections/ItemsSections';\nimport MenuItemsDetails from 'components/MenuItemsDetails/MenuItemsDetails';\nimport QROptions from 'components/QROptions/QROptions';\nimport ModalItemAddForm from '../../components/Item/ModalItemAddForm/ModalItemAddForm';\nimport ModalAddSectionForm from 'components/Section/ModalAddSectionForm/ModalAddSectionForm';\nimport QrResult from 'components/QRCode/QRCode';\n\n// import { MenuContext } from './ToggleMenu/navState';\nimport HamburgerButton from './ToggleMenu/ToggleButton';\nimport NavState from 'Pages/MenuItems/ToggleMenu/navState';\n\nexport default function MenuItems() {\n  const location = useLocation();\n  const category = location.pathname.split('/')[2];\n\n  const [modalActive, setModalActive] = useState(false);\n  const [modalAddSectionActive, setModalAddSectionActive] = useState(false);\nconst   [modalQrActive, setModalQrActive] = useState(false);\nconst [moveSection, setMoveSection] = useState(false);\n\n  const dispatch = useDispatch();\n  const itemsCategory = useSelector(getItemsByCategory);\n  // const sections = useSelector(getSections);\n\n  useEffect(() => {\n    console.log(\"useefect\")\n    dispatch(fetchItems());\n    dispatch(fetchSections());\n  }, [dispatch]);\n\nconst moveMenu = () => {\n  \n  setMoveSection(!moveSection)\n  console.log(\"moveSection\", moveSection)\n}\n \n  // console.log(sections)\n  const SideMenu = () => {\n    // const { isMenuClose } = useContext(MenuContext);\n    \n// console.log(\"isMenuClose\", isMenuClose)\n    return (\n      <SectionWrapWrap>\n\n          <SectionWrap value={moveSection} >\n          <HamburgerButton \n          // value={isMenuClose}\n          moveMenu={moveMenu}\n          moveSection={moveSection}\n          />\n          <SectionForm value={moveSection} >\n            {/* <ul> */}\n              {/* {sections.map((section) => (\n                <ItemsSections \n                key={section._id}\n                section={section}></ItemsSections>\n              ))} */}\n                 <ItemsSections \n                 dispatch={dispatch}\n                // key={section._id}\n                ></ItemsSections>\n            {/* </ul> */}\n            <AddButton\n              type=\"button\"\n              onClick={() =>setModalAddSectionActive(true)}\n            >\n              <AddButtonText>Add Section</AddButtonText>\n            </AddButton>\n          </SectionForm>\n        </SectionWrap>\n       </SectionWrapWrap>\n    );\n  };\n\n  function closeModal() {\n    setModalActive(false);\n    setModalAddSectionActive(false);\n    setModalQrActive(false);\n    document.body.style.overflow = '';\n  }\n \n\n  return (\n    <>\n      <QROptions \n      setModalQrActive={setModalQrActive}/>\n      {/* <CreateQrWrap>\n      <CreateQr onClick={() => setModalQrActive(true)}\n      >Create QR</CreateQr>\n      </CreateQrWrap> */}\n      \n          {modalQrActive && (\n            <Modal\n            onClick={() => closeModal()}\n            active={modalQrActive}\n            setActive={setModalQrActive}\n          >\n            <QrResult></QrResult>\n          </Modal>\n          )\n\n          }\n      <Sections>\n        <NavState>\n          <SideMenu />\n          {modalAddSectionActive && (\n            <Modal\n              onClick={() => closeModal()}\n              active={modalAddSectionActive}\n              setActive={setModalAddSectionActive}\n            >\n              <ModalAddSectionForm\n                onClick={e => e.stopPropagation()}\n                setModalSectionActive={setModalAddSectionActive}\n              />\n            </Modal>\n          )}\n          {modalActive && (\n            <Modal\n              onClick={() => closeModal()}\n              active={modalActive}\n              setActive={setModalActive}\n            >\n              <ModalItemAddForm\n                onClick={e => e.stopPropagation()}\n                setModalActive={setModalActive}\n                category={category}\n                itemsCategory={itemsCategory}\n              />\n            </Modal>\n          )}\n          <MenuItemsDetails \n          setModalActive={setModalActive}\n          moveSection={moveSection}\n          />\n        </NavState>\n      </Sections>\n    </>\n  );\n}\n"],"names":["Sections","styled","div","_templateObject","_taggedTemplateLiteral","SectionWrapWrap","_templateObject2","SectionWrap","_templateObject3","props","theme","size","navbarHeightMobile","value","css","_templateObject4","device","tablet","navbarHeightTablet","desktop","navbarHeightDesktop","SectionForm","_templateObject5","_templateObject6","AddButton","Btn","_templateObject7","AddButtonText","TextBtn","_templateObject8","FilterList","li","colors","btnActive","Button","a","BtnChange","button","StyledChange","CiEdit","_templateObject9","MoveButtonSection","MdDeleteForever","_templateObject10","_templateObject11","MoveUpSection","MdOutlineKeyboardDoubleArrowUp","_templateObject12","MoveDownSection","MdOutlineKeyboardDoubleArrowDown","_templateObject13","FilterListWrap","ul","_templateObject14","MoveButtonWrap","_templateObject15","BtnList","_ref","style","text","type","onClick","_jsx","children","TextWrapper","Text","p","ModalSectionDelete","_id","closeModal","dispatch","useDispatch","console","log","_jsxs","e","stopPropagation","marginRight","position","right","height","padding","minWidth","fontSize","color","delItemsByCategory","deleteSection","ModalChangeSectionName","category","idSort","sections","useSelector","getSections","_useState","useState","_useState2","_slicedToArray","newSectionName","setNewSectionName","_useState3","_useState4","modalDeleteActive","setModalDeleteActive","sectionNameID","nanoid","closeModalDelete","document","body","overflow","Form","onSubmit","preventDefault","find","section","toLocaleLowerCase","Notify","failure","concat","updateSection","_Fragment","FormInputList","FormInputLabel","htmlFor","LabelName","FormInput","id","name","pattern","title","required","defaultValue","onChange","currentTarget","marginLeft","Modal","active","setActive","ModalChangeSectionActive","setModalChangeSectionActive","idTarget","idSortTarget","valueTarget","state","setState","_useState5","savedIndex","localStorage","getItem","JSON","parse","_useState6","activeIndex","setActiveIndex","buttonClickedRef","useRef","navigate","useNavigate","location","useLocation","useEffect","setItem","stringify","map","item","index","className","event","current","setTimeout","sectionsId","handleSection","pathname","upIdSort","tempIdSort","upElement","fetchSections","handleUpSection","length","downIdSort","downElement","handleDownSection","handleSectionChange","ToLiveLink","NavLink","NavbarWrap","CreateQr","QROptions","setModalQrActive","user","getUser","chekName","Boolean","items","to","_ref2","target","rel","end","ModalItemAddForm","setModalActive","itemsCategory","itemName","setItemName","price","setPrice","description","setDescription","_useState7","_useState8","setSection","itemNameID","priceID","descriptionID","handleChange","maxIdSort","reduce","max","Math","parseInt","getMaxIdSort","itemCategory","addItems","toString","marginTop","ModalAddSectionForm","setModalSectionActive","setCategory","addSection","Wrapper","Title","h1","QrName","QrWrap","_regeneratorRuntime","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","i","Symbol","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","protocol","window","hostname","port","firstSubdirectory","split","baseURL","wey","ref","saveQRCode","_asyncToGenerator","_callee","svgElement","_context","error","htmlToImage","dataUrl","link","createElement","href","download","click","apply","arguments","QRCode","MenuButton","BarOpen","TbArrowsRight","BarClose","TbArrowsLeft","moveMenu","moveSection","MenuItems","modalActive","modalAddSectionActive","setModalAddSectionActive","modalQrActive","setMoveSection","getItemsByCategory","fetchItems","SideMenu","HamburgerButton","ItemsSections","QrResult","NavState","MenuItemsDetails"],"sourceRoot":""}