{"version":3,"file":"static/js/590.d2f74d47.chunk.js","mappings":"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","sources":["webpack://project1/./src/components/Button/Button.module.scss?f17a","components/Button/Button.jsx","components/Navbar/NavbarMenu/items.js","components/Navbar/NavbarMenu/NavbarMenu.styled.jsx","components/Navbar/NavbarMenu/NavbarMenu.jsx","components/Navbar/NavbarAuth/items.js","webpack://project1/./src/components/Navbar/NavbarAuth/NavbarAuth.module.scss?e7fb","components/Navbar/NavbarAuth/NavbarAuth.jsx","webpack://project1/./src/components/Navbar/NavbarUser/NavbarUser.module.scss?4131","components/Navbar/NavbarUser/NavbarUser.jsx","components/Live/LiveTitle/LiveTitle.jsx","webpack://project1/./src/components/Navbar/Navbar.module.scss?b554","components/hooks/useLive.js","components/Navbar/Navbar.jsx","redux/items/items-selector.js","../node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Button\":\"Button_Button__XMdsc\"};","import scss from \"./Button.module.scss\"\nimport PropTypes from 'prop-types';\n\nexport const Button = ({style, text, \n  onClick\n}) => {\n  return (\n    <button \n    style={style}\n    className={scss.Button}\n    onClick={onClick}\n    >\n      {text}\n    </button>\n  );\n};\n\nButton.propTypes = {\n    onClick: PropTypes.func,\n  };","import { nanoid } from \"nanoid\";\n\n\n\nconst items = [\n    {id: nanoid(),\n    to: \"/items\",\n    text: \"Items\"\n},\n{id: nanoid(),\n    to: \"/users\",\n    text: \"Users\"\n},\n// {id: nanoid(),\n//     to: \"/live\",\n//     text: \"live\"\n// },\n]\n\n\nexport default items;","import styled from 'styled-components';\nimport { NavLink } from \"react-router-dom\"\n// import { device } from 'Device';\n\nexport const NavbarMenuList = styled.ul`\n    display: flex;\n    margin-right: auto;\n    margin-left: auto;\n    align-items: center;\n    justify-content: center;\n`\nexport const NavbarMenuListItem = styled.li`\n    &:not(:last-child) {\n    margin-right: 20px;\n}\n`\nexport const Link = styled(NavLink)`\n    text-decoration: none;\n    font-size: 40px;\n    font-weight: 700;\n    color: rgb(10, 3, 3);\n    &.active {\n        padding-left: 5px;\n        padding-right: 5px;\n        color: white;\n        background-color: #3f51b5;\n        border-radius: 5px;\n    }\n    &:hover, \n    :focus {\n        color: #333d72;\n    }\n`\n","import items from \"./items\"\n// import { NavLink } from \"react-router-dom\"\n// import scss from \"./NavbarMenu.module.scss\"\nimport { NavbarMenuList, NavbarMenuListItem, Link } from \"./NavbarMenu.styled\"\n\n// const getClassName = ({isActive}) => {\n//     return isActive ? `${scss.link} ${scss.active}` : `${scss.link}`;\n// }\n\nexport default function NavbarMenu() {\n  return (\n    <NavbarMenuList >\n        {items.map(({id, to, text}) => {\n            return (\n                <NavbarMenuListItem  key={id}>\n                    <Link \n                     to={to} \n                     end>{text}\n                     </Link>\n                </NavbarMenuListItem>\n            )})\n        }\n    </NavbarMenuList>\n  )\n}","import { nanoid } from \"nanoid\";\n\nconst items = [\n    {id: nanoid(),\n    to: \"/register\",\n    text: \"Registration\"\n},\n    {id: nanoid(),\n    to: \"/login\",\n    text: \"Login\"\n},\n// {id: nanoid(),\n//     to: \"/live\",\n//     text: \"Live\"\n// },\n\n]\n\n\nexport default items;","// extracted by mini-css-extract-plugin\nexport default {\"navbarAuthList\":\"NavbarAuth_navbarAuthList__uq7f4\",\"link\":\"NavbarAuth_link__uB6Cb\",\"active\":\"NavbarAuth_active__uFY6G\",\"navbarAuthListItem\":\"NavbarAuth_navbarAuthListItem__lWQZW\"};","import items from \"./items\"\nimport { NavLink } from \"react-router-dom\"\nimport scss from \"./NavbarAuth.module.scss\"\n\nconst getClassName = ({isActive}) => {\n    return isActive ? `${scss.link} ${scss.active}` : `${scss.link}`;\n}\n\nexport default function NavbarAuth() {\n  return (\n    <ul \n    \n    className={scss.navbarAuthList}\n    >\n        {items.map(({id, to, text}) => {\n            return (\n                <li className={scss.navbarAuthListItem} key={id}>\n                    <NavLink className={getClassName} to={to} end>{text}</NavLink>\n                </li>\n            )})\n        }\n    </ul>\n  )\n}","// extracted by mini-css-extract-plugin\nexport default {\"navbarUser\":\"NavbarUser_navbarUser__qA+4s\",\"navbarUserName\":\"NavbarUser_navbarUserName__2jqzv\"};","import { useDispatch, useSelector } from \"react-redux\"\nimport { logout } from \"redux/auth/auth-operation\"\nimport scss from \"./NavbarUser.module.scss\"\nimport { getUser } from \"redux/auth/auth-selector\";\nimport { Button } from \"components/Button/Button\";\n\n\nexport default function NavbarUser() {\nconst user = useSelector(getUser)\n\nconst dispatch = useDispatch();\nconst onLogout =() => {\n    dispatch(logout())\n}\n\n// console.log(user)\n\nconst chekName = Boolean(user)\n  return (\n    <div className={scss.navbarUser}>\n      {chekName ? <p className={scss.navbarUserName}>\n        <img src={user.avatarURL} alt=\"avatar\" />\n        Welcome, <b>{user.name}</b></p> : <p>Welcome, <b>User</b></p> }\n        <Button \n        style={{\n          position: 'absolute',\n          right: '0px',\n          height: '25px',\n          padding: '0px 0px',\n          minWidth: '100px',\n          fontSize: 15,\n          color: '#010101'\n        }}\n    \n      text=\"Logout\"\n      type=\"button\"\n      onClick={onLogout}\n      />\n    </div>\n  )\n}\n","// import items from \"./items\"\nimport { nanoid } from \"nanoid\";\nimport { NavLink } from \"react-router-dom\"\nimport { getUser } from \"redux/auth/auth-selector\";\nimport { useSelector } from \"react-redux\";\n\n\n\nexport default function LiveTitle() {\n  const user = useSelector(getUser);\n  console.log(user)\n  const chekName = Boolean(user)\n  const items = chekName ? [\n   \n    {id: nanoid(),\n      to: `/live/${user._id}`,\n      text: `${user.name}`,\n  },\n   \n    ] : \"\";\n\n\n  \n  return (\n    <ul >\n      {chekName ? items.map(({id, to, text}) => {\n            return (\n                <li  key={id}>\n                    <NavLink  to={to} end>{text}</NavLink>\n                </li>\n            )})\n         : <></> }\n\n        \n    </ul>\n  )\n}","// extracted by mini-css-extract-plugin\nexport default {\"navbarMenu\":\"Navbar_navbarMenu__RH5i-\",\"navbarList\":\"Navbar_navbarList__wJY-l\"};","import {  useSelector  } from \"react-redux\";\nimport { isLive } from 'redux/items/items-selector';\n\nconst UseLive = () => {\n    const result = useSelector(isLive)\n    // console.log(result)\n    return result\n};\n\nexport default UseLive;\n\n\n// if (isUserLogin) {\n//     return <Navigate to=\"/contacts\" />\n//   }","import NavbarMenu from \"components/Navbar/NavbarMenu/NavbarMenu\"\nimport NavbarAuth from \"components/Navbar/NavbarAuth/NavbarAuth\"\nimport NavbarUser from \"./NavbarUser/NavbarUser\"\nimport LiveTitle from \"components/Live/LiveTitle/LiveTitle\"\nimport scss from \"./Navbar.module.scss\"\nimport UseAuth from \"components/hooks/useAuth\"\nimport UseLive from \"components/hooks/useLive\"\n\nexport default function Navbar() {\n  const isUserLogin = UseAuth()\n  const isUseLive = UseLive()\n  return (\n    <>\n    {isUseLive ? <LiveTitle /> : \n    <nav className={scss.navbarMenu}>\n        <div className={scss.navbarList}>\n          {isUserLogin &&  <NavbarMenu /> }\n          {/* {isUserLogin &&  !<NavbarLive />} */}\n           {isUserLogin ? <NavbarUser /> : <NavbarAuth />}\n           \n        </div>\n    \n    </nav>\n    }\n    </>\n  )\n}","export const getItems = ({items}) => items.items;\nexport const getItemsLive = ({items}) => items.itemsLive;\nexport const isLive = ({items}) => items.isLive;\nexport const getItemsByCategory = ({items}) => ( items.itemsByCategory);\nexport const getItemUpdate = ({items}) => (items.itemsByCategory);\nexport const getState = ({items}) => ({loading: items.loading, error: items.error});\nexport const getFilteredItems = ({filter, items}) => {   \n    if (!filter) \n    {return items.items};\n};","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n"],"names":["Button","style","text","onClick","className","scss","id","nanoid","to","NavbarMenuList","styled","NavbarMenuListItem","Link","NavLink","NavbarMenu","items","end","getClassName","isActive","NavbarAuth","NavbarUser","user","useSelector","getUser","dispatch","useDispatch","chekName","Boolean","src","avatarURL","alt","name","position","right","height","padding","minWidth","fontSize","color","type","logout","LiveTitle","console","log","_id","map","isLive","Navbar","isUserLogin","UseAuth","isUseLive","UseLive","getItems","getItemsLive","itemsLive","getItemsByCategory","itemsByCategory","getState","loading","error","_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties","value","size","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase"],"sourceRoot":""}