{"version":3,"file":"static/js/154.a06227c3.chunk.js","mappings":"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","sources":["Pages/MenuItems/MenuItems.styled.jsx","components/Section/ItemSections/ItemsSections.styled.jsx","components/Section/ModalChangeSectionName/ModalChangeSectionName.styled.jsx","components/Button/Button.jsx","components/Section/ModalSectionDelete/ModalSectionDelete.styled.jsx","components/Section/ModalSectionDelete/ModalSectionDelete.jsx","components/Section/ModalChangeSectionName/ModalChangeSectionName.jsx","components/Section/ItemSections/ItemsSections.jsx","components/QROptions/QROptions.styled.jsx","components/QROptions/QROptions.jsx","components/Item/ModalItemAddForm/ModalItemAddForm.jsx","components/Section/ModalAddSectionForm/ModalAddSectionForm.jsx","components/QRCode/QRCode.styled.jsx","components/QRCode/QRCode.jsx","Pages/MenuItems/ToggleMenu/ToggleButton.styled.jsx","Pages/MenuItems/ToggleMenu/ToggleButton.jsx","Pages/MenuItems/MenuItems.jsx"],"sourcesContent":["import styled, { css } from 'styled-components';\nimport { Btn, TextBtn } from 'components/Button/Button.styled';\nimport { device } from 'Device';\n\nexport const Sections = styled.div`\n    display: flex;\n    /* margin-top: 25px; */\n    padding-left: 5px;\n    padding-right: 5px;\n`  \n\nexport const SectionWrapWrap = styled.div`\n  \n\n`\nexport const SectionWrap = styled.div`\nheight:calc(100vh - ${props => props.theme.size.navbarHeightMobile});\n  background-color: #cbcbcb;\n\n  \n  position: fixed;\n    top: ${props => props.theme.size.navbarHeightMobile};\n    /* left: 0px; */\n    z-index:  500;\n    overflow-y: auto;\n    /* max-height: 100vh; */\n    scrollbar-width: none;\n\n  transition: \n  width 0.3 s ease;\n  \n  ${props =>\n    props.value &&\n    css`\n    /* position: relative; */\n      width: 40px;\n    `};\n    @media ${device.tablet} {\n      height:calc(100vh - ${props => props.theme.size.navbarHeightTablet});\n      top: ${props => props.theme.size.navbarHeightTablet};\n    }; \n    @media ${device.desktop} {\n      height:calc(100vh - ${props => props.theme.size.navbarHeightDesktop});\n      top: ${props => props.theme.size.navbarHeightDesktop};\n    }; \n`\n\nexport const SectionForm = styled.div`\nbox-sizing: border-box;\n    border: 4px;\n    width: 160px;\n    padding-top: 35px;\n    padding-bottom: 20px;\n    /* display: none; */\n    opacity: 1;\n    /* position: fixed; */\n  /* top: 0; */\n  /* left: 0; */\n  /* width: 100%; */\n  /* height: 90vh; */\n  \n  \n  background-color: #cbcbcb;\n\n  /* transform: translateX(0); */\n\n  transition: \n  transform 1s cubic-bezier(0.645, 0.045, 0.355, 1),\n  opacity 2s;\n\n  ${props =>\n    props.value &&\n    css`\n      transform: translateX(-100%);\n      opacity: 0;\n    `}\n\n    @media ${device.tablet} {\n        width: 300px;\n    };\n`\n\nexport const AddButton = styled(Btn)`\n        position: relative;\n          right: 0px;\n          height: 25px;\n          margin-top: 10px;\n          min-width: 100px;\n          font-size: 15px;\n          color: #010101;\n`\nexport const AddButtonText = styled(TextBtn)`\n  \n\n`\n","import styled from 'styled-components';\nimport { device } from 'Device';\n// import { NavLink } from 'react-router-dom';\n// import {MdOutlineDriveFileRenameOutline} from 'react-icons/md';\nimport {CiEdit} from 'react-icons/ci';\nimport {MdDeleteForever} from 'react-icons/md';\nimport { MdOutlineKeyboardDoubleArrowUp, MdOutlineKeyboardDoubleArrowDown  } from \"react-icons/md\";\n\n\n\nexport const Wrapper = styled.div`\n  position: relative;\n\n`;\n\nexport const FilterList = styled.li`\n\n\n\n  list-style: none;\n  display: flex;\n  /* &:not(:last-child) { */\n    margin-bottom: 5px;\n\n    min-height: 48px;\n  background-color: #cbcbcb;\n    border-radius: 10px;\n    box-shadow: 7px 20px 14px rgba(10, 4, 1, 0.1);\n    margin-bottom: 10px;\n  \n  transition: color 250ms linear, background-color 250ms linear;\n    &:hover,\n       &:focus {\n        background-color: ${props => props.theme.colors.btnActive};\n        cursor: pointer;\n  }\n`;\n\nexport const Item = styled.li`\n  display: flex;\n`;\n\nexport const Button = styled.a`\nword-wrap: break-word;\npadding-left: 5px;\n\n\nbox-sizing: border-box;\nborder: none;\nwidth: 70%;\ncolor: #181515;\nfont-size: 20px;\nfont-weight: 900;\n  line-height: 1.35;\n  letter-spacing: 0.04em;\n  border-radius: 5px;\n  \n  ${FilterList}:first-child & {\n    width: 100%;\n    @media ${device.tablet} {  \n        width: 100%;\n    };\n    };\n    ${FilterList}:last-child & {\n    width: 100%;\n    @media ${device.tablet} {  \n        width: 100%;\n    };\n    };\n    \n  @media ${device.tablet} {  \n        width: 100%;\n    };\n`;\n\nexport const ex = styled.div`\n  \n  \n\n`\n\nexport const CommonLinks = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  flex-wrap: wrap-reverse;\n  gap: 12px;\n \n`;\nexport const AuthLinks = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  gap: 12px;\n`;\n// const Change = ({ className }) => <MdOutlineDriveFileRenameOutline className={className} />;\nexport const BtnChange = styled.button`\n  border: none;\n  background-color: transparent;\n  padding: 0;\n`\nexport const StyledChange = styled(CiEdit)`\nwidth:  25px;\nheight: 25px;\n\n  color: red;\n  &:hover,\n       &:focus {\n        color: ${props => props.theme.colors.btnActive};\n        cursor: pointer;\n  }\n  \n`\nexport const DelSection = styled(MdDeleteForever)`\n  color: red;\n  \n`\nexport const MoveButtonSection = styled.button`\n  border: none;\n  background-color: inherit;\n  padding: 0;\n  width: 20px;\n  &:hover,\n       &:focus {\n        color: ${props => props.theme.colors.btnActive};\n        cursor: pointer;\n  }\n`\nexport const MoveUpSection = styled(MdOutlineKeyboardDoubleArrowUp)`\n  height: 20px;\n    width: 20px;\n`\nexport const MoveDownSection = styled(MdOutlineKeyboardDoubleArrowDown)`\nheight: 20px;\n    width: 20px;\n`\nexport const FilterListWrap = styled.ul`\n\n   li.active {\n    \n  color: #573131;\n  background-color: #749574;\n\n}\n`\nexport const MoveButtonWrap = styled.div`\n    \n    width: 20px;\n`\n\n","import styled from 'styled-components';\n\n\n\nexport const BtnList = styled.div`\n  margin-top: 10px;\n`","import { Btn, TextBtn } from './Button.styled';\nimport PropTypes from 'prop-types';\n\nexport const Button = ({style, text, type,\n  onClick\n}) => {\n  return (\n    <Btn \n    style={style}\n    onClick={onClick}\n    type={type}\n    >\n      <TextBtn>{text}</TextBtn>\n    </Btn>\n  );\n};\n\nButton.propTypes = {\n    onClick: PropTypes.func,\n  };","import styled from 'styled-components';\n\nexport const TextWrapper = styled.div`\n    /* width: 250px;\n    height: 100px; */\n    /* border: 1px solid #749574; */\n    font-size: 25px;\n    border: 1px solid rgb(7, 94, 138);\n    border-radius: 5px;\n    padding: 30px 10px 10px 10px;\n    width: 300px;\n    background-color: #919191;\n`\nexport const Text = styled.p`\nmargin-top: 20px;\nmargin-bottom: 20px;\n    font-size: 15px;\n`","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteSection } from 'redux/sections/sections-operation';\nimport { delItemsByCategory } from 'redux/items/items-operation';\nimport { Button } from 'components/Button/Button';\nimport { Text, TextWrapper } from './ModalSectionDelete.styled';\nexport default function ModalSectionDelete({ _id, closeModal }) {\n  const dispatch = useDispatch();\n  console.log(_id);\n  function DelSection() {\n    dispatch(delItemsByCategory(_id));\n    dispatch(deleteSection(_id));\n    closeModal();\n  }\n\n  return (\n    <TextWrapper onClick={e => e.stopPropagation()}>\n      <Text>Do you really wont to delete? All items will also be deleted\n      </Text>\n\n      <Button\n        style={{\n          marginRight: '25px',\n          position: 'relative',\n          right: '0px',\n          height: '25px',\n          padding: '0px 0px',\n          minWidth: '80px',\n          fontSize: 15,\n          color: '#010101',\n        }}\n        text=\"Yes\"\n        type=\"button\"\n        onClick={() => {\n          DelSection();\n        }}\n      />\n      <Button\n        style={{\n          position: 'relative',\n          right: '0px',\n          height: '25px',\n          padding: '0px 0px',\n          minWidth: '80px',\n          fontSize: 15,\n          color: '#010101',\n        }}\n        text=\"No\"\n        type=\"button\"\n        onClick={() => closeModal()}\n      />\n    </TextWrapper>\n  );\n}\n","import { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport { Form, FormInputList, FormInput, FormInputLabel, LabelName } from \"components/common/GeneralStyle/Input.styled\";\nimport {\n  useSelector, \n  useDispatch } from 'react-redux';\nimport { getSections } from 'redux/sections/sections-selector';\nimport { updateSection } from \"redux/sections/sections-operation\"; \nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { BtnList } from \"./ModalChangeSectionName.styled\";\nimport { Modal } from \"components/common/Modal/Modal\";\nimport ModalSectionDelete from \"../ModalSectionDelete/ModalSectionDelete\";\n  import { Button } from \"components/Button/Button\";\n\nexport default function ModalChangeSectionName ({ \n   category, \n   _id,\n   idSort,\n   closeModal\n  }) {\n  const sections = useSelector(getSections);\n  \n  const dispatch = useDispatch();\nconsole.log(\"idSort\", idSort)\n  const [newSectionName, setNewSectionName] = useState(category);\n  // const [newIdSort, setNewIdSort] = useState(idSort);\n\n  const [modalDeleteActive, setModalDeleteActive] = useState(false);\n\n  const sectionNameID = nanoid();\n  console.log(_id)\n  console.log(category)\n \n  const handleChange = (e) => {\n        const { name } = e.currentTarget;\n        switch (name) {\n          case 'newSectionName':\n            setNewSectionName ( e.currentTarget.value);\n            break;\n          default:\n            break;\n        }\n      };\n\n  const handleSubmit = (e) => {\n\n        e.preventDefault()\n        const duplicateItems = sections.find(section => section.category.toLocaleLowerCase() === newSectionName.toLocaleLowerCase());\n      \n       \n          if (duplicateItems) {\n            Notify.failure(`${newSectionName} is already in item`)\n            return\n          }\n\n            dispatch(updateSection(\n               {\n                _id,\n                idSort,\n                category: newSectionName,              \n              } ));\n                setNewSectionName('');\n              closeModal ();\n      }; \n      \n      function closeModalDelete () {\n        setModalDeleteActive(false)\n        document.body.style.overflow = '';\n      };\n\n      return ( \n        <Form \n        onClick={e => e.stopPropagation()}\n        onSubmit={handleSubmit}\n        >\n          <>\n        <FormInputList>\n          <FormInputLabel htmlFor={sectionNameID}><LabelName>Change Name</LabelName></FormInputLabel>\n          <FormInput \n          id={sectionNameID} \n          type=\"text\" \n          name=\"newSectionName\" \n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may \"\n          required\n          defaultValue={category}\n          onChange={handleChange} />\n        </FormInputList>\n        \n<BtnList>\n        <Button \n        style={{\n          position: 'relative',\n          right: '0px',\n          height: '25px',\n          padding: '0px 0px',\n          minWidth: '80px',\n          fontSize: 15,\n          color: '#010101',\n          marginRight: 'auto',\n          marginLeft: 'auto',\n          \n        }}\n    \n      text=\"Rename\"\n      type=\"submit\"\n      />\n      <Button \n        style={{\n          position: 'relative',\n          right: '0px',\n          height: '25px',\n          minWidth: '110px',\n          fontSize: 15,\n          color: '#632121',\n          marginRight: 'auto',\n          marginLeft: '25px',\n        }}\n    \n      text=\"Delete Section\"\n      type=\"button\"\n      onClick={() => setModalDeleteActive(true)}\n      />\n   </BtnList>\n              { modalDeleteActive && (\n          <Modal\n          onClick={() => closeModalDelete ()}\n          active={modalDeleteActive}\n          setActive={setModalDeleteActive}>\n          <ModalSectionDelete\n          closeModal={closeModalDelete}\n          _id={_id}\n          category={category}\n          />\n          </Modal>\n         )}\n        </>\n        </Form>\n        )\n};","import {useState, useEffect, useRef  } from 'react';\nimport { useDispatch} from 'react-redux';\n\nimport { fetchSections, updateSection } from \"redux/sections/sections-operation\"\nimport { getSections } from 'redux/sections/sections-selector';\n\nimport {\n  Button,\n  FilterList,\n  StyledChange,\n  BtnChange,\n  MoveButtonSection,\n  MoveUpSection,\n  MoveDownSection,\n  FilterListWrap,\n  MoveButtonWrap\n} from './ItemsSections.styled';\nimport { Modal } from 'components/common/Modal/Modal';\nimport ModalChangeSectionName from '../ModalChangeSectionName/ModalChangeSectionName';\n\nimport {  useSelector } from 'react-redux';\n\nimport { useNavigate  } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\n\nfunction ItemsSections(\n  // {scrollRef}\n) {\n \n  const [ModalChangeSectionActive, setModalChangeSectionActive] = useState(false);\n    const [state, setState] = useState({\n    idTarget: \"\",\n    idSortTarget: \"\",\n    valueTarget: \"\",\n  });\n  \n\n  const [activeIndex, setActiveIndex] = useState(() => {\n    const savedIndex = localStorage.getItem('activeIndex');\n    return savedIndex !== null ? JSON.parse(savedIndex) : null;\n  });\n  \n\n  // const listRef = useRef(null);\n  const buttonClickedRef = useRef(false); // Використання useRef для buttonClicked\n  const scrollRef = useRef(null);\n\n  const navigate = useNavigate();\n  const location = useLocation();\n  const dispatch = useDispatch();\n  \n  function closeModal () {\n    setModalChangeSectionActive(false)\n    document.body.style.overflow = '';\n    // dispatch(fetchSections());\n  };\n \n  const sections = useSelector(getSections);\n\n\n  const handleSectionChange = (item) => {\n    buttonClickedRef.current = true;\n    setState({\n      idTarget: item._id,\n      idSortTarget: item.idSort,\n      valueTarget: item.category,\n    });\n    setModalChangeSectionActive(true)\n    \n      };\n\n  const handleDownSection = (item, index) => {\n    // setButtonClicked(true)\n    buttonClickedRef.current = true;\nconst downIdSort = sections[index + 1].idSort;  //// над поточним IdSort\nconst tempIdSort = sections[index].idSort; //// поточний IdSort\nconst downElement = sections.find(item => item.idSort === downIdSort);\n\n\n///// оновлення idSort поточного елемента /////////\n        dispatch(updateSection({\n          _id: item._id,\n          idSort: downIdSort,\n          category: item.category\n        }));\n ///// оновлення idSort верхнього елемента /////////       \n        dispatch(updateSection({\n          _id: downElement._id,\n          idSort: tempIdSort,\n          category: downElement.category\n        }));\n        \n        setTimeout(() => {\n          navigate(location.pathname);\n          dispatch(fetchSections());\n        }, 300)\n       \n      };\n\n  const handleUpSection = (event, item, index) => {\nconsole.log(\"location.pathname\", location.pathname)\n    // setButtonClicked(true); // Позначаємо, що була натиснута кнопка\n    buttonClickedRef.current = true; // Позначаємо, що була натиснута кнопка\n    \n    \n        const upIdSort = sections[index - 1].idSort;  //// над поточним IdSort\n        const tempIdSort = sections[index].idSort; //// поточний IdSort\n        const upElement = sections.find(item => item.idSort === upIdSort);\n        \n        \n        ///// оновлення idSort поточного елемента /////////\n                dispatch(updateSection({\n                  _id: item._id,\n                  idSort: upIdSort,\n                  category: item.category\n                }));\n         ///// оновлення idSort верхнього елемента /////////       \n         dispatch(updateSection({\n                  _id: upElement._id,\n                  idSort: tempIdSort,\n                  category: upElement.category\n                }));\n\n\n                setTimeout(() => {\n                  navigate(location.pathname);\n                  dispatch(fetchSections());\n                }, 300)\n          \n          // event.stopPropagation()\n              };\n\n      \n              \nconst handleSection = (event, index, item) => {\n  event.preventDefault();\n  event.stopPropagation();\n  console.log(\"item\", item._id)\n  if (!buttonClickedRef.current) {\n  setActiveIndex(item._id)\n  \n  // Збереження позиції прокручування\n  // const scrollPosition = scrollRef.current.scrollTop;\n  \n  \n  // console.log(\"scrollRef\", scrollRef.current.scrollTop)\n  // scrollRef.current.scrollTop;\n  // console.log(\"scrollPosition\", scrollPosition)\nsetTimeout(() => {\n  \n  const sectionsId = sections[index]._id;\n  navigate('/items/' + sectionsId );\n}, 300);\n  }\n  \n  buttonClickedRef.current = false; // Скидаємо значення після кліку\n\n}\n              // console.log(\"activeIndex\", activeIndex)\n\n              useEffect(() => {\n                \n                console.log(\"window.history.state\", window.history.state)\n                console.log(\"scrollRef.current\", scrollRef.current)\n                if (scrollRef.current) {\n                  const activeItem = scrollRef.current.querySelector('.active');\n  console.log(\"activeItem\", activeItem)\n                  ;\n                  \n                  console.log(\"useeffectRefIf\")\n                  // window.scrollTo(activeItem[0]);\n\n                  if (activeItem) {\n                    // Прокрутка до вибраного елементу, якщо він існує\n                    activeItem.scrollIntoView({ behavior: 'auto', block: 'nearest' });\n                  } else {\n                    console.log('Active item not found');\n                  }\n                }\n              }, [scrollRef]);\n\n              useEffect(() => {\n                localStorage.setItem('activeIndex', JSON.stringify(activeIndex));\n              console.log(\"useeffect\")\n               },[activeIndex]);\n\n\n  return (\n    <>\n    <FilterListWrap\n   ref={scrollRef}\n    >\n          {sections.map((item, index) => (\n                       \n            <FilterList\n            \n       key={index}\n       id={item._id}\n      //  className={ (index  === activeIndex  ? \"active\" : \"\")\n      //  || (`${index}`=== activeIndex  ? \"active\" : \"\")\n      // } \n      className={ (item._id  === activeIndex  ? \"active\" : \"\")\n       || (`${item._id}`=== activeIndex  ? \"active\" : \"\")\n      } \n       onClick={(event) => handleSection(event, index, item)}\n       >\n                 \n        <MoveButtonWrap>\n        {index !== 0 && (\n        <MoveButtonSection\n        onClick={(event) => handleUpSection(event, item, index)}>\n          <MoveUpSection/>\n        </MoveButtonSection>\n        )}\n        {index !== sections.length - 1 && (\n              <MoveButtonSection\n              onClick={() => handleDownSection(item, index)}\n              >\n          <MoveDownSection/>\n        </MoveButtonSection>\n        )}\n        </MoveButtonWrap>\n              <Button \n              key={item._id}\n              // to={'/items/' + item._id} \n              >\n               \n                {item.category}\n              </Button>\n              \n              <BtnChange\n              id={item._id}\n              onClick={() => handleSectionChange(item)}\n          >\n                <StyledChange/>\n              </BtnChange>\n              </FilterList>\n              \n          ))}\n          </FilterListWrap>\n             {ModalChangeSectionActive && (\n          <Modal\n          onClick={() => closeModal ()}\n          active={ModalChangeSectionActive}\n          setActive={setModalChangeSectionActive}\n          >\n          <ModalChangeSectionName\n          closeModal={closeModal}\n          _id={state.idTarget}\n          idSort={state.idSortTarget}\n          category={state.valueTarget}\n          />\n          </Modal>\n         )} \n        </>  \n  );\n}\n\nexport default ItemsSections;\n\n\n\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport { device } from 'Device';\n\n\nexport const ToLiveLink = styled(NavLink)`\n    /* position: relative;\n    top: 35px;\n    right: 15px; */\n    font-weight: 900;\n    color: #181515;\n    &:hover,\n       &:focus {\n        color: ${props => props.theme.colors.btnActive};\n        cursor: pointer;\n  }\n`\n\nexport const NavbarWrap = styled.div`\n    /* margin-top: 10px;  */\n    text-align: end;\n    min-width: 150px;\n    position: absolute;\n    top:calc(5px + ${props => props.theme.size.navbarHeightMobile});\n    right: 15px;\n    @media ${device.tablet} {\n      top:calc(5px + ${props => props.theme.size.navbarHeightTablet});\n  };\n  @media ${device.desktop} {\n      top:calc(5px + ${props => props.theme.size.navbarHeightDesktop});\n  };\n`\n\n export const CreateQr = styled.p`\n margin-top: 10px;\n  font-weight: bold;\n  \n      &:hover,\n       &:focus {\n        color: ${props => props.theme.colors.btnActive};\n        cursor: pointer;\n  }\n  @media ${device.tablet} {\n    \n    };\n `","// import items from \"./items\"\nimport { nanoid } from \"nanoid\";\n// import { NavLink } from \"react-router-dom\"\nimport { getUser } from \"redux/auth/auth-selector\";\nimport { useSelector } from \"react-redux\";\nimport { ToLiveLink, NavbarWrap, CreateQr } from \"./QROptions.styled\";\n\n\n\nexport default function QROptions({setModalQrActive}) {\n  const user = useSelector(getUser);\n  // console.log(user)\n  const chekName = Boolean(user)\n  const items = chekName ? [\n   \n    {id: nanoid(),\n      to: `/live/${user._id}`,\n      text: \"Go to QR Menu\",\n  },\n    ] : \"\";\n\n\n  \n  return (\n     <NavbarWrap>\n      {chekName ? items.map(({id, to, text}) => {\n            return (\n                // <ToLiveLinkList  key={id}>\n                    <ToLiveLink \n                    key={id} \n                    target=\"_blank\"\n                    rel=\"noreferrer noopener\"\n                    to={to}\n                    end>\n                      {text}\n                     </ToLiveLink>\n                  // </ToLiveLinkList>\n            )})\n         : <></> }\n\n      \n      <CreateQr onClick={() => setModalQrActive(true)}\n      >Create QR</CreateQr>\n      </NavbarWrap>\n    //  </>\n  )\n}","import { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport { Form, FormInputList, FormInputLabel, FormInput } from \"components/common/GeneralStyle/Input.styled\";\nimport {\n  // useSelector, \n  useDispatch } from 'react-redux';\n// import { getFilteredItems } from 'redux/items/items-selector';\n\nimport { addItems } from \"redux/items/items-operation\"; \nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { Button } from \"components/Button/Button\";\n\n\nexport default function ModalItemAddForm ({\n   setModalActive, category, itemsCategory}) {\n  \n  console.log(itemsCategory)\n  const dispatch = useDispatch();\n\n  const [itemName, setItemName] = useState('');\n  const [price, setPrice] = useState('');\n  const [description, setDescription] = useState('');\n  const [section, setSection] = useState(category)\n\n\n  const itemNameID = nanoid();\n  const priceID = nanoid();\n  const descriptionID = nanoid();\n\n  const handleChange = (e) => {\n        const { name } = e.currentTarget;\n        switch (name) {\n          case 'itemName':\n            setItemName ( e.currentTarget.value);\n            break;\n            case 'description':\n              setDescription (e.currentTarget.value);\n            break;\n          case 'price':\n            setPrice (e.currentTarget.value);\n            break;\n          default:\n            break;\n        }\n      };\n\n      // Функція для отримання максимального значення idSort в масиві\n      const getMaxIdSort = (itemsCategory) => {\n        return itemsCategory.reduce((max, item) => {\n          console.log(\"max\", max)\n          console.log(\"item\", item)\n            return Math.max(max, parseInt(item.idSort));\n        }, 0);\n      };\n\n  const handleSubmit = (e) => {\n\n    const maxIdSort = getMaxIdSort(itemsCategory);\n    console.log(\"maxIdSort\", maxIdSort)\n\n        e.preventDefault()\n        \n        const duplicateItems = itemsCategory.find(itemCategory => itemCategory.itemName.toLocaleLowerCase() === itemName.toLocaleLowerCase());\n      \n       \n          if (duplicateItems) {\n            Notify.failure(`${itemName} is already in item`)\n            return\n          }\n           else {\n            setSection (category)\n            dispatch(addItems(\n             {itemName, \n              description, \n              price, \n              section,\n              idSort: (maxIdSort + 1).toString()}\n              ));\n              setItemName('');\n              setDescription('');\n              setPrice('');\n              setSection('');\n              setModalActive(false);\n          }\n      }; \n  \n     \n      return ( \n        <Form \n        onClick={e => e.stopPropagation()}\n        onSubmit={handleSubmit}\n        >\n          <>\n        <FormInputList>\n          <FormInputLabel htmlFor={itemNameID}>Name</FormInputLabel>\n          <FormInput \n          id={itemNameID} \n          type=\"text\" \n          name=\"itemName\" \n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={itemName} \n          onChange={handleChange} />\n        </FormInputList>\n        <FormInputList>\n          <FormInputLabel htmlFor={descriptionID}>Description</FormInputLabel>\n          <FormInput \n          id={descriptionID} \n          type=\"text\" \n          name=\"description\" \n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          value={description} \n          onChange={handleChange} />\n        </FormInputList>\n        <FormInputList>\n          <FormInputLabel htmlFor={priceID}>Price</FormInputLabel>\n          <FormInput \n          id={priceID} \n          type=\"number\" \n          name=\"price\" \n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          value={price} \n          onChange={handleChange} \n          required/>\n        </FormInputList>\n\n        <Button \n        style={{\n          position: 'relative',\n          marginTop: '10px',\n          right: '0px',\n          \n        }}\n    \n      text=\"Add Item\"\n      type=\"submit\"\n      // onClick={() => setModalSectionActive(true)}\n      />\n        </>\n        </Form>\n        )\n};","import { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport { Form, FormInputList, FormInputLabel, FormInput } from \"components/common/GeneralStyle/Input.styled\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getSections } from 'redux/sections/sections-selector';\nimport { addSection } from \"redux/sections/sections-operation\"; \nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { Button } from \"components/Button/Button\";\n\nexport default function ModalAddSectionForm ({setModalSectionActive}) {\n  // console.log(setModalSectionActive)\n  const sections = useSelector(getSections);\n  console.log(sections)\n  \n  const dispatch = useDispatch();\n\n  const [category, setCategory] = useState('');\n  \n  \n\n\n  const sectionNameID = nanoid();\n;\n\n  const handleChange = (e) => {\n        const { name } = e.currentTarget;\n        switch (name) {\n          case 'category':\n            setCategory ( e.currentTarget.value);\n            break;\n          default:\n            break;\n        }\n      };\n\n      // Функція для отримання максимального значення idSort в масиві\nconst getMaxIdSort = (sections) => {\n  return sections.reduce((max, section) => {\n      return Math.max(max, parseInt(section.idSort));\n  }, 0);\n};\n\n  const handleSubmit = (e) => {\n\n    const maxIdSort = getMaxIdSort(sections);\n    // console.log((maxIdSort + 1).toString(),)\n          e.preventDefault()\n        const duplicateSections = sections.find(section => section.category.toLocaleLowerCase() === category.toLocaleLowerCase());\n      \n          if (duplicateSections) {\n            Notify.failure(`${category} is already in item`)\n            return\n          }\n              dispatch(addSection({\n                idSort: (maxIdSort + 1).toString(),\n                category}));\n              setCategory('');\n              setModalSectionActive(false);\n      }; \n\n      return ( \n        <Form \n        onClick={e => e.stopPropagation()}\n        onSubmit={handleSubmit}\n        >\n          <>\n        <FormInputList>\n          <FormInputLabel htmlFor={sectionNameID}>Name</FormInputLabel>\n          <FormInput \n          id={sectionNameID} \n          type=\"text\" \n          name=\"category\" \n          pattern=\"^[^0-9].*\"\n          title=\"A section cannot start with a number\"\n          required\n          value={category} \n          onChange={handleChange} />\n        </FormInputList>\n       \n        <Button \n        style={{\n          position: 'relative',\n          right: '0px',\n          height: '25px',\n          padding: '0px 0px',\n          minWidth: '80px',\n          fontSize: 15,\n          color: '#010101',\n        }}\n    \n      text=\"Add\"\n      type=\"submit\"\n      />\n        </>\n        </Form>\n        )\n};","import styled from 'styled-components';\n// import { device } from 'Device';\nimport { Btn, TextBtn } from 'components/Button/Button.styled';\n\nexport const Wrapper = styled.div`\n    display: grid;\n    justify-content: center;\n    width: 400px;\n    height: 450px;\n    z-index: 1;\nbackground-color: #919191;\n    border: 1px solid rgb(7, 94, 138);\n`\nexport const Title = styled.h1`\n    margin-top: 10px;\n    margin-bottom: 10px;\n    font-size: 22px;\n`\nexport const QrName = styled.p`\n    padding-top: 5px;\n    padding-bottom: 10px;\n`\nexport const QrWrap = styled.div`\n/* display: flex; */\n    width: 300px;\n    height: 300px;\n    /* margin: auto; */\n    margin-bottom: 15px;\n    background-color: #fff;\n`\nexport const Button = styled(Btn)`\n    \n`\nexport const Text = styled(TextBtn)`\n    \n`","import React, { useRef } from 'react';\nimport QRCode from 'react-qr-code';\n\nimport { getUser } from \"redux/auth/auth-selector\";\nimport { useSelector } from \"react-redux\";\n\nimport * as htmlToImage from 'html-to-image';\n\nimport { Wrapper, Title, QrName, QrWrap, Button, Text } from './QRCode.styled';\n\nfunction QrResult() {\n\n  const user = useSelector(getUser);\n\n  const protocol = window.location.protocol;\n  const hostname = window.location.hostname;\n  // Перевіряємо, чи встановлений порт\n  const port = window.location.port ? `:${window.location.port}` : '';\n  const pathAfterHostname = window.location.pathname;\n   // Розбиваємо шлях на частини\n   const pathParts = pathAfterHostname.split('/');\n   // Перший підкаталог після доменного імені\n   const firstSubdirectory = pathParts[1];\n  // Складаємо початок адреси\n  const baseURL = `${protocol}//${hostname}${port}/${firstSubdirectory}`;\n\n\n  const wey = `${baseURL}/live/${user._id}`\n\n\nconst ref = useRef(null)\n\n\nconst saveQRCode = async () => {\n  const svgElement = ref.current; // Отримання посилання на SVG-елемент за допомогою useRef\n\n  if (!svgElement) {\n    console.error('SVG елемент не знайдено');\n    return;\n  }\n  console.log(svgElement)\n  htmlToImage.toPng(svgElement)\n    .then(function (dataUrl) {\n      const link = document.createElement('a');\n      link.href = dataUrl;\n      link.download = `QRCode-${user.name}.png`;\n      link.click();\n    })\n    .catch(function (error) {\n      console.error('Помилка при конвертації SVG в PNG:', error);\n    });\n};\n\n\n  return (\n    <Wrapper\n    onClick={e => e.stopPropagation()}>\n      <Title>QR Code {user.name}</Title>\n<QrWrap\nref={ref}\n>\n  <QrName\n  >{user.name}</QrName>\n      <QRCode \n      value={wey} \n      />\n      </QrWrap>\n      <Button onClick={saveQRCode}>\n        <Text>Зберегти QR-код</Text></Button>\n    </Wrapper>\n  );\n}\nexport default QrResult;","import styled from 'styled-components';\nimport { TbArrowsLeft } from \"react-icons/tb\";\nimport { TbArrowsRight } from \"react-icons/tb\";\n\nexport const MenuButton = styled.button`\nposition: absolute;\ntop: 0px;\nright: 0px;\n /* z-index: 1000; */\n  display: block;\n  height: 30px;\n  outline: 0;\n  border: 0;\n  padding: 5px 5px 0px 5px;\n  background: none;\n\n\n  &:hover,\n  :focus{\n    cursor: pointer;\n    color: ${props => props.theme.colors.btnActive};\n  }\n`;\n\n\nexport const BarOpen  = styled(TbArrowsRight)`\n  width: 30px;\n  height: 30px;\n`\nexport const BarClose  = styled(TbArrowsLeft)`\n  width: 30px;\n  height: 30px;\n`","// import React, { useContext } from 'react';\n// import styled from 'styled-components';\n// import { MenuContext } from './navState';\nimport { MenuButton, BarClose, BarOpen } from './ToggleButton.styled';\n\n\nconst HamburgerButton = ({moveMenu, moveSection}) => {\n  // const { isMenuClose, toggleMenuMode } = useContext(MenuContext);\n\n\n  console.log(\"moveSection\", moveSection)\n\n  const clickHandler = () => {\n    moveMenu();\n    // console.log(\"value\", value)\n    // toggleMenuMode();\n    \n  };\n\n  return (\n    <MenuButton\n      \n      onClick={clickHandler}\n    >{moveSection ? <BarOpen />  : <BarClose />} \n\n    </MenuButton>\n  );\n};\n\nexport default HamburgerButton;","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\n\nimport {\n  Sections,\n  SectionForm,\n  SectionWrap,\n  // SectionWrapWrap,\n  AddButton,\n  AddButtonText,\n} from './MenuItems.styled';\n\nimport { fetchItems } from 'redux/items/items-operation';\nimport { getItemsByCategory } from 'redux/items/items-selector';\n// import { getSections } from 'redux/sections/sections-selector';\nimport { fetchSections } from 'redux/sections/sections-operation';\n\nimport { Modal } from 'components/common/Modal/Modal';\nimport ItemsSections from 'components/Section/ItemSections/ItemsSections';\nimport MenuItemsDetails from 'components/MenuItemsDetails/MenuItemsDetails';\nimport QROptions from 'components/QROptions/QROptions';\nimport ModalItemAddForm from '../../components/Item/ModalItemAddForm/ModalItemAddForm';\nimport ModalAddSectionForm from 'components/Section/ModalAddSectionForm/ModalAddSectionForm';\nimport QrResult from 'components/QRCode/QRCode';\n\n// import { MenuContext } from './ToggleMenu/navState';\nimport HamburgerButton from './ToggleMenu/ToggleButton';\nimport NavState from 'Pages/MenuItems/ToggleMenu/navState';\n\nexport default function MenuItems() {\n  const location = useLocation();\n  const category = location.pathname.split('/')[2];\n\n  const [modalActive, setModalActive] = useState(false);\n  const [modalAddSectionActive, setModalAddSectionActive] = useState(false);\nconst   [modalQrActive, setModalQrActive] = useState(false);\nconst [moveSection, setMoveSection] = useState(false);\n\n  const dispatch = useDispatch();\n  const itemsCategory = useSelector(getItemsByCategory);\n  // const sections = useSelector(getSections);\n\n  useEffect(() => {\n    console.log(\"useefect\")\n    dispatch(fetchItems());\n    dispatch(fetchSections());\n  }, [dispatch]);\n\nconst moveMenu = () => {\n  \n  setMoveSection(!moveSection)\n  console.log(\"moveSection\", moveSection)\n}\n// const scrollRef = useRef(null);\n  // console.log(sections)\n  const SideMenu = () => {\n    // const { isMenuClose } = useContext(MenuContext);\n    \n// console.log(\"isMenuClose\", isMenuClose)\n    return (\n      // <SectionWrapWrap>\n\n          <SectionWrap \n          // ref={scrollRef}\n          value={moveSection} >\n          <HamburgerButton \n          // value={isMenuClose}\n          moveMenu={moveMenu}\n          moveSection={moveSection}\n          />\n          <SectionForm value={moveSection} >\n            {/* <ul> */}\n              {/* {sections.map((section) => (\n                <ItemsSections \n                key={section._id}\n                section={section}></ItemsSections>\n              ))} */}\n                 <ItemsSections \n                //  dispatch={dispatch}\n                //  scrollRef={scrollRef}\n                // key={section._id}\n                ></ItemsSections>\n            {/* </ul> */}\n            <AddButton\n              type=\"button\"\n              onClick={() =>setModalAddSectionActive(true)}\n            >\n              <AddButtonText>Add Section</AddButtonText>\n            </AddButton>\n          </SectionForm>\n        </SectionWrap>\n      //  </SectionWrapWrap>\n    );\n  };\n\n  function closeModal() {\n    setModalActive(false);\n    setModalAddSectionActive(false);\n    setModalQrActive(false);\n    document.body.style.overflow = '';\n  }\n \n\n  return (\n    <>\n      <QROptions \n      setModalQrActive={setModalQrActive}/>\n      {/* <CreateQrWrap>\n      <CreateQr onClick={() => setModalQrActive(true)}\n      >Create QR</CreateQr>\n      </CreateQrWrap> */}\n      \n          {modalQrActive && (\n            <Modal\n            onClick={() => closeModal()}\n            active={modalQrActive}\n            setActive={setModalQrActive}\n          >\n            <QrResult></QrResult>\n          </Modal>\n          )\n\n          }\n      <Sections>\n        <NavState>\n          <SideMenu />\n          {modalAddSectionActive && (\n            <Modal\n              onClick={() => closeModal()}\n              active={modalAddSectionActive}\n              setActive={setModalAddSectionActive}\n            >\n              <ModalAddSectionForm\n                onClick={e => e.stopPropagation()}\n                setModalSectionActive={setModalAddSectionActive}\n              />\n            </Modal>\n          )}\n          {modalActive && (\n            <Modal\n              onClick={() => closeModal()}\n              active={modalActive}\n              setActive={setModalActive}\n            >\n              <ModalItemAddForm\n                onClick={e => e.stopPropagation()}\n                setModalActive={setModalActive}\n                category={category}\n                itemsCategory={itemsCategory}\n              />\n            </Modal>\n          )}\n          <MenuItemsDetails \n          setModalActive={setModalActive}\n          moveSection={moveSection}\n          />\n        </NavState>\n      </Sections>\n    </>\n  );\n}\n"],"names":["Sections","styled","div","_templateObject","_taggedTemplateLiteral","SectionWrap","_templateObject2","_templateObject3","props","theme","size","navbarHeightMobile","value","css","_templateObject4","device","tablet","navbarHeightTablet","desktop","navbarHeightDesktop","SectionForm","_templateObject5","_templateObject6","AddButton","Btn","_templateObject7","AddButtonText","TextBtn","_templateObject8","FilterList","li","colors","btnActive","Button","a","BtnChange","button","StyledChange","CiEdit","_templateObject9","MoveButtonSection","MdDeleteForever","_templateObject10","_templateObject11","MoveUpSection","MdOutlineKeyboardDoubleArrowUp","_templateObject12","MoveDownSection","MdOutlineKeyboardDoubleArrowDown","_templateObject13","FilterListWrap","ul","_templateObject14","MoveButtonWrap","_templateObject15","BtnList","_ref","style","text","type","onClick","_jsx","children","TextWrapper","Text","p","ModalSectionDelete","_id","closeModal","dispatch","useDispatch","console","log","_jsxs","e","stopPropagation","marginRight","position","right","height","padding","minWidth","fontSize","color","delItemsByCategory","deleteSection","ModalChangeSectionName","category","idSort","sections","useSelector","getSections","_useState","useState","_useState2","_slicedToArray","newSectionName","setNewSectionName","_useState3","_useState4","modalDeleteActive","setModalDeleteActive","sectionNameID","nanoid","closeModalDelete","document","body","overflow","Form","onSubmit","preventDefault","find","section","toLocaleLowerCase","Notify","failure","concat","updateSection","_Fragment","FormInputList","FormInputLabel","htmlFor","LabelName","FormInput","id","name","pattern","title","required","defaultValue","onChange","currentTarget","marginLeft","Modal","active","setActive","ModalChangeSectionActive","setModalChangeSectionActive","idTarget","idSortTarget","valueTarget","state","setState","_useState5","savedIndex","localStorage","getItem","JSON","parse","_useState6","activeIndex","setActiveIndex","buttonClickedRef","useRef","scrollRef","navigate","useNavigate","location","useLocation","useEffect","window","history","current","activeItem","querySelector","scrollIntoView","behavior","block","setItem","stringify","ref","map","item","index","className","event","setTimeout","sectionsId","handleSection","pathname","upIdSort","tempIdSort","upElement","fetchSections","handleUpSection","length","downIdSort","downElement","handleDownSection","handleSectionChange","ToLiveLink","NavLink","NavbarWrap","CreateQr","QROptions","setModalQrActive","user","getUser","chekName","Boolean","items","to","_ref2","target","rel","end","ModalItemAddForm","setModalActive","itemsCategory","itemName","setItemName","price","setPrice","description","setDescription","_useState7","_useState8","setSection","itemNameID","priceID","descriptionID","handleChange","maxIdSort","reduce","max","Math","parseInt","getMaxIdSort","itemCategory","addItems","toString","marginTop","ModalAddSectionForm","setModalSectionActive","setCategory","addSection","Wrapper","Title","h1","QrName","QrWrap","_regeneratorRuntime","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","i","Symbol","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","protocol","hostname","port","firstSubdirectory","split","baseURL","wey","saveQRCode","_asyncToGenerator","_callee","svgElement","_context","error","htmlToImage","dataUrl","link","createElement","href","download","click","apply","arguments","QRCode","MenuButton","BarOpen","TbArrowsRight","BarClose","TbArrowsLeft","moveMenu","moveSection","MenuItems","modalActive","modalAddSectionActive","setModalAddSectionActive","modalQrActive","setMoveSection","getItemsByCategory","fetchItems","SideMenu","HamburgerButton","ItemsSections","QrResult","NavState","MenuItemsDetails"],"sourceRoot":""}