{"version":3,"file":"static/js/909.cbbc744d.chunk.js","mappings":"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","sources":["components/Live/LiveItemsSections/LiveItemsSections.styled.jsx","components/Live/LiveItemsSections/LiveItemsSections.jsx","Pages/LivePage/LivePage.styled.jsx","Pages/LivePage/LivePage.jsx","redux/items/items-selector.js","redux/sections/sections-selector.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import styled from 'styled-components';\n\n\nexport const List = styled.div`\ntext-align: center;\ncolor: #ffffff;\n\n`\n\nexport const Title = styled.h2`\n  font-size: 25px;\n  position: sticky;\n  top: -1px;\n`\n\nexport const ImgLive = styled.img`\n/* position: relative; */\ndisplay: flex;\n  width: 100px;\n  height: 100px;\n  /* margin-right: 5px; */\n  justify-content: flex-end;\n  /* right: 5px;\n  bottom: auto; */\n  border-radius: 5px;\n\n`\nexport const ItemList = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-left:auto;\n  margin-right: auto;\n  text-align: center;\n      &:not(:first-child) {\n      margin-top: 10px;\n  }\n\n  /* padding-left: 10px;\n  padding-right: 5px; */\n  padding: 5px 5px 5px 10px;\n  border-radius: 10px;\n  border: 1px solid rgb(7, 94, 138);\n`;\nexport const ItemsGroup = styled.div`\n  /* display:flex; */\n  width: 100%;\n`\nexport const ItemTitle = styled.span`\n  font-size: 12px;\n`\nexport const ItemDescription = styled.span`\ndisplay: flex;\n  font-size: 8px;\n`\nexport const Item = styled.span`\nfont-size: 10px;\n  display: flex;\n`\n","import { nanoid } from 'nanoid';\nimport noimg from 'img/noimg.jpg'\nimport {List, \n  // ListLive,\n   Title, ImgLive, ItemList, ItemsGroup, ItemTitle, ItemDescription, Item} from './LiveItemsSections.styled'\n\n// const btnId = nanoid();\n// const sectionId = nanoid();\n\n\n\nfunction LiveItemsSections ({section, item}) {\n \n  const { \n    category,\n  } = section;\n  \n  const buttons = [\n    {\n      btn: category,\n      list: item,\n    }\n  \n  ];\n  \n  return (\n   \n      // <ListLive key={nanoid()}>     // </ListLive>\n\n      <>\n                  {buttons.map(b => (\n              <List\n              key={nanoid()}>\n               <b> <Title\n                key={nanoid()}>{b.btn}</Title> </b>\n                <ul>\n                {b.list.map(list => (\n                  \n                <ItemList \n                key={nanoid()}\n                \n                > <ItemsGroup>\n                  <ItemTitle>  <p>{list.itemName}</p></ItemTitle>\n                  <ItemDescription>  <p>{list.description}</p></ItemDescription>\n                  <Item><p>Price:</p>  <p>{list.price} </p></Item>\n                  </ItemsGroup>\n                  <ImgLive \n                  src={list.itemImg || noimg} \n                  alt=\"img\" \n                  loading='lazy' \n                  />\n                  </ItemList>\n                  \n                ))}\n                </ul>\n              </List>\n              \n              )\n              \n              )}\n       </>     \n  \n  );\n}\n\nexport default LiveItemsSections;\n","import styled from 'styled-components';\n\n\nexport const List = styled.ul`\ncolor: ${props => props.theme.colors.mainTextLive};\nfont-family:  ${props => props.theme.fonts.mainLive};\nbackground-color: ${props => props.theme.colors.backgrondLive};\n`\nexport const Menu = styled.h2`\n    font-size: 35px;\n`","// import {  getAllUser } from \"redux/user/user-selector\";\nimport {  useDispatch,useSelector } from \"react-redux\";\nimport React, { useEffect } from \"react\";\nimport {  allUsers } from \"redux/user/user-operation\";\n// import LiveListUser from \"components/Live/LiveListUser/LIveListUser\";\nimport { nanoid } from 'nanoid';\nimport { getSections } from \"redux/sections/sections-selector\"\nimport { fetchSections } from \"redux/sections/sections-operation\"\nimport LiveItemsSections from \"components/Live/LiveItemsSections/LiveItemsSections\";\nimport { useLocation } from 'react-router-dom'\nimport {  fetchItemsLive } from \"redux/items/items-operation\"\nimport { getItemsLive } from 'redux/items/items-selector';\nimport { List, Menu } from \"./LivePage.styled\";\n\n\nexport default function LivePage() {\n\n\n  const location = useLocation();\n  const category = (location.pathname.split('/')[2])\n  \n    const dispatch = useDispatch();\n    const sections = useSelector(getSections);\n    const items = useSelector(getItemsLive);\n// console.log(items)\n    useEffect(() => {\n      \n        dispatch(allUsers())\n        if (category) {\n          dispatch(fetchItemsLive(category));\n          dispatch(fetchSections(category));\n          \n        }\n        \n        \n      }, \n\n      [dispatch, category])\n\n\n  \n  return (\n    <>\n    \n    {/* <ul key={nanoid()}>\n          {users.map(user =>\n           <LiveListUser\n           user={user}\n          //  sections={sections}\n           ></LiveListUser>\n            ) } \n    </ul> */}\n    <List key={nanoid()}>\n      <Menu>Menu</Menu>\n       {sections.map(section =>\n        <LiveItemsSections\n        key={nanoid()}\n        section={section}\n        item={items.filter(i => \n          i.section === section._id)}\n        />  )\n}\n    </List>\n      </>\n  )\n}\n","export const getItems = ({items}) => items.items;\nexport const getItemsLive = ({items}) => items.itemsLive;\nexport const isLive = ({items}) => items.isLive;\nexport const imgSaved = ({items}) => (items.imgSaved);\nexport const getItemsByCategory = ({items}) => ( items.itemsByCategory);\nexport const getItemUpdate = ({items}) => (items.itemsByCategory);\nexport const getState = ({items}) => ({loading: items.loading, error: items.error});\nexport const getFilteredItems = ({filter, items}) => {   \n    if (!filter) \n    {return items.items};\n};","export const getSections = ({sections}) => ( sections.sections)\nexport const getSectionsLive = ({sectionsLive}) => ( sectionsLive.sections)\nexport const getState = ({sections}) => ({loading: sections.loading, error: sections.error});","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","Title","_templateObject2","ImgLive","_templateObject3","ItemList","_templateObject4","ItemsGroup","_templateObject5","ItemTitle","_templateObject6","ItemDescription","_templateObject7","Item","_templateObject8","_ref","section","item","buttons","btn","category","list","_jsx","_Fragment","children","map","b","_jsxs","nanoid","itemName","description","price","src","itemImg","noimg","alt","loading","props","theme","colors","mainTextLive","fonts","mainLive","backgrondLive","Menu","LivePage","useLocation","pathname","split","dispatch","useDispatch","sections","useSelector","getSections","items","getItemsLive","useEffect","allUsers","fetchItemsLive","fetchSections","LiveItemsSections","filter","i","_id","getItems","_ref2","itemsLive","isLive","_ref3","imgSaved","_ref4","getItemsByCategory","_ref5","itemsByCategory","getState","_ref7","error","size","arguments","length","undefined","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase"],"sourceRoot":""}