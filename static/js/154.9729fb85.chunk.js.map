{"version":3,"file":"static/js/154.9729fb85.chunk.js","mappings":"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","sources":["Pages/MenuItems/MenuItems.styled.jsx","components/Section/ItemSections/ItemsSections.styled.jsx","components/Section/ModalChangeSectionName/ModalChangeSectionName.styled.jsx","components/Button/Button.jsx","components/Section/ModalSectionDelete/ModalSectionDelete.styled.jsx","components/Section/ModalSectionDelete/ModalSectionDelete.jsx","components/Section/ModalChangeSectionName/ModalChangeSectionName.jsx","components/Section/ItemSections/ItemsSections.jsx","components/QROptions/QROptions.styled.jsx","components/QROptions/QROptions.jsx","components/Item/ModalItemAddForm/ModalItemAddForm.jsx","components/Section/ModalAddSectionForm/ModalAddSectionForm.jsx","components/QRCode/QRCode.styled.jsx","components/QRCode/QRCode.jsx","Pages/MenuItems/ToggleMenu/ToggleButton.styled.jsx","Pages/MenuItems/ToggleMenu/ToggleButton.jsx","Pages/MenuItems/MenuItems.jsx"],"sourcesContent":["import styled, { css } from 'styled-components';\nimport { Btn, TextBtn } from 'components/Button/Button.styled';\nimport { device } from 'Device';\n\nexport const Sections = styled.div`\n    display: flex;\n    /* margin-top: 25px; */\n    padding-left: 5px;\n    padding-right: 5px;\n`  \n\n\nexport const SectionWrap = styled.div`\nheight:calc(100vh - ${props => props.theme.size.navbarHeightMobile});\nposition: relative;\n  background-color: #cbcbcb;\n  transition: \n  width 0.3s cubic-bezier(0.645, 0.045, 0.355, 1);\n  ${props =>\n    props.value &&\n    css`\n      width: 40px;\n    `};\n    @media ${device.tablet} {\n      height:calc(100vh - ${props => props.theme.size.navbarHeightTablet});\n    }; \n    @media ${device.tablet} {\n      height:calc(100vh - ${props => props.theme.size.navbarHeightDesktop});\n    }; \n`\n\nexport const SectionForm = styled.div`\nbox-sizing: border-box;\n    border: 4px;\n    width: 160px;\n    padding-top: 35px;\n    /* display: none; */\n    opacity: 1;\n    /* position: fixed; */\n  /* top: 0; */\n  /* left: 0; */\n  /* width: 100%; */\n  /* height: 90vh; */\n  \n  background-color: #cbcbcb;\n\n  /* transform: translateX(0); */\n\n  transition: \n  transform 0.3s cubic-bezier(0.645, 0.045, 0.355, 1),\n  opacity 0.3s;\n\n  ${props =>\n    props.value &&\n    css`\n      transform: translateX(-100%);\n      opacity: 0;\n    `}\n\n    @media ${device.tablet} {\n        width: 300px;\n    };\n`\n\nexport const AddButton = styled(Btn)`\n        position: relative;\n          right: 0px;\n          height: 25px;\n          margin-top: 10px;\n          min-width: 100px;\n          font-size: 15px;\n          color: #010101;\n`\nexport const AddButtonText = styled(TextBtn)`\n  \n\n`\n","import styled from 'styled-components';\nimport { device } from 'Device';\nimport { NavLink } from 'react-router-dom';\n// import {MdOutlineDriveFileRenameOutline} from 'react-icons/md';\nimport {CiEdit} from 'react-icons/ci';\nimport {MdDeleteForever} from 'react-icons/md';\nimport { MdOutlineKeyboardDoubleArrowUp, MdOutlineKeyboardDoubleArrowDown  } from \"react-icons/md\";\n\n\n\nexport const Wrapper = styled.div`\n  position: relative;\n\n`;\n\nexport const FilterList = styled.li`\n\n  list-style: none;\n  display: flex;\n  /* &:not(:last-child) { */\n    margin-bottom: 5px;\n/* } */\n  /* justify-content: flex-start; */\n  /* align-items: center; */\n  /* flex-wrap: wrap; */\n  /* gap: 12px; */\n  &:last-child {\n    /* width: 72%; */\n\n    };\n`;\n\nexport const Item = styled.li`\n  display: flex;\n`;\n\nexport const Button = styled(NavLink)`\nword-wrap: break-word;\npadding-left: 5px;\n\nbox-sizing: border-box;\n/* list-style: none; */\nborder: none;\nwidth: 60%;\ncolor: #181515;\nfont-size: 20px;\nfont-weight: 900;\n  line-height: 1.35;\n  letter-spacing: 0.04em;\n  border-radius: 5px;\n  transition: color 250ms linear, background-color 250ms linear;\n  ${FilterList}:first-child & {\n    width: 72%;\n    @media ${device.tablet} {  \n        width: 100%;\n    };\n    };\n    ${FilterList}:last-child & {\n    width: 72%;\n    @media ${device.tablet} {  \n        width: 100%;\n    };\n    };\n      &:hover,\n       &:focus {\n        background-color: ${props => props.theme.colors.btnActive};\n        cursor: pointer;\n  }\n\n  &.active {\n   color: #573131;\n   background-color: #749574;\n  }\n\n  @media ${device.tablet} {  \n        width: 100%;\n    };\n`;\nexport const CommonLinks = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  flex-wrap: wrap-reverse;\n  gap: 12px;\n \n`;\nexport const AuthLinks = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  gap: 12px;\n`;\n// const Change = ({ className }) => <MdOutlineDriveFileRenameOutline className={className} />;\nexport const BtnChange = styled.button`\n  border: none;\n  background-color: transparent;\n  padding: 0;\n`\nexport const StyledChange = styled(CiEdit)`\nwidth:  25px;\nheight: 25px;\n\n  color: red;\n  &:hover,\n       &:focus {\n        color: ${props => props.theme.colors.btnActive};\n        cursor: pointer;\n  }\n  \n`\nexport const DelSection = styled(MdDeleteForever)`\n  color: red;\n  \n`\nexport const MoveButtonSection = styled.button`\n  border: none;\n  background-color: inherit;\n  padding: 0;\n  &:hover,\n       &:focus {\n        color: ${props => props.theme.colors.btnActive};\n        cursor: pointer;\n  }\n`\nexport const MoveUpSection = styled(MdOutlineKeyboardDoubleArrowUp)`\n  height: 20px;\n    width: 20px;\n`\nexport const MoveDownSection = styled(MdOutlineKeyboardDoubleArrowDown)`\nheight: 20px;\n    width: 20px;\n`","import styled from 'styled-components';\n\n\n\nexport const BtnList = styled.div`\n  margin-top: 10px;\n`","import { Btn, TextBtn } from './Button.styled';\nimport PropTypes from 'prop-types';\n\nexport const Button = ({style, text, type,\n  onClick\n}) => {\n  return (\n    <Btn \n    style={style}\n    onClick={onClick}\n    type={type}\n    >\n      <TextBtn>{text}</TextBtn>\n    </Btn>\n  );\n};\n\nButton.propTypes = {\n    onClick: PropTypes.func,\n  };","import styled from 'styled-components';\n\nexport const TextWrapper = styled.div`\n    /* width: 250px;\n    height: 100px; */\n    /* border: 1px solid #749574; */\n    font-size: 25px;\n    border: 1px solid rgb(7, 94, 138);\n    border-radius: 5px;\n    padding: 30px 10px 10px 10px;\n    width: 300px;\n    background-color: #919191;\n`\nexport const Text = styled.p`\nmargin-top: 20px;\nmargin-bottom: 20px;\n    font-size: 15px;\n`","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteSection } from 'redux/sections/sections-operation';\nimport { delItemsByCategory } from 'redux/items/items-operation';\nimport { Button } from 'components/Button/Button';\nimport { Text, TextWrapper } from './ModalSectionDelete.styled';\nexport default function ModalSectionDelete({ _id, closeModal }) {\n  const dispatch = useDispatch();\n  console.log(_id);\n  function DelSection() {\n    dispatch(delItemsByCategory(_id));\n    dispatch(deleteSection(_id));\n    closeModal();\n  }\n\n  return (\n    <TextWrapper onClick={e => e.stopPropagation()}>\n      <Text>Do you really wont to delete? All items will also be deleted\n      </Text>\n\n      <Button\n        style={{\n          marginRight: '25px',\n          position: 'relative',\n          right: '0px',\n          height: '25px',\n          padding: '0px 0px',\n          minWidth: '80px',\n          fontSize: 15,\n          color: '#010101',\n        }}\n        text=\"Yes\"\n        type=\"button\"\n        onClick={() => {\n          DelSection();\n        }}\n      />\n      <Button\n        style={{\n          position: 'relative',\n          right: '0px',\n          height: '25px',\n          padding: '0px 0px',\n          minWidth: '80px',\n          fontSize: 15,\n          color: '#010101',\n        }}\n        text=\"No\"\n        type=\"button\"\n        onClick={() => closeModal()}\n      />\n    </TextWrapper>\n  );\n}\n","import { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport { Form, FormInputList, FormInput, FormInputLabel, LabelName } from \"components/common/GeneralStyle/Input.styled\";\nimport {\n  useSelector, \n  useDispatch } from 'react-redux';\nimport { getSections } from 'redux/sections/sections-selector';\nimport { updateSection } from \"redux/sections/sections-operation\"; \nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { BtnList } from \"./ModalChangeSectionName.styled\";\nimport { Modal } from \"components/common/Modal/Modal\";\nimport ModalSectionDelete from \"../ModalSectionDelete/ModalSectionDelete\";\n  import { Button } from \"components/Button/Button\";\n\nexport default function ModalChangeSectionName ({ \n   category, \n   _id,\n   idSort,\n   closeModal\n  }) {\n  const sections = useSelector(getSections);\n  \n  const dispatch = useDispatch();\nconsole.log(\"idSort\", idSort)\n  const [newSectionName, setNewSectionName] = useState(category);\n  // const [newIdSort, setNewIdSort] = useState(idSort);\n\n  const [modalDeleteActive, setModalDeleteActive] = useState(false);\n\n  const sectionNameID = nanoid();\n  console.log(_id)\n  console.log(category)\n \n  const handleChange = (e) => {\n        const { name } = e.currentTarget;\n        switch (name) {\n          case 'newSectionName':\n            setNewSectionName ( e.currentTarget.value);\n            break;\n          default:\n            break;\n        }\n      };\n\n  const handleSubmit = (e) => {\n\n        e.preventDefault()\n        const duplicateItems = sections.find(section => section.category.toLocaleLowerCase() === newSectionName.toLocaleLowerCase());\n      \n       \n          if (duplicateItems) {\n            Notify.failure(`${newSectionName} is already in item`)\n            return\n          }\n\n            dispatch(updateSection(\n               {\n                _id,\n                idSort,\n                category: newSectionName,              \n              } ));\n                setNewSectionName('');\n              closeModal ();\n      }; \n      \n      function closeModalDelete () {\n        setModalDeleteActive(false)\n        document.body.style.overflow = '';\n      };\n\n      return ( \n        <Form \n        onClick={e => e.stopPropagation()}\n        onSubmit={handleSubmit}\n        >\n          <>\n        <FormInputList>\n          <FormInputLabel htmlFor={sectionNameID}><LabelName>Change Name</LabelName></FormInputLabel>\n          <FormInput \n          id={sectionNameID} \n          type=\"text\" \n          name=\"newSectionName\" \n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may \"\n          required\n          defaultValue={category}\n          onChange={handleChange} />\n        </FormInputList>\n        \n<BtnList>\n        <Button \n        style={{\n          position: 'relative',\n          right: '0px',\n          height: '25px',\n          padding: '0px 0px',\n          minWidth: '80px',\n          fontSize: 15,\n          color: '#010101',\n          marginRight: 'auto',\n          marginLeft: 'auto',\n          \n        }}\n    \n      text=\"Rename\"\n      type=\"submit\"\n      />\n      <Button \n        style={{\n          position: 'relative',\n          right: '0px',\n          height: '25px',\n          minWidth: '110px',\n          fontSize: 15,\n          color: '#632121',\n          marginRight: 'auto',\n          marginLeft: '25px',\n        }}\n    \n      text=\"Delete Section\"\n      type=\"button\"\n      onClick={() => setModalDeleteActive(true)}\n      />\n   </BtnList>\n              { modalDeleteActive && (\n          <Modal\n          onClick={() => closeModalDelete ()}\n          active={modalDeleteActive}\n          setActive={setModalDeleteActive}>\n          <ModalSectionDelete\n          closeModal={closeModalDelete}\n          _id={_id}\n          category={category}\n          />\n          </Modal>\n         )}\n        </>\n        </Form>\n        )\n};","import {useState} from 'react';\nimport { useDispatch} from 'react-redux';\n\nimport { fetchSections, updateSection } from \"redux/sections/sections-operation\"\nimport { getSections } from 'redux/sections/sections-selector';\n\nimport {\n  Button,\n  FilterList,\n  StyledChange,\n  BtnChange,\n  MoveButtonSection,\n  MoveUpSection,\n  MoveDownSection\n} from './ItemsSections.styled';\nimport { Modal } from 'components/common/Modal/Modal';\nimport ModalChangeSectionName from '../ModalChangeSectionName/ModalChangeSectionName';\n\nimport {  useSelector } from 'react-redux';\n\nfunction ItemsSections() {\n \n  const [ModalChangeSectionActive, setModalChangeSectionActive] = useState(false);\n    const [state, setState] = useState({\n    idTarget: \"\",\n    idSortTarget: \"\",\n    valueTarget: \"\",\n  });\n\n  const dispatch = useDispatch();\n  \n  function closeModal () {\n    setModalChangeSectionActive(false)\n    document.body.style.overflow = '';\n    // dispatch(fetchSections());\n  };\n \n  const sections = useSelector(getSections);\nconst sectArr = sections.map(({owner, ...rest}) => (rest));\n\n  const handleSectionChange = (item) => {\n\n    setState({\n      idTarget: item._id,\n      idSortTarget: item.idSort,\n      valueTarget: item.category,\n    });\n    setModalChangeSectionActive(true)\n      };\n\n  const handleDownSection = (item, index) => {\n        \nconst downIdSort = sectArr[index + 1].idSort;  //// над поточним IdSort\nconst tempIdSort = sectArr[index].idSort; //// поточний IdSort\nconst downElement = sectArr.find(item => item.idSort === downIdSort);\nconsole.log(\"downElement\", downElement)\n\n///// оновлення idSort поточного елемента /////////\n        dispatch(updateSection({\n          _id: item._id,\n          idSort: downIdSort,\n          category: item.category\n        }));\n ///// оновлення idSort верхнього елемента /////////       \n        dispatch(updateSection({\n          _id: downElement._id,\n          idSort: tempIdSort,\n          category: downElement.category\n        }));\n      dispatch(fetchSections());\n      };\n\n  const handleUpSection = (item, index) => {\n        \n        const upIdSort = sectArr[index - 1].idSort;  //// над поточним IdSort\n        const tempIdSort = sectArr[index].idSort; //// поточний IdSort\n        const upElement = sectArr.find(item => item.idSort === upIdSort);\n        console.log(\"item\", item)\n        console.log(\"upElement\", upElement)\n        \n        ///// оновлення idSort поточного елемента /////////\n                dispatch(updateSection({\n                  _id: item._id,\n                  idSort: upIdSort,\n                  category: item.category\n                }));\n         ///// оновлення idSort верхнього елемента /////////       \n         dispatch(updateSection({\n                  _id: upElement._id,\n                  idSort: tempIdSort,\n                  category: upElement.category\n                }));\n          dispatch(fetchSections());\n              };\n\n  return (\n    <>\n          {sectArr.map((item, index) => (\n            <FilterList\n       key={item._id}\n       id={item._id}\n       >\n        {index !== 0 && (\n        <MoveButtonSection\n        onClick={() => handleUpSection(item, index)}>\n          <MoveUpSection/>\n        </MoveButtonSection>\n        )}\n              <Button \n              key={item._id}\n              to={'/items/' + item._id} name={item._id}>\n                \n                {item.category}\n              </Button>\n              {index !== sectArr.length - 1 && (\n              <MoveButtonSection\n              onClick={() => handleDownSection(item, index)}>\n          <MoveDownSection/>\n        </MoveButtonSection>\n        )}\n              <BtnChange\n              id={item._id}\n              onClick={() => handleSectionChange(item)}\n          >\n                <StyledChange/>\n              </BtnChange>\n              </FilterList>\n              \n          ))}\n             {ModalChangeSectionActive && (\n          <Modal\n          onClick={() => closeModal ()}\n          active={ModalChangeSectionActive}\n          setActive={setModalChangeSectionActive}\n          >\n          <ModalChangeSectionName\n          closeModal={closeModal}\n          _id={state.idTarget}\n          idSort={state.idSortTarget}\n          category={state.valueTarget}\n          />\n          </Modal>\n         )} \n        </>  \n  );\n}\n\nexport default ItemsSections;\n\n\n\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport { device } from 'Device';\n\n\nexport const ToLiveLink = styled(NavLink)`\n    /* position: relative;\n    top: 35px;\n    right: 15px; */\n    font-weight: 900;\n    color: #181515;\n    &:hover,\n       &:focus {\n        color: ${props => props.theme.colors.btnActive};\n        cursor: pointer;\n  }\n`\n\nexport const NavbarWrap = styled.div`\n    /* margin-top: 10px;  */\n    text-align: end;\n    min-width: 150px;\n    position: absolute;\n    top:calc(5px + ${props => props.theme.size.navbarHeightMobile});\n    right: 15px;\n    @media ${device.tablet} {\n      top:calc(5px + ${props => props.theme.size.navbarHeightTablet});\n  };\n  @media ${device.desktop} {\n      top:calc(5px + ${props => props.theme.size.navbarHeightDesktop});\n  };\n`\n\n export const CreateQr = styled.p`\n margin-top: 10px;\n  font-weight: bold;\n  \n      &:hover,\n       &:focus {\n        color: ${props => props.theme.colors.btnActive};\n        cursor: pointer;\n  }\n  @media ${device.tablet} {\n    \n    };\n `","// import items from \"./items\"\nimport { nanoid } from \"nanoid\";\n// import { NavLink } from \"react-router-dom\"\nimport { getUser } from \"redux/auth/auth-selector\";\nimport { useSelector } from \"react-redux\";\nimport { ToLiveLink, NavbarWrap, CreateQr } from \"./QROptions.styled\";\n\n\n\nexport default function QROptions({setModalQrActive}) {\n  const user = useSelector(getUser);\n  // console.log(user)\n  const chekName = Boolean(user)\n  const items = chekName ? [\n   \n    {id: nanoid(),\n      to: `/live/${user._id}`,\n      text: \"Go to QR Menu\",\n  },\n    ] : \"\";\n\n\n  \n  return (\n     <NavbarWrap>\n      {chekName ? items.map(({id, to, text}) => {\n            return (\n                // <ToLiveLinkList  key={id}>\n                    <ToLiveLink \n                    key={id} \n                    target=\"_blank\"\n                    rel=\"noreferrer noopener\"\n                    to={to}\n                    end>\n                      {text}\n                     </ToLiveLink>\n                  // </ToLiveLinkList>\n            )})\n         : <></> }\n\n      \n      <CreateQr onClick={() => setModalQrActive(true)}\n      >Create QR</CreateQr>\n      </NavbarWrap>\n    //  </>\n  )\n}","import { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport { Form, FormInputList, FormInputLabel, FormInput } from \"components/common/GeneralStyle/Input.styled\";\nimport {\n  // useSelector, \n  useDispatch } from 'react-redux';\n// import { getFilteredItems } from 'redux/items/items-selector';\n\nimport { addItems } from \"redux/items/items-operation\"; \nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { Button } from \"components/Button/Button\";\n\n\nexport default function ModalItemAddForm ({\n   setModalActive, category, itemsCategory}) {\n  \n  console.log(itemsCategory)\n  const dispatch = useDispatch();\n\n  const [itemName, setItemName] = useState('');\n  const [price, setPrice] = useState('');\n  const [description, setDescription] = useState('');\n  const [section, setSection] = useState(category)\n\n\n  const itemNameID = nanoid();\n  const priceID = nanoid();\n  const descriptionID = nanoid();\n\n  const handleChange = (e) => {\n        const { name } = e.currentTarget;\n        switch (name) {\n          case 'itemName':\n            setItemName ( e.currentTarget.value);\n            break;\n            case 'description':\n              setDescription (e.currentTarget.value);\n            break;\n          case 'price':\n            setPrice (e.currentTarget.value);\n            break;\n          default:\n            break;\n        }\n      };\n\n      // Функція для отримання максимального значення idSort в масиві\n      const getMaxIdSort = (itemsCategory) => {\n        return itemsCategory.reduce((max, item) => {\n          console.log(\"max\", max)\n          console.log(\"item\", item)\n            return Math.max(max, parseInt(item.idSort));\n        }, 0);\n      };\n\n  const handleSubmit = (e) => {\n\n    const maxIdSort = getMaxIdSort(itemsCategory);\n    console.log(\"maxIdSort\", maxIdSort)\n\n        e.preventDefault()\n        \n        const duplicateItems = itemsCategory.find(itemCategory => itemCategory.itemName.toLocaleLowerCase() === itemName.toLocaleLowerCase());\n      \n       \n          if (duplicateItems) {\n            Notify.failure(`${itemName} is already in item`)\n            return\n          }\n           else {\n            setSection (category)\n            dispatch(addItems(\n             {itemName, \n              description, \n              price, \n              section,\n              idSort: (maxIdSort + 1).toString()}\n              ));\n              setItemName('');\n              setDescription('');\n              setPrice('');\n              setSection('');\n              setModalActive(false);\n          }\n      }; \n  \n     \n      return ( \n        <Form \n        onClick={e => e.stopPropagation()}\n        onSubmit={handleSubmit}\n        >\n          <>\n        <FormInputList>\n          <FormInputLabel htmlFor={itemNameID}>Name</FormInputLabel>\n          <FormInput \n          id={itemNameID} \n          type=\"text\" \n          name=\"itemName\" \n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={itemName} \n          onChange={handleChange} />\n        </FormInputList>\n        <FormInputList>\n          <FormInputLabel htmlFor={descriptionID}>Description</FormInputLabel>\n          <FormInput \n          id={descriptionID} \n          type=\"text\" \n          name=\"description\" \n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          value={description} \n          onChange={handleChange} />\n        </FormInputList>\n        <FormInputList>\n          <FormInputLabel htmlFor={priceID}>Price</FormInputLabel>\n          <FormInput \n          id={priceID} \n          type=\"number\" \n          name=\"price\" \n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          value={price} \n          onChange={handleChange} \n          required/>\n        </FormInputList>\n\n        <Button \n        style={{\n          position: 'relative',\n          marginTop: '10px',\n          right: '0px',\n          \n        }}\n    \n      text=\"Add Item\"\n      type=\"submit\"\n      // onClick={() => setModalSectionActive(true)}\n      />\n        </>\n        </Form>\n        )\n};","import { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport { Form, FormInputList, FormInputLabel, FormInput } from \"components/common/GeneralStyle/Input.styled\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getSections } from 'redux/sections/sections-selector';\nimport { addSection } from \"redux/sections/sections-operation\"; \nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { Button } from \"components/Button/Button\";\n\nexport default function ModalAddSectionForm ({setModalSectionActive}) {\n  // console.log(setModalSectionActive)\n  const sections = useSelector(getSections);\n  console.log(sections)\n  \n  const dispatch = useDispatch();\n\n  const [category, setCategory] = useState('');\n  \n  \n\n\n  const sectionNameID = nanoid();\n;\n\n  const handleChange = (e) => {\n        const { name } = e.currentTarget;\n        switch (name) {\n          case 'category':\n            setCategory ( e.currentTarget.value);\n            break;\n          default:\n            break;\n        }\n      };\n\n      // Функція для отримання максимального значення idSort в масиві\nconst getMaxIdSort = (sections) => {\n  return sections.reduce((max, section) => {\n      return Math.max(max, parseInt(section.idSort));\n  }, 0);\n};\n\n  const handleSubmit = (e) => {\n\n    const maxIdSort = getMaxIdSort(sections);\n    // console.log((maxIdSort + 1).toString(),)\n          e.preventDefault()\n        const duplicateSections = sections.find(section => section.category.toLocaleLowerCase() === category.toLocaleLowerCase());\n      \n          if (duplicateSections) {\n            Notify.failure(`${category} is already in item`)\n            return\n          }\n              dispatch(addSection({\n                idSort: (maxIdSort + 1).toString(),\n                category}));\n              setCategory('');\n              setModalSectionActive(false);\n      }; \n\n      return ( \n        <Form \n        onClick={e => e.stopPropagation()}\n        onSubmit={handleSubmit}\n        >\n          <>\n        <FormInputList>\n          <FormInputLabel htmlFor={sectionNameID}>Name</FormInputLabel>\n          <FormInput \n          id={sectionNameID} \n          type=\"text\" \n          name=\"category\" \n          pattern=\"^[^0-9].*\"\n          title=\"A section cannot start with a number\"\n          required\n          value={category} \n          onChange={handleChange} />\n        </FormInputList>\n       \n        <Button \n        style={{\n          position: 'relative',\n          right: '0px',\n          height: '25px',\n          padding: '0px 0px',\n          minWidth: '80px',\n          fontSize: 15,\n          color: '#010101',\n        }}\n    \n      text=\"Add\"\n      type=\"submit\"\n      />\n        </>\n        </Form>\n        )\n};","import styled from 'styled-components';\n// import { device } from 'Device';\nimport { Btn, TextBtn } from 'components/Button/Button.styled';\n\nexport const Wrapper = styled.div`\n    display: grid;\n    justify-content: center;\n    width: 400px;\n    height: 450px;\n    z-index: 1;\nbackground-color: #919191;\n    border: 1px solid rgb(7, 94, 138);\n`\nexport const Title = styled.h1`\n    margin-top: 10px;\n    margin-bottom: 10px;\n    font-size: 22px;\n`\nexport const QrName = styled.p`\n    padding-top: 5px;\n    padding-bottom: 10px;\n`\nexport const QrWrap = styled.div`\n/* display: flex; */\n    width: 300px;\n    height: 300px;\n    /* margin: auto; */\n    margin-bottom: 15px;\n    background-color: #fff;\n`\nexport const Button = styled(Btn)`\n    \n`\nexport const Text = styled(TextBtn)`\n    \n`","import React, { useRef } from 'react';\nimport QRCode from 'react-qr-code';\n\nimport { getUser } from \"redux/auth/auth-selector\";\nimport { useSelector } from \"react-redux\";\n\nimport * as htmlToImage from 'html-to-image';\n\nimport { Wrapper, Title, QrName, QrWrap, Button, Text } from './QRCode.styled';\n\nfunction QrResult() {\n\n  const user = useSelector(getUser);\n\n  const protocol = window.location.protocol;\n  const hostname = window.location.hostname;\n  // Перевіряємо, чи встановлений порт\n  const port = window.location.port ? `:${window.location.port}` : '';\n  const pathAfterHostname = window.location.pathname;\n   // Розбиваємо шлях на частини\n   const pathParts = pathAfterHostname.split('/');\n   // Перший підкаталог після доменного імені\n   const firstSubdirectory = pathParts[1];\n  // Складаємо початок адреси\n  const baseURL = `${protocol}//${hostname}${port}/${firstSubdirectory}`;\n\n\n  const wey = `${baseURL}/live/${user._id}`\n\n\nconst ref = useRef(null)\n\n\nconst saveQRCode = async () => {\n  const svgElement = ref.current; // Отримання посилання на SVG-елемент за допомогою useRef\n\n  if (!svgElement) {\n    console.error('SVG елемент не знайдено');\n    return;\n  }\n  console.log(svgElement)\n  htmlToImage.toPng(svgElement)\n    .then(function (dataUrl) {\n      const link = document.createElement('a');\n      link.href = dataUrl;\n      link.download = `QRCode-${user.name}.png`;\n      link.click();\n    })\n    .catch(function (error) {\n      console.error('Помилка при конвертації SVG в PNG:', error);\n    });\n};\n\n\n  return (\n    <Wrapper\n    onClick={e => e.stopPropagation()}>\n      <Title>QR Code {user.name}</Title>\n<QrWrap\nref={ref}\n>\n  <QrName\n  >{user.name}</QrName>\n      <QRCode \n      value={wey} \n      />\n      </QrWrap>\n      <Button onClick={saveQRCode}>\n        <Text>Зберегти QR-код</Text></Button>\n    </Wrapper>\n  );\n}\nexport default QrResult;","import styled from 'styled-components';\nimport { TbArrowsLeft } from \"react-icons/tb\";\nimport { TbArrowsRight } from \"react-icons/tb\";\n\nexport const MenuButton = styled.button`\nposition: absolute;\ntop: 0px;\nright: 0px;\n /* z-index: 1000; */\n  display: block;\n  height: 30px;\n  outline: 0;\n  border: 0;\n  padding: 5px 5px 0px 5px;\n  /* padding-left: 5px;\n  padding-top: 5px; */\n  background: none;\n\n  /* span {\n    transition: all 0.3s cubic-bezier(0.645, 0.045, 0.355, 1);\n  } */\n\n  /* :focus {\n    border: medium none rgb(111, 255, 176);\n    box-shadow: rgb(111, 255, 176) 0 0 2px 2px;\n    outline: 0;\n  } */\n\n  &:hover,\n  :focus{\n    border: medium none rgb(111, 255, 176);\n    box-shadow: rgb(111, 255, 176) 0 0 2px 2px;\n    /* outline: 0; */\n    /* span:nth-of-type(1) {\n      width: 33px;\n    }\n\n    span:nth-of-type(2) {\n      width: 40px;\n    }\n\n    span:nth-of-type(3) {\n      width: 30px;\n    } */\n  }\n\n  &.active {\n\n    /* span:nth-of-type(1) {\n      transform: rotate(45deg) translate(10px, 10px);\n      width: 40px;\n    }\n\n    span:nth-of-type(2) {\n      opacity: 0;\n      pointer-events: none;\n    }\n\n    span:nth-of-type(3) {\n      transform: rotate(-45deg) translate(7px, -7px);\n      width: 40px;\n    } */\n  }\n`;\n\n// export const Bar = styled.span`\n//   display: block;\n//   width: 40px;\n//   height: 5px;\n//   margin-bottom: 7px;\n//   background-color: #6b0707;\n// `;\n\nexport const BarOpen  = styled(TbArrowsRight)`\n  width: 30px;\n  height: 30px;\n`\nexport const BarClose  = styled(TbArrowsLeft)`\n  width: 30px;\n  height: 30px;\n`","import React, { useContext } from 'react';\n// import styled from 'styled-components';\nimport { MenuContext } from './navState';\nimport { MenuButton, BarClose, BarOpen } from './ToggleButton.styled';\n\n\nconst HamburgerButton = () => {\n  const { isMenuClose, toggleMenuMode } = useContext(MenuContext);\n\n  const clickHandler = () => {\n    toggleMenuMode();\n  };\n\n  return (\n    <MenuButton\n      // className={isMenuOpen ? 'active' : ''}\n    //   aria-label=\"Открыть главное меню\"\n      onClick={clickHandler}\n    >{isMenuClose ? <BarOpen />  : <BarClose />} \n      {/* <BarClose />\n      <BarOpen /> */}\n      {/* <Bar />\n      <Bar /> */}\n    </MenuButton>\n  );\n};\n\nexport default HamburgerButton;","import { useEffect, useState, useContext } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\n\nimport {\n  Sections,\n  SectionForm,\n  SectionWrap,\n  AddButton,\n  AddButtonText,\n} from './MenuItems.styled';\n\nimport { fetchItems } from 'redux/items/items-operation';\nimport { getItemsByCategory } from 'redux/items/items-selector';\n// import { getSections } from 'redux/sections/sections-selector';\nimport { fetchSections } from 'redux/sections/sections-operation';\n\nimport { Modal } from 'components/common/Modal/Modal';\nimport ItemsSections from 'components/Section/ItemSections/ItemsSections';\nimport MenuItemsDetails from 'components/MenuItemsDetails/MenuItemsDetails';\nimport QROptions from 'components/QROptions/QROptions';\nimport ModalItemAddForm from '../../components/Item/ModalItemAddForm/ModalItemAddForm';\nimport ModalAddSectionForm from 'components/Section/ModalAddSectionForm/ModalAddSectionForm';\nimport QrResult from 'components/QRCode/QRCode';\n\nimport { MenuContext } from './ToggleMenu/navState';\nimport HamburgerButton from './ToggleMenu/ToggleButton';\nimport NavState from 'Pages/MenuItems/ToggleMenu/navState';\n\nexport default function MenuItems() {\n  const location = useLocation();\n  const category = location.pathname.split('/')[2];\n\n  const [modalActive, setModalActive] = useState(false);\n  const [modalAddSectionActive, setModalAddSectionActive] = useState(false);\nconst   [modalQrActive, setModalQrActive] = useState(false);\n\n\n  const dispatch = useDispatch();\n  const itemsCategory = useSelector(getItemsByCategory);\n  // const sections = useSelector(getSections);\n\n  useEffect(() => {\n    console.log(\"useefect\")\n    dispatch(fetchItems());\n    dispatch(fetchSections());\n  }, [dispatch]);\n\n\n\n  // console.log(sections)\n  const SideMenu = () => {\n    const { isMenuClose } = useContext(MenuContext);\n    \n\n    return (\n      <>\n          <SectionWrap value={isMenuClose} >\n          <HamburgerButton value={isMenuClose} />\n          <SectionForm value={isMenuClose} >\n            <ul>\n              {/* {sections.map((section) => (\n                <ItemsSections \n                key={section._id}\n                section={section}></ItemsSections>\n              ))} */}\n                 <ItemsSections \n                // key={section._id}\n                ></ItemsSections>\n            </ul>\n            <AddButton\n              type=\"button\"\n              onClick={() => setModalAddSectionActive(true)}\n            >\n              <AddButtonText>Add Section</AddButtonText>\n            </AddButton>\n          </SectionForm>\n        </SectionWrap>\n      </>\n    );\n  };\n\n  function closeModal() {\n    setModalActive(false);\n    setModalAddSectionActive(false);\n    setModalQrActive(false);\n    document.body.style.overflow = '';\n  }\n \n\n  return (\n    <>\n      <QROptions \n      setModalQrActive={setModalQrActive}/>\n      {/* <CreateQrWrap>\n      <CreateQr onClick={() => setModalQrActive(true)}\n      >Create QR</CreateQr>\n      </CreateQrWrap> */}\n      \n          {modalQrActive && (\n            <Modal\n            onClick={() => closeModal()}\n            active={modalQrActive}\n            setActive={setModalQrActive}\n          >\n            <QrResult></QrResult>\n          </Modal>\n          )\n\n          }\n      <Sections>\n        <NavState>\n          <SideMenu />\n          {modalAddSectionActive && (\n            <Modal\n              onClick={() => closeModal()}\n              active={modalAddSectionActive}\n              setActive={setModalAddSectionActive}\n            >\n              <ModalAddSectionForm\n                onClick={e => e.stopPropagation()}\n                setModalSectionActive={setModalAddSectionActive}\n              />\n            </Modal>\n          )}\n          {modalActive && (\n            <Modal\n              onClick={() => closeModal()}\n              active={modalActive}\n              setActive={setModalActive}\n            >\n              <ModalItemAddForm\n                onClick={e => e.stopPropagation()}\n                setModalActive={setModalActive}\n                category={category}\n                itemsCategory={itemsCategory}\n              />\n            </Modal>\n          )}\n          <MenuItemsDetails setModalActive={setModalActive} />\n        </NavState>\n      </Sections>\n    </>\n  );\n}\n"],"names":["Sections","styled","div","_templateObject","_taggedTemplateLiteral","SectionWrap","_templateObject2","props","theme","size","navbarHeightMobile","value","css","_templateObject3","device","tablet","navbarHeightTablet","navbarHeightDesktop","SectionForm","_templateObject4","_templateObject5","AddButton","Btn","_templateObject6","AddButtonText","TextBtn","_templateObject7","FilterList","li","Button","NavLink","colors","btnActive","BtnChange","button","StyledChange","CiEdit","_templateObject8","MoveButtonSection","MdDeleteForever","_templateObject9","_templateObject10","MoveUpSection","MdOutlineKeyboardDoubleArrowUp","_templateObject11","MoveDownSection","MdOutlineKeyboardDoubleArrowDown","_templateObject12","BtnList","_ref","style","text","type","onClick","_jsx","children","TextWrapper","Text","p","ModalSectionDelete","_id","closeModal","dispatch","useDispatch","console","log","_jsxs","e","stopPropagation","marginRight","position","right","height","padding","minWidth","fontSize","color","delItemsByCategory","deleteSection","ModalChangeSectionName","category","idSort","sections","useSelector","getSections","_useState","useState","_useState2","_slicedToArray","newSectionName","setNewSectionName","_useState3","_useState4","modalDeleteActive","setModalDeleteActive","sectionNameID","nanoid","closeModalDelete","document","body","overflow","Form","onSubmit","preventDefault","find","section","toLocaleLowerCase","Notify","failure","concat","updateSection","_Fragment","FormInputList","FormInputLabel","htmlFor","LabelName","FormInput","id","name","pattern","title","required","defaultValue","onChange","currentTarget","marginLeft","Modal","active","setActive","ModalChangeSectionActive","setModalChangeSectionActive","idTarget","idSortTarget","valueTarget","state","setState","sectArr","map","owner","_objectWithoutProperties","_excluded","item","index","upIdSort","tempIdSort","upElement","fetchSections","handleUpSection","to","length","downIdSort","downElement","handleDownSection","handleSectionChange","ToLiveLink","NavbarWrap","desktop","CreateQr","QROptions","setModalQrActive","user","getUser","chekName","Boolean","items","_ref2","target","rel","end","ModalItemAddForm","setModalActive","itemsCategory","itemName","setItemName","price","setPrice","_useState5","_useState6","description","setDescription","_useState7","_useState8","setSection","itemNameID","priceID","descriptionID","handleChange","maxIdSort","reduce","max","Math","parseInt","getMaxIdSort","itemCategory","addItems","toString","marginTop","ModalAddSectionForm","setModalSectionActive","setCategory","addSection","Wrapper","Title","h1","QrName","QrWrap","_regeneratorRuntime","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","protocol","window","location","hostname","port","firstSubdirectory","pathname","split","baseURL","wey","ref","useRef","saveQRCode","_asyncToGenerator","_callee","svgElement","_context","current","error","htmlToImage","dataUrl","link","createElement","href","download","click","apply","arguments","QRCode","MenuButton","BarOpen","TbArrowsRight","BarClose","TbArrowsLeft","_useContext","useContext","MenuContext","isMenuClose","toggleMenuMode","MenuItems","useLocation","modalActive","modalAddSectionActive","setModalAddSectionActive","modalQrActive","getItemsByCategory","useEffect","fetchItems","SideMenu","HamburgerButton","ItemsSections","QrResult","NavState","MenuItemsDetails"],"sourceRoot":""}