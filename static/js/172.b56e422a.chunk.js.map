{"version":3,"file":"static/js/172.b56e422a.chunk.js","mappings":"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","sources":["Pages/Login/Login.styled.jsx","components/hooks/useForm.js","components/LoginForm/LoginForm.styled.jsx","components/LoginForm/loginForm.jsx","Pages/Login/Login.jsx","components/Button/Button.styled.jsx","components/common/GeneralStyle/Input.styled.jsx","components/common/GeneralStyle/LogRegButton.styled.jsx","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import styled from 'styled-components';\nimport { device } from 'Device';\n\nexport const LoginPage = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`\nexport const Title = styled.h1`\n    color: white;\n    font-size: 30px;\n    margin-top: 50px;\n    \n    @media ${device.tablet} {\n        margin-top: 10px;\n        font-size: 25px;\n}\n@media ${device.desktop} {\n        margin-top: 40px;\n        font-size: 40px;\n}\n`\nexport const Paragraph = styled.br`\n       @media ${device.tablet} {\n        display: none;\n}\n`","import {useState} from \"react\";\n\nconst useForm = ({initialState, onSubmit}) => {\n    const [state, setState] = useState({...initialState});\n\n    const handleChange = ({target}) => {\n        const {value, name, type, checked} = target;\n        const newValue = type === \"checkbox\" ? checked : value;\n        setState(prevState => ({\n            ...prevState,\n            [name]: newValue.toLocaleLowerCase(),\n        }))\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        onSubmit({...state});\n        setState({...initialState});\n    };\n\n    return {state, setState, handleChange, handleSubmit}\n}\n\nexport default useForm;","import styled from 'styled-components';\nimport { device } from 'Device';\nimport { TextBtn } from 'components/Button/Button.styled';\n\nexport const FormLogin = styled.form`\n    margin-top: 50px;\n    @media ${device.mobile} {\n        width: 100%;\n    }\n    @media ${device.tablet} {\n        margin-top: 10px;\n}\n@media ${device.desktop} {\n        margin-top: 70px;\n}\n`\n\nexport const LoginFormWrapper = styled.div`\n    /* display: block;\n    align-items: center; */\n`\nexport const LoginFormList = styled.div`\n    display: block;\n    /* align-items: center; */\n   \n    &:not(:first-child) {\n        margin-top: 40px;\n    }\n    @media ${device.tablet} {\n        &:not(:first-child) {\n        margin-top: 20px;\n    }\n}\n    @media ${device.desktop} {\n        &:not(:first-child) {\n        margin-top: 40px;\n    }\n}\n`\n\nexport const LoginFormLabel = styled.label`\n    color: white;\n    display: block;\n    /* font-weight: 600; */\n    @media ${device.mobile} {\n        /* margin-right: 5px; */\n        font-size: 20px;\n    /* width: 95px; */\n    }\n    @media ${device.tablet} {\n        font-size: 18px;\n    }\n    @media ${device.desktop} {\n        font-size: 25px;\n    }\n\n`\n\nexport const TextButton = styled(TextBtn)`\n    \n`","import { nanoid } from \"nanoid\";\nimport useForm from 'components/hooks/useForm';\nimport PropTypes from \"prop-types\";\n// import { Button } from \"components/Button/Button\";\nimport { FormLogin, LoginFormWrapper, LoginFormLabel, LoginFormList, TextButton } from \"./LoginForm.styled\";\nimport { LogRegInput } from \"components/common/GeneralStyle/Input.styled\";\nimport { ButtonLogReg } from 'components/common/GeneralStyle/LogRegButton.styled';\n\nimport Loader from \"components/Loader/Loader\";\nimport { getLoadingUserStatus } from \"redux/auth/auth-selector\";\nimport { useSelector } from \"react-redux\";\n    const initialState = {\n        email: \"\",\n        password: \"\",\n      };\n    \n    export default function LoginForm({onSubmit}) {\n\n      const isLoadingUser = useSelector(getLoadingUserStatus)\nconsole.log(\"isLoadingUser\", isLoadingUser)\n\n\n        const {state, handleChange, handleSubmit} = useForm({initialState, onSubmit});\n        const {email, password} = state;\n\n        const emailId = nanoid();\n        const passwordId = nanoid();\n\n\n      return (\n        \n        <FormLogin \n        onSubmit={handleSubmit}\n        >\n<LoginFormWrapper>\n       <LoginFormList>\n              <LoginFormLabel\n            htmlFor={emailId}> \n            Login \n            </LoginFormLabel>\n            <LogRegInput \n            id={emailId} placeholder=\"Enter name\" name=\"email\" type=\"text\" required onChange={handleChange} value={email}\n            pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\" \n             />\n        </LoginFormList>\n\n        <LoginFormList>\n              <LoginFormLabel\n            htmlFor={passwordId}>Password \n            </LoginFormLabel>\n            <LogRegInput \n            id={passwordId} \n            placeholder=\"Enter password\" \n            name=\"password\" \n            type=\"password\" \n            required onChange={handleChange}\n            value={password}\n             />\n        </LoginFormList>\n        \n        </LoginFormWrapper>\n        {/* <Button \n        style={{\n          height: '35px',\n        }}\n        text=\"Login\"\n        type=\"submit\"\n        /> */}\n        <ButtonLogReg\n        type=\"submit\"\n        >\n          <TextButton>\n          Login {isLoadingUser && \n       <Loader/> }\n          </TextButton>\n        </ButtonLogReg>\n       </FormLogin>\n       \n      )\n    };\n\n    LoginForm.defaultProps = {\n        onSubmit: () => {}\n      }\n      \n      LoginForm.propTypes = {\n        onSubmit: PropTypes.func,\n      }\n    ","import { useDispatch } from \"react-redux\";\nimport { login } from 'redux/auth/auth-operation';\nimport { LoginPage, Title, Paragraph } from \"./Login.styled\";\n\nimport LoginForm from 'components/LoginForm/loginForm';\n\nexport default function Login () {\n   \n    const dispatch = useDispatch();\n    const onLogin = (data) => {\n      dispatch(login(data));\n    }\n  return (\n    <LoginPage>\n      <Title>Sign in please <Paragraph /> in your Menu</Title>\n      <LoginForm onSubmit={onLogin}/>\n    </LoginPage>\n  )\n};\n\n\n","import styled from 'styled-components';\n\nexport const Btn = styled.button`\n  padding: 0px 10px;\n  background-color: ${props => props.theme.colors.btn};\n    transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    border: none;\n    border-radius: 10px;\n    text-decoration: none;\n    cursor: pointer;\n    font-family: inherit;\n    /* font-weight: 800; */\n    min-width: 100px;\n    height: 25px;\n    box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n      0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n      &:hover,\n       &:focus {\n        background-color: ${props => props.theme.colors.btnActive};\n        cursor: pointer;\n  }\n` \nexport const TextBtn = styled.p`\n  color: ${props => props.theme.colors.mainTextBtn};\n  font-size: 15px;\n  font-weight: 800;\n  /* line-height: 24px; */\n  /* font-style: normal; */\n\n`\n  \n  ","import styled from 'styled-components';\nimport { device } from 'Device';\n\nexport const LogRegInput = styled.input`\n    box-sizing: border-box;\npadding-left: 10px;\n border-radius: 5px;\n border: none;\n box-shadow: 7px 20px 14px rgba(10, 4, 1, 0.5);\n &:focus, &:hover  {\n    \n    outline: 2px solid #F59256;\n }\n @media ${device.mobile} {\n    margin-top: 5px;\n    width: 300px;\n    height: 50px;\n    }\n    @media ${device.tablet} {\n        height: 40px;\n    }\n    @media ${device.desktop} {\n        margin-top: 10px;\n        width: 350px;\n        height: 50px;\n}\n`\nexport const Form = styled.form`\n font-size: 25px;\n    border: 1px solid rgb(7, 94, 138);\n    border-radius: 5px;\n    padding: 30px 10px 10px 10px;\n    width: 300px;\n    background-color: #919191;\n`\n   \nexport const FormInputList = styled.div`\n    display: flex;\n    flex-direction: column;\n    &:not(:first-child) {\n    margin-top: 10px;\n}\n    \n`\nexport const FormInputLabel = styled.label`\nfont-size: 25px;\nfont-family: inherit;\n\n\n`\nexport const FormInput = styled.input`\nfont-family: 'Times New Roman', Times, serif;\nfont-size: 17px;\nmargin-top: 10px;\n    padding-left: 10px;\n    max-width: 100%;\n    height: 25px;\n    border-radius: 5px;\n    border: 1px solid #749574;\n`\nexport const FormInputDescription = styled.textarea`\nfont-family: 'Times New Roman', Times, serif;\nfont-size: 17px;\nmargin-top: 10px;\n    padding-left: 10px;\n    max-width: 100%;\n    height: 100px;\n    border-radius: 5px;\n    border: 1px solid #749574;\n    &:focus, &:hover  {\n    outline: 2px solid #F59256;\n }\n`\nexport const FormInputSection = styled.input`\nfont-family: 'Times New Roman', Times, serif;\nfont-size: 17px;\n    background-color: #FFF;\n    padding-left: 10px;\n    width: 170px;\n    height: 25px;\n    border-radius: 5px;\n    border: 1px solid #749574;\n`\nexport const LabelName = styled.p`\n    font-size: 20px;\n    font-family: Inter, sans-serif;\n`","import styled from 'styled-components';\nimport { device } from 'Device';\nimport { Btn } from 'components/Button/Button.styled';\n\n\n\nexport const ButtonLogReg = styled(Btn)`\n      @media ${device.mobile} {\n        margin-top: 70px;\n    width: 100%;\n    height: 50px;\n    }\n    @media ${device.tablet} {\n        margin-top: 30px;\n        width: 300px;\n}\n@media ${device.desktop} {\n        margin-top: 40px;\n        width: 350px;\n}\n`","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n"],"names":["LoginPage","styled","_templateObject","_taggedTemplateLiteral","Title","_templateObject2","device","Paragraph","_templateObject3","_ref","initialState","onSubmit","_useState","useState","_objectSpread","_useState2","_slicedToArray","state","setState","handleChange","_ref2","target","value","name","type","checked","newValue","prevState","_defineProperty","toLocaleLowerCase","handleSubmit","e","preventDefault","FormLogin","LoginFormWrapper","LoginFormList","LoginFormLabel","_templateObject4","TextButton","TextBtn","_templateObject5","email","password","LoginForm","isLoadingUser","useSelector","getLoadingUserStatus","console","log","_useForm","useForm","emailId","nanoid","passwordId","_jsxs","children","_jsx","htmlFor","LogRegInput","id","placeholder","required","onChange","pattern","ButtonLogReg","Loader","Login","dispatch","useDispatch","data","login","defaultProps","Btn","props","theme","colors","btn","btnActive","mainTextBtn","Form","FormInputList","FormInputLabel","FormInput","FormInputDescription","_templateObject6","FormInputSection","_templateObject7","LabelName","_templateObject8","size","arguments","length","undefined","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}