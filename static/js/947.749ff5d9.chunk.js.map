{"version":3,"file":"static/js/947.749ff5d9.chunk.js","mappings":"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","sources":["webpack://project1/./src/components/Item/ModalItemForm/ModalItemForm.module.scss?c082","components/Item/ModalItemForm/ModalItemForm.jsx","webpack://project1/./src/components/Section/ModalSectionForm/ModalSectionForm.module.scss?fc3c","components/Section/ModalSectionForm/ModalSectionForm.jsx","Pages/MenuItems/MenuItems.styled.jsx","components/Section/ItemSections/ItemsSections.styled.jsx","webpack://project1/./src/components/Section/ModalChangeSectionName/ModalChangeSectionName.module.scss?9f11","components/Section/ModalChangeSectionName/ModalChangeSectionName.jsx","components/Section/ItemSections/ItemsSections.jsx","components/Navbar/NavbarLive/NavbarLive.jsx","Pages/MenuItems/MenuItems.jsx","redux/filter/filter-selector.js","components/Item/ItemInList/ItemInList.styled.jsx","components/Item/ModalItemDetail/ModalItemDetail.styled.jsx","components/Item/ModalItemDetail/ModalItemDetail.jsx","components/Item/ModalItemDelete/ModalItemDelete.jsx","components/Item/ItemInList/ItemInList.jsx","components/Item/ItemList/ItemList.jsx","components/filter/Filter.styled.jsx","components/filter/Filter.jsx","components/MenuItemsDetails/MenuItemsDetails.styled.jsx","components/MenuItemsDetails/MenuItemsDetails.jsx","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","redux/items/items-selector.js","redux/sections/sections-selector.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ModalItemForm_form__-+3k4\",\"formInput\":\"ModalItemForm_formInput__adINV\",\"formInputName\":\"ModalItemForm_formInputName__Q6Z+x\",\"formInputTel\":\"ModalItemForm_formInputTel__URgjM\",\"formBtn\":\"ModalItemForm_formBtn__f7UqB\"};","import { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport scss from \"./ModalItemForm.module.scss\"\nimport {\n  // useSelector, \n  useDispatch } from 'react-redux';\n// import { getFilteredItems } from 'redux/items/items-selector';\n\nimport { addItems } from \"redux/items/items-operation\"; \nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n// import { Formik } from 'formik';\n\n\nexport default function ModalItemForm ({\n  // onClick,\n   setModalActive, category, itemsCategory}) {\n  // const items = useSelector(getFilteredItems);\n  // console.log(\"category\", category)\n  console.log(itemsCategory)\n  const dispatch = useDispatch();\n\n  const [itemName, setItemName] = useState('');\n  const [price, setPrice] = useState('');\n  const [description, setDescription] = useState('');\n  const [section, setSection] = useState(category)\n// console.log(section)\n  // const [datat, setDatat] = useState({\n  //   name: '',\n  //   description: '',\n  //   phone: '',\n\n  // });\n\n  const itemNameID = nanoid();\n  const priceID = nanoid();\n  const descriptionID = nanoid();\n\n  const handleChange = (e) => {\n        const { name } = e.currentTarget;\n        switch (name) {\n          case 'itemName':\n            setItemName ( e.currentTarget.value);\n            break;\n            case 'description':\n              setDescription (e.currentTarget.value);\n            break;\n          case 'price':\n            setPrice (e.currentTarget.value);\n            break;\n          default:\n            break;\n        }\n      };\n\n  const handleSubmit = (e) => {\n\n    // const { name, description, phone } = values;\n\n    // const data = new FormData();\n\n    // data.append('name', name);\n    // data.append('description', description);\n    // data.append('phone', phone);\n\n        e.preventDefault()\n        \n        const duplicateItems = itemsCategory.find(itemCategory => itemCategory.itemName.toLocaleLowerCase() === itemName.toLocaleLowerCase());\n      \n       \n          if (duplicateItems) {\n            Notify.failure(`${itemName} is already in item`)\n            return\n          }\n          if (description === \"\") {\n            setSection (category)\n            dispatch(addItems(\n              {itemName, price, section}\n              ));\n              setItemName('');\n            // setDescription('');\n            setPrice('');\n            setSection('');\n            setModalActive(false);\n          }\n          else {\n            setSection (category)\n            dispatch(addItems(\n             {itemName, description, price, section}\n              ));\n              setItemName('');\n              setDescription('');\n              setPrice('');\n              setSection('');\n              setModalActive(false);\n          }\n      }; \n      // const initialValues = {\n      //   name: '',\n      //   description: '',\n      //   phone: '',\n      // };\n     \n      return ( \n        <form \n        onClick={e => e.stopPropagation()}\n        className={scss.form}\n        onSubmit={handleSubmit}\n        // initialValues={initialValues}\n        // validateOnChange\n        >\n          <>\n        <div className={scss.formInput}>\n          <label htmlFor={itemNameID}>Name</label>\n          <input \n          className={scss.formInputName}\n          id={itemNameID} \n          type=\"text\" \n          name=\"itemName\" \n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={itemName} \n          onChange={handleChange} />\n        </div>\n        <div className={scss.formInput}>\n          <label htmlFor={descriptionID}>Description</label>\n          <input \n          className={scss.formInputName}\n          id={descriptionID} \n          type=\"text\" \n          name=\"description\" \n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          value={description} \n          onChange={handleChange} />\n        </div>\n        <div className={scss.formInput}>\n          <label htmlFor={priceID}>Price</label>\n          <input \n          className={scss.formInputTel}\n          id={priceID} \n          type=\"number\" \n          name=\"price\" \n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          value={price} \n          onChange={handleChange} \n          required/>\n        </div>\n        <button \n        // onClick={values => handleSubmit(values)}\n        className={scss.formBtn}\n        type=\"submit\">Add</button>\n        </>\n        </form>\n        )\n};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ModalSectionForm_form__tsdCk\",\"formInput\":\"ModalSectionForm_formInput__0syn9\",\"formInputName\":\"ModalSectionForm_formInputName__uNNee\",\"formInputTel\":\"ModalSectionForm_formInputTel__e0ZFB\",\"formBtn\":\"ModalSectionForm_formBtn__-DNOk\"};","import { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport scss from \"./ModalSectionForm.module.scss\"\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getSections } from 'redux/sections/sections-selector';\nimport { addSection } from \"redux/sections/sections-operation\"; \nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n// import { Formik } from 'formik';\n\nexport default function ModalSectionForm ({onClick, setModalSectionActive}) {\n  // console.log(setModalSectionActive)\n  const sections = useSelector(getSections);\n  // console.log(sections)\n  \n  const dispatch = useDispatch();\n\n  const [category, setCategory] = useState('');\n  \n\n  // const [datat, setDatat] = useState({\n  //   name: '',\n  //   description: '',\n  //   phone: '',\n\n  // });\n\n  const sectionNameID = nanoid();\n;\n\n  const handleChange = (e) => {\n        const { name } = e.currentTarget;\n        switch (name) {\n          case 'category':\n            setCategory ( e.currentTarget.value);\n            break;\n          default:\n            break;\n        }\n      };\n\n  const handleSubmit = (e) => {\n\n    // const { name, description, phone } = values;\n\n    // const data = new FormData();\n\n    // data.append('name', name);\n    // data.append('description', description);\n    // data.append('phone', phone);\n\n        e.preventDefault()\n        const duplicateSections = sections.find(section => section.category.toLocaleLowerCase() === category.toLocaleLowerCase());\n      \n       \n          if (duplicateSections) {\n            Notify.failure(`${category} is already in item`)\n            // alert (`${name} is already in contact`)\n            return\n          }\n              dispatch(addSection({category}));\n              setCategory('');\n              setModalSectionActive(false);\n          \n      }; \n      // const initialValues = {\n      //   name: '',\n      //   description: '',\n      //   phone: '',\n      // };\n\n      return ( \n        <form \n        onClick={e => e.stopPropagation()}\n        className={scss.form}\n        onSubmit={handleSubmit}\n        // initialValues={initialValues}\n        // validateOnChange\n        >\n          <>\n        <div className={scss.formInput}>\n          <label htmlFor={sectionNameID}>Name</label>\n          <input \n          className={scss.formInputName}\n          id={sectionNameID} \n          type=\"text\" \n          name=\"category\" \n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={category} \n          onChange={handleChange} />\n        </div>\n       \n        <button \n        // onClick={values => handleSubmit(values)}\n        className={scss.formBtn}\n        type=\"submit\">Add</button>\n        </>\n        </form>\n        )\n};","import styled from 'styled-components';\n\n\nexport const Sections = styled.div`\n/* color: white; */\n    /* color: rgb(38, 146, 179); */\n    display: flex;\n    margin-top: 25px;\n    /* margin-left: 15px; */\n`\n    \nexport const SectionForm = styled.div`\n    border: 4px;\n`\n\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport {MdOutlineDriveFileRenameOutline} from 'react-icons/md';\n\n\nexport const Wrapper = styled.div`\n  position: relative;\n\n`;\n\nexport const FilterList = styled.li`\n\n  list-style: none;\n  /* display: flex; */\n  /* justify-content: flex-start; */\n  /* align-items: center; */\n  /* flex-wrap: wrap; */\n  /* gap: 12px; */\n\n`;\n\nexport const Item = styled.li`\n  display: flex;\n`;\n\nexport const Button = styled(NavLink)`\ncolor: white;\n  line-height: 1.35;\n  letter-spacing: 0.04em;\n  \n  /* padding: 8px 28px; */\n  transition: color 250ms linear, background-color 250ms linear;\n  &:hover,\n  &:focus {\n   \n    cursor: pointer;\n  }\n  &.active {\n   \n  }\n\n`;\nexport const CommonLinks = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  flex-wrap: wrap-reverse;\n  gap: 12px;\n \n`;\nexport const AuthLinks = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  gap: 12px;\n`;\nconst Change = ({ className }) => <MdOutlineDriveFileRenameOutline className={className} />;\n\nexport const StyledChange = styled(Change)`\n  \n`","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ModalChangeSectionName_form__SoU6b\",\"formInput\":\"ModalChangeSectionName_formInput__zg-bf\",\"formInputName\":\"ModalChangeSectionName_formInputName__NYHJd\",\"formInputTel\":\"ModalChangeSectionName_formInputTel__vrPdC\",\"formBtn\":\"ModalChangeSectionName_formBtn__i8Tos\"};","import { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport scss from \"./ModalChangeSectionName.module.scss\"\nimport {\n  useSelector, \n  useDispatch } from 'react-redux';\nimport { getSections } from 'redux/sections/sections-selector';\nimport { updateSection } from \"redux/sections/sections-operation\"; \nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n// import { Formik } from 'formik';\n// import { useLocation,\n//   //  useSearchParams\n//    } from 'react-router-dom';\n  //  import { useEffect } from \"react\";\n  //  import {  geItemsByCategory } from \"redux/items/items-operation\";\n  //  import { fetchSections } from \"redux/sections/sections-operation\"\n\nexport default function ModalChangeSectionName ({\n  //  itemsCategory, \n   category,\n  //  price, \n  //  description, \n   _id,\n    closeModal}) {\n  const sections = useSelector(getSections);\n  // console.log(\"category\", category)\n  \n \n\n// const example = [\n//   {\n//   _id: \"12458255\", \n//   itemName: \"name\",\n//   description: \"descr\",\n//   price: \"255\"\n// }\n// ]\n\n\n// console.log(example)\n// console.log(itemsCategory)\n// const newArr = example.map(({_id, ...rest}) => ({rest}))\n\n// // const resss = (exell.map(data => \n// //   delete data._id))\n// // const arr = exell.splice(0, 1)\n// console.log(newArr)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  //  const location = useLocation();\n\n//   const category = location.pathname.split('/')[2];\n  const dispatch = useDispatch();\n\n  const [newSectionName, setNewSectionName] = useState(category);\n\n  // const [section, setSection] = useState(category)\n// console.log(section)\n\n\n  const sectionNameID = nanoid();\n \n \n// console.log(itemName, price)\n\n  const handleChange = (e) => {\n        const { name } = e.currentTarget;\n        switch (name) {\n          case 'newSectionName':\n            setNewSectionName ( e.currentTarget.value);\n            break;\n          default:\n            break;\n        }\n      };\n\n  const handleSubmit = (e) => {\n\n        e.preventDefault()\n        const duplicateItems = sections.find(section => section.category.toLocaleLowerCase() === newSectionName.toLocaleLowerCase());\n      \n       \n          if (duplicateItems) {\n            Notify.failure(`${newSectionName} is already in item`)\n            // alert (`${name} is already in contact`)\n            return\n          }\n          // if (description === \"\") {\n          //   setSection (category)\n          //   dispatch(addItems(\n          //     {itemsName, price, section}\n          //     ));\n          //     setItemsName('');\n          //   // setDescription('');\n          //   setPrice('');\n          //   setSection('');\n          //   setModalActive(false);\n          // }\n          // else {\n            // setSection (category)\n\n            // console.log(_id)\n            // console.log(itemsName)\n            // console.log(dispatch(itemUpdate({_id, \n            //   itemName: itemsName}\n            //  )))\n            // setSection (category)\n\n            dispatch(updateSection(\n              {_id, \n                category: newSectionName,              \n              } ));\n                // dispatch(geItemsByCategory({category: category}))\n                setNewSectionName('');\n            \n              closeModal ();\n              // setModalDetailActive(false);\n          // }\n      }; \n      // const initialValues = {\n      //   name: '',\n      //   description: '',\n      //   phone: '',\n      // };\n\n\n      // useEffect(() => {\n      //   // dispatch(fetchItems());\n      //   console.log(\"use in modal\")\n      //   dispatch(fetchSections());\n      \n        \n      //     // if (category === undefined) {\n      //     //   console.log(\"undef\")\n      //     // }\n      //     // else {\n           \n      //     //   dispatch(geItemsByCategory({category: category}))\n      //     // }\n        \n      //   }, \n      //    [ dispatch,\n      //       newSectionName,\n      //      category,\n      //      ])\n\n\n\n\n      return ( \n        <form \n        onClick={e => e.stopPropagation()}\n        className={scss.form}\n        onSubmit={handleSubmit}\n        >\n          <>\n        <div className={scss.formInput}>\n          <label htmlFor={sectionNameID}>Name</label>\n          <input \n          className={scss.formInputName}\n          id={sectionNameID} \n          type=\"text\" \n          name=\"newSectionName\" \n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may \"\n          required\n          // value={itemsName} \n          defaultValue={category}\n          onChange={handleChange} />\n        </div>\n        \n        <button \n        // onClick={values => handleSubmit(values)}\n        className={scss.formBtn}\n        type=\"submit\">Change Section</button>\n        </>\n        </form>\n        )\n};","import {useState} from 'react';\nimport { \n  // useSelector,\n  useDispatch} from 'react-redux';\n// import { getSections } from 'redux/sections/sections-selector';\n// import { selectIsLoggedIn } from 'redux/auth/authSelectors';\nimport { nanoid } from 'nanoid';\nimport {\n  Button,\n  FilterList,\n  StyledChange\n  // Item,\n  // Wrapper,\n  // AuthLinks,\n  // CommonLinks,\n} from './ItemsSections.styled';\nimport { Modal } from 'components/Modal/Modal';\nimport ModalChangeSectionName from '../ModalChangeSectionName/ModalChangeSectionName';\n// import { useEffect } from \"react\";\n// import {  geItemsByCategory } from \"redux/items/items-operation\";\nimport { fetchSections } from \"redux/sections/sections-operation\"\n\n// const btnId = nanoid();\n// const sectionId = nanoid();\n\n// const authButtons = [\n//   {\n//     btn: 'favorite ads',\n//     link: 'favorites-ads',\n//   },\n//   {\n//     btn: 'my ads',\n//     link: 'my-ads',\n//   },\n// ];\n\nfunction ItemsSections({section}) {\n  // const sections = useSelector(getSections);\n  // console.log(section)\n  const [modalActive, setModalActive] = useState(false);\n  const dispatch = useDispatch();\n  function closeModal () {\n    setModalActive(false)\n    \n    document.body.style.overflow = '';\n    dispatch(fetchSections());\n  }\n  const { \n    _id,\n    category,\n  } = section;\n  // console.log(category)\n\n  const buttons = [\n    {\n      btn: category,\n      link: _id,\n    }\n  \n  ];\n  // const isLoggedIn = useSelector(selectIsLoggedIn);\n\n  return (\n    // <Wrapper>\n      <FilterList key={nanoid()}>\n        {/* <CommonLinks> */}\n          {buttons.map(b => (\n            // <Item key={btnId}>\n              <Button \n              key={nanoid()}\n              to={'/items/' + b.link} name={b.link}>\n                {b.btn}\n              </Button>\n              \n            //  </Item>\n          ))}\n          <button\n          key={nanoid()}\n          onClick={() => setModalActive(true)}>\n                <StyledChange/>\n              </button>\n              { modalActive && (\n          <Modal\n          onClick={() => closeModal ()}\n          active={modalActive}\n          setActive={setModalActive}>\n          <ModalChangeSectionName\n          closeModal={closeModal}\n          _id={_id}\n          category={category}\n          />\n     \n          </Modal>\n         )}\n        {/* </CommonLinks> */}\n        {/* <AuthLinks>\n          {isLoggedIn &&\n            authButtons.map(b => (\n              <Item key={nanoid()}>\n                <Button to={'/items/' + b.link} name={b.link}>\n                  {b.btn}\n                </Button>\n              </Item>\n            ))}\n        </AuthLinks> */}\n      </FilterList>\n    // </Wrapper>\n  );\n}\n\nexport default ItemsSections;\n","// import items from \"./items\"\nimport { nanoid } from \"nanoid\";\nimport { NavLink } from \"react-router-dom\"\nimport { getUser } from \"redux/auth/auth-selector\";\nimport { useSelector } from \"react-redux\";\n\n\n\nexport default function NavbarLive() {\n  const user = useSelector(getUser);\n  console.log(user)\n  const chekName = Boolean(user)\n  const items = chekName ? [\n   \n    {id: nanoid(),\n      to: `/live/${user._id}`,\n      text: \"live\",\n  },\n   \n    ] : \"\";\n\n\n  \n  return (\n    <ul >\n      {chekName ? items.map(({id, to, text}) => {\n            return (\n                <li  key={id}>\n                    <NavLink  \n                    target=\"_blank\"\n                    rel=\"noreferrer noopener\"\n                    to={to}\n                    end>\n                      {text}\n                     </NavLink>\n                </li>\n            )})\n         : <></> }\n\n        \n    </ul>\n  )\n}","// import { useEffect } from \"react\";\nimport  ModalItemForm  from \"../../components/Item/ModalItemForm/ModalItemForm\"\nimport ModalSectionForm from \"components/Section/ModalSectionForm/ModalSectionForm\"\n// import {ItemList} from \"../../components/Item/ItemList/ItemList\"\nimport { \n  fetchItems,\n  //  geItemsByCategory\n   } from \"redux/items/items-operation\"\n// import Filter from \"../../components/filter/Filter\"\nimport { Sections, SectionForm } from \"./MenuItems.styled\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\n// import { getState } from 'redux/items/items-selector';\nimport { \n  // getItems,\n   getItemsByCategory } from 'redux/items/items-selector';\nimport { getSections } from \"redux/sections/sections-selector\"\nimport { Modal } from \"components/Modal/Modal\";\nimport ItemsSections from \"components/Section/ItemSections/ItemsSections\"\nimport { useLocation,\n  // useParams\n  //  useSearchParams\n   } from 'react-router-dom'\n// import UseAuth from \"components/hooks/useAuth\"\n// import { Navigate } from \"react-router-dom\"\nimport { fetchSections } from \"redux/sections/sections-operation\"\n// import {  allUsers } from \"redux/user/user-operation\";\nimport MenuItemsDetails from \"components/MenuItemsDetails/MenuItemsDetails\"\nimport NavbarLive from \"components/Navbar/NavbarLive/NavbarLive\"\n\nexport default function MenuItems() {\n\n\n  const location = useLocation();\n  const category = location.pathname.split('/')[2];\n  // console.log(\"category\", category)\n  const [modalActive, setModalActive] = useState(false);\n  const [modalSectionActive, setModalSectionActive] = useState(false);\n\n\n\n  function closeModal () {\n    setModalActive(false)\n    setModalSectionActive(false)\n    document.body.style.overflow = '';\n  }\n\n  const dispatch = useDispatch();\n  // const items = useSelector(getItems);\n  const itemsCategory = useSelector(getItemsByCategory);\n  const sections = useSelector(getSections);\n  // console.log(\"sections\", sections)\n  // console.log(sections)\n//  const {loading, error} = useSelector(getState);\n\n\n      useEffect(() => {\n        // dispatch(allUsers())\n          dispatch(fetchItems());\n          dispatch(fetchSections());\n          \n        \n            // if (category === undefined) {\n              \n            // }\n            // else {\n             \n            //   dispatch(geItemsByCategory({category: category}))\n            // }\n          \n          }, \n           [ dispatch\n            // category, \n            // , items\n          ]\n          );\n\n    // const { category } = useParams();\n    // console.log(category)\n  return (\n    <>\n    <NavbarLive/>\n    <Sections  >\n      <SectionForm >\n        <ul>\n          {sections.map(section =>\n           <ItemsSections\n           section={section}\n           ></ItemsSections>)\n        }\n        </ul>\n        <button\n      type=\"button\"\n      onClick={() => setModalSectionActive(true)}>\n        Add Section\n      </button>\n      { modalSectionActive && (\n        <Modal\n        onClick={() => closeModal ()}\n        active={modalSectionActive}\n        setActive={setModalSectionActive}>\n        <ModalSectionForm \n        onClick={e => e.stopPropagation()}\n        setModalSectionActive={setModalSectionActive}\n        />\n        </Modal>\n      )}\n      { modalActive && (\n        <Modal\n        onClick={() => closeModal ()}\n        active={modalActive}\n        setActive={setModalActive}>\n        <ModalItemForm \n        onClick={e => e.stopPropagation()}\n        setModalActive={setModalActive}\n        category={category}\n        itemsCategory={itemsCategory}\n        />\n        </Modal>\n      )}\n      </SectionForm>\n      <MenuItemsDetails \n      setModalActive={setModalActive}\n      />\n      {/* <div className={scss.contacts}>\n      <h2>Menu</h2>\n        <Filter />\n          {!loading && items.length > 0 && \n          <ItemList\n          items={items} \n          itemsCategory={itemsCategory}\n          />}\n          {loading && <p className={scss.contactsLoading}>...loading</p>}\n          {error && <p>No items yet</p>}\n      </div>\n      <button\n      type=\"button\"\n      onClick={() => setModalActive(true)}>\n        Add Item\n      </button> */}\n    </Sections>\n    </>\n    )\n};","export const getFilter = store => store.filter;","import styled from 'styled-components';\nimport {MdDeleteForever} from 'react-icons/md';\n\nexport const ItemsList = styled.li`\n    display: flex;\n`\nexport const Item = styled.button`\n    width: 200px;\n`\nexport const ItemList = styled.div`\n    /* flex-direction: column;\n    font-size: 25px; */\n`\n    \nexport const DelItem  = styled.span`\n\nmargin: auto;\ncursor: pointer;\n\n`\nexport const DelIcon = styled(MdDeleteForever)`\n    color: red;\n`","import styled from 'styled-components';\n\nexport const FormWrapper = styled.div`\n    border: 1px solid rgb(7, 94, 138);\n`\nexport const Form = styled.form`\n    font-size: 25px;\n    border: 1px solid rgb(7, 94, 138);\n    padding: 10px;\n` \nexport const FormInputList = styled.div`\n    display: flex;\n    flex-direction: column;\n`\n    \n\nexport const FormInput = styled.input`\n    width: 300px;\n`\n\nexport const FormBtn = styled.button`\n    color: antiquewhite;\n    min-width: 50px;\n    min-height: 25px;\n    border-radius: 10px;\n    border: 1px solid rgb(7, 94, 138);\n    background-color: rgb(38, 146, 179);\n        &:hover {\n            background-color: rgb(45, 102, 119);\n        }\n        &:focus {\n            background-color: rgb(19, 58, 70);\n}\n`\nexport const Img = styled.img`\nwidth: 100px;\nheight: 100px;\n    \n`","import { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport { FormWrapper, Form, FormInputList, FormInput, FormBtn, Img } from \"./ModalItemDetail.styled\";\nimport {\n  // useSelector, \n  useDispatch } from 'react-redux';\n// import { getFilteredItems } from 'redux/items/items-selector';\nimport { itemUpdate, imgUpdate\n  // geItemsByCategory\n } from \"redux/items/items-operation\"; \n// import { Notify } from 'notiflix/build/notiflix-notify-aio';\n// // import { Formik } from 'formik';\n// import { useLocation,\n//   //  useSearchParams\n//    } from 'react-router-dom';\nimport noimg from 'img/noimg.jpg'\n\nexport default function ModalItemDetail ({\n  //  itemsCategory, \n  itemName,\n   price, \n   description, \n   _id,\n   itemImg,\n    closeModal}) {\n  // const items = useSelector(getFilteredItems);\n  // console.log(\"category\", category)\n  \n \n\n\n\n\n  //  const location = useLocation();\n  // const category = location.pathname.split('/')[2];\n  const dispatch = useDispatch();\n\n  const [newItemName, setNewItemName] = useState(itemName);\n  const [newPrice, setNewPrice] = useState(price);\n  const [newDescription, setNewDescription] = useState(description);\n  const [newItemImg, setNewItemImg] = useState(itemImg);\n  // const [section, setSection] = useState(category)\n// console.log(section)\n\nconst itemImgID = nanoid();\n  const itemNameID = nanoid();\n  const itemPriceID = nanoid();\n  const itemDescriptionID = nanoid();\n \nconsole.log(itemName, price)\n\n  const handleChange = (e) => {\n        const { name } = e.currentTarget;\n        switch (name) {\n          case 'newItemName':\n            setNewItemName ( e.currentTarget.value);\n            break;\n            case 'newPrice':\n              setNewPrice ( e.currentTarget.value);\n            break;\n            case 'newDescription':\n              setNewDescription ( e.currentTarget.value);\n            break;\n            case 'newItemImg':\n              setNewItemImg ( e.currentTarget.value);\n            break;\n          default:\n            break;\n        }\n      };\n\n      const UploadFile = async fileSelect => {\n        const imageURL = new FormData();\n        imageURL.append('imageURL', fileSelect);\n        dispatch(imgUpdate(\n          {_id,\n           imageURL}));\n        // setchangePhoto(true);\n      };\n      \n      const handleChangeUpload = e => {\n        const fileSelect = e.target.files[0];\n        console.log(fileSelect)\n        UploadFile(fileSelect);\n      };\n      console.log(newItemImg)\n  const handleSubmit = (e) => {\n\n        e.preventDefault()\n        // const duplicateItems = itemsCategory.find(itemCategory => itemCategory.itemName.toLocaleLowerCase() === newItemName.toLocaleLowerCase());\n      \n       \n          // if (duplicateItems) {\n          //   Notify.failure(`${itemName} is already in items`)\n          //   // alert (`${name} is already in contact`)\n          //   return\n          // }\n          // if (description === \"\") {\n          //   setSection (category)\n          //   dispatch(addItems(\n          //     {itemsName, price, section}\n          //     ));\n          //     setItemsName('');\n          //   // setDescription('');\n          //   setPrice('');\n          //   setSection('');\n          //   setModalActive(false);\n          // }\n          // else {\n            // setSection (category)\n\n            // console.log(_id)\n            // console.log(itemsName)\n            // console.log(dispatch(itemUpdate({_id, \n            //   itemName: itemsName}\n            //  )))\n            // setSection (category)\n            if (newPrice === \"\") \n            {setNewPrice(price)}\n\n            dispatch(itemUpdate(\n              {_id, \n                itemName: newItemName,\n              description: newDescription,\n              price: newPrice,\n              itemImg: newItemImg,\n              // section,\n              \n              } ));\n                // dispatch(geItemsByCategory({category: category}))\n                setNewItemName('');\n              setNewDescription('');\n              setNewPrice('');\n              setNewItemImg('');\n              // setSection('');\n              closeModal ();\n              // setModalDetailActive(false);\n          // }\n      }; \n      // const initialValues = {\n      //   name: '',\n      //   description: '',\n      //   phone: '',\n      // };\n\n      return ( \n        <FormWrapper>\n          <form\n          encType=\"multipart/form-data\" \n          method=\"post\"\n          onClick={e => e.stopPropagation()}\n          // onSubmit={handleSubmit}\n          >\n          <FormInputList >\n          <label htmlFor={itemImgID}>Image</label>\n          <FormInput \n          id={itemImgID} \n          type=\"file\" \n          name=\"image\" \n          accept=\"image/png, image/jpeg, image/jpg, image/bmp\"\n          onChange={handleChangeUpload} />\n          {/* <button\n          type=\"submit\"\n          >\n            change\n          </button> */}\n        </FormInputList>\n          </form>\n            <Img\n            src={itemImg || noimg} \n            alt=\"img\" \n            loading='lazy'/>\n          <Form \n        onClick={e => e.stopPropagation()}\n        onSubmit={handleSubmit}\n        >\n          \n        <FormInputList >\n          <label htmlFor={itemNameID}>Name</label>\n          <FormInput \n          id={itemNameID} \n          type=\"text\" \n          name=\"newItemName\" \n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may \"\n          required\n          // value={itemsName} \n          defaultValue={itemName}\n          onChange={handleChange} />\n        </FormInputList>\n        <FormInputList >\n          <label htmlFor={itemPriceID}>Price</label>\n          <FormInput \n          id={itemPriceID} \n          type=\"text\" \n          name=\"newPrice\" \n          pattern=\"[0-9]{1,10}\"\n          title=\"Name may \"\n          required\n          // value={itemsName} \n          defaultValue={price}\n          onChange={handleChange} />\n        </FormInputList>\n        <FormInputList >\n          <label htmlFor={itemDescriptionID}>Description</label>\n          <FormInput \n          id={itemDescriptionID} \n          type=\"text\" \n          name=\"newDescription\" \n          pattern=\"[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may \"\n          required\n          // value={itemsName} \n          defaultValue={description}\n          onChange={handleChange} />\n        </FormInputList>\n        <FormBtn \n        // onClick={values => handleSubmit(values)}\n        type=\"submit\">Change Name</FormBtn>\n        \n        </Form>\n        </FormWrapper>\n        \n        )\n};","import React from 'react'\nimport { \n    // useSelector, \n    useDispatch } from 'react-redux';\n    import { deleteItem, \n        //  geItemsByCategory\n        } from \"redux/items/items-operation\";\n\nexport default function ModalItemDelete({_id, closeModal}) {\n\n\n    const dispatch = useDispatch();\n\n    function DelItem () {\n        dispatch(deleteItem(_id));\n        closeModal ();\n      }\n\n  return (\n    <div\n      onClick={e => e.stopPropagation()}\n      // active={modalActive}\n      >\n        Do you really wont to delete?\n          <button\n          onClick={() => \n            \n            {DelItem ()}} \n          >\n            yes\n          </button>\n        \n      </div>\n  )\n}\n","import React from 'react'\n// import { \n//     // useSelector, \n//     useDispatch } from 'react-redux';\n// import { getItemsByCategory,\n//   //  getItems\n//    } from 'redux/items/items-selector';\nimport { Modal } from \"components/Modal/Modal\";\nimport {ItemsList, Item, DelItem, DelIcon } from './ItemInList.styled';\nimport { useState } from 'react';\n// import { deleteItem, \n//   //  geItemsByCategory\n//   } from \"redux/items/items-operation\"; \n// import { useLocation,\n//   //  useSearchParams\n//    } from 'react-router-dom';\nimport { nanoid } from 'nanoid';\n// import { fetchSections } from \"redux/sections/sections-operation\"\n  //  import { useEffect } from \"react\";\n  import ModalItemDetail from '../ModalItemDetail/ModalItemDetail';\n  import ModalItemDelete from '../ModalItemDelete/ModalItemDelete';\n  // import { itemUpdate, geItemsByCategory } from \"redux/items/items-operation\"; \n  // import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n\n\nexport default function ItemInList({filteredItem, itemsCategory}) {\n  // const location = useLocation();\n  // const category = location.pathname.split('/')[2];\n  \n\n  const filteredItemId = nanoid();\n    // const itemsCategory = useSelector(getItemsByCategory);\n    // console.log(itemsCategory)\n\n    \n    const {\n      itemName, \n      description,\n      price,\n      itemImg,\n    _id,\n  } = filteredItem;\nconsole.log(itemImg)\n\n\n// console.log(\"category\", category)\n// console.log(\"section\", section)\n\n// const dispatch = useDispatch();\n\n\nconst [modalDeleteActive, setModalDeleteActive] = useState(false);\nconst [modalDetailActive, setModalDetailActive] = useState(false);\n\nfunction closeModal () {\n    setModalDeleteActive(false)\n    setModalDetailActive(false)\n    document.body.style.overflow = '';\n  }\n\n  // const chekItems = Boolean(filteredItem)\n  // console.log(filteredItem)\n  //   console.log(chekItems)\n\n  // const location = useLocation();\n  // const category = location.pathname.split('/')[2];\n\n\n\n\n  // useEffect(() => {\n  //   // dispatch(fetchItems());\n  //   dispatch(fetchSections());\n  \n    \n  //     if (category === undefined) {\n  //       console.log(\"undef\")\n  //     }\n  //     else {\n       \n  //       dispatch(geItemsByCategory({category: category}))\n  //     }\n    \n  //   }, \n  //    [ dispatch, itemName, ])\n\n\n\n\n\n\n\n  return (\n    <>\n    \n        {filteredItem && \n        <ItemsList key={nanoid()}> \n        <Item\n        onClick={() => setModalDetailActive(true)}\n        key={filteredItemId}\n        >\n        {/* <ItemList \n         key={filteredItemId}>  */}\n        <b>Name:</b>  {itemName} <br />\n        \n        <b >Price:</b> {price} <br />\n        {/* <b >img:</b> {itemImg} */}\n        {/* </ItemList> */}\n        </Item>\n        <DelItem \n        onClick={() => setModalDeleteActive(true)}>\n          <DelIcon/>\n        </DelItem>\n        </ItemsList>\n        }\n            \n   { modalDeleteActive && (\n          <Modal\n          onClick={() => closeModal ()}\n          active={modalDeleteActive}\n          setActive={setModalDeleteActive}>\n          <ModalItemDelete\n          closeModal={closeModal}\n          _id={_id}\n          />\n     \n          </Modal>\n         )}\n            { modalDetailActive && (\n          <Modal\n          onClick={() => closeModal ()}\n          active={modalDetailActive}\n          setActive={setModalDetailActive}\n          \n          >\n\n          <ModalItemDetail \n          // onClick={e => e.stopPropagation()}\n          itemName={itemName}\n          price={price}\n          description={description}\n          itemImg={itemImg}\n          _id={_id}\n          itemsCategory={itemsCategory}\n          closeModal={closeModal}\n          setModalDetailActive={setModalDetailActive}\n\n          // onClick={e => e.stopPropagation()}\n          />\n          </Modal>\n         )}\n    </>\n  )\n}\n","// import scss from \"./ContactList.module.scss\"\nimport { useSelector, \n  useDispatch\n } from 'react-redux';\n// import { useState } from 'react';\n// import { getItems,\n//   //  getItemsByCategory\n//    } from 'redux/items/items-selector';\nimport  { getFilter }from 'redux/filter/filter-selector';\n// import { deleteItem,  geItemsByCategory} from \"redux/items/items-operation\";\nimport ItemInList from \"components/Item/ItemInList/ItemInList\";\n\nimport { useLocation,\n  //  useSearchParams\n   } from 'react-router-dom';\n   \nimport { useEffect } from \"react\";\nimport { fetchSections } from \"redux/sections/sections-operation\"\nimport { \n  // fetchItems,\n   geItemsByCategory } from \"redux/items/items-operation\"\n\n\n   \n\n export const ItemList = ({itemsCategory, items}) => {\n\n  const location = useLocation();\n\n  const category = location.pathname.split('/')[2];\n// console.log(\"category\", category)\n\nconst dispatch = useDispatch();\nconsole.log(itemsCategory)\n    // const items = useSelector(getItems);\n    // console.log(items)\n    // const itemsCategory = useSelector(getItemsByCategory);\n\n    const filter = useSelector(getFilter);\n    // const dispatch = useDispatch();\n\n    // if (category === \"first\") {dispatch(geItemsByCategory({category: category}))}\n\n    const getFilteredItem = () => {\n        if (!filter) {\n          return itemsCategory;\n        }\n            const normalizedFilter = filter.toLocaleLowerCase();\n            const filteredItem = itemsCategory.filter(({itemName}) => {\n            const nornalizedName = itemName.toLocaleLowerCase();\n            const result = nornalizedName.includes(normalizedFilter);\n            return result;\n          })\n          return filteredItem;\n        };\n\n// console.log(items)\n// if (category === items.section) {dispatch(geItemsByCategory({category: category}))}\n\n\n\nuseEffect(() => {\n  // dispatch(fetchItems());\n  dispatch(fetchSections());\n\n  \n    if (category === undefined) {\n    }\n    else {\n     \n      dispatch(geItemsByCategory({category: category}))\n    }\n  \n  }, \n   [ dispatch, category, items])\n\n\n\n\n    return (\n      <>\n            <ul>\n            {getFilteredItem().map(filteredItem => \n              <ItemInList\n              key={filteredItem._id}\n              itemsCategory={itemsCategory}\n              filteredItem={filteredItem}/>\n     )} \n         </ul>\n         \n         </>\n    )\n\n         }","import styled from 'styled-components';\n\nexport const ItemsFilter = styled.div`\n    display: flex;\n    flex-direction: column;\n`\nexport const ItemFilterLabel = styled.label`\n    font-size: 15px;\n`\nexport const ItemFilterInput = styled.input`\n    width: 200px;\n`","import { ItemsFilter, ItemFilterLabel, ItemFilterInput } from './Filter.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport  { getFilter }from 'redux/filter/filter-selector';\nimport { nanoid } from \"nanoid\";\nimport { setFilter } from \"redux/filter/filter-slice\";\n\nconst Filter = () => {\n\n    const filters = useSelector(getFilter);\n    const dispatch = useDispatch();\n\n    const findID = nanoid();\n\n    const  handleChange = (e) => {\n        const {value} = e.target;\n        dispatch(setFilter(value))\n      };\n\nreturn (\n    <ItemsFilter>\n              <ItemFilterLabel\n              \n              htmlFor={findID}\n              >Find items by name\n              </ItemFilterLabel>\n              <ItemFilterInput \n              type=\"text\" \n              name=\"filter\" \n              value={filters}\n              onChange={handleChange}\n              title=\"Search\"\n              required\n              />\n          </ItemsFilter>\n)};\n\n  export default Filter;","import styled from 'styled-components';\n\n\nexport const ItemsList = styled.div`\n    margin-left: 5px;\n    width: 250px;\n` \n    \nexport const ItemsLoading  = styled.p`\n    color: green;\n`\nexport const BtnWrapper = styled.div`\n    display: flex;\n    flex-direction: row-reverse;\n`\nexport const BtnAdd = styled.button`\n\n`","// import { useEffect } from \"react\";\n// import  ModalItemForm  from \"../../components/Item/ModalItemForm/ModalItemForm\"\n// import ModalSectionForm from \"components/Section/ModalSectionForm/ModalSectionForm\"\nimport {ItemList} from \"../../components/Item/ItemList/ItemList\"\n// import { \n//   fetchItems,\n//   //  geItemsByCategory\n//    } from \"redux/items/items-operation\"\nimport Filter from \"../../components/filter/Filter\"\nimport { ItemsList, ItemsLoading, BtnWrapper, BtnAdd } from \"./MenuItemsDetails.styled\";\nimport { \n  // useDispatch, \n  useSelector } from \"react-redux\";\n// import {\n//   //  useEffect,\n//     useState } from \"react\";\nimport { getState } from 'redux/items/items-selector';\nimport { getItems, getItemsByCategory } from 'redux/items/items-selector';\nimport { getSections } from \"redux/sections/sections-selector\"\n// import { Modal } from \"components/Modal/Modal\";\n// import ItemsSections from \"components/Section/ItemSections/ItemsSections\"\n// import {\n//   //  useLocation,\n//   useParams\n//   //  useSearchParams\n//    } from 'react-router-dom'\n// import UseAuth from \"components/hooks/useAuth\"\n// import { Navigate } from \"react-router-dom\"\n// import { fetchSections } from \"redux/sections/sections-operation\"\n// import {  allUsers } from \"redux/user/user-operation\";\nexport default function MenuItemsDetails({setModalActive}) {\n\n\n  // const location = useLocation();\n//   const categorys = location.pathname.split('/')[2];\n  // console.log(\"category\", category)\n  // const [modalActive, setModalActive] = useState(false);\n//   const [modalSectionActive, setModalSectionActive] = useState(false);\n\n\n\n//   function closeModal () {\n//     setModalActive(false)\n//     setModalSectionActive(false)\n//     document.body.style.overflow = '';\n//   }\n\n//   const dispatch = useDispatch();\n  const items = useSelector(getItems);\n  const itemsCategory = useSelector(getItemsByCategory);\n  const sections = useSelector(getSections);\n  console.log(\"sections\", sections)\n  // console.log(sections)\n const {loading, error} = useSelector(getState);\n\n\n    //   useEffect(() => {\n       \n    //       dispatch(fetchItems());\n    //       dispatch(fetchSections());\n        \n          \n    //       }, \n    //        [ dispatch\n         \n    //       ]\n    //       );\n\n    // const { category } = useParams();\n    // console.log(category)\n  return (\n    // <div  className={scss.phoneBook}>\n      <>\n      <ItemsList>\n      <h2>Menu</h2>\n        <Filter />\n        <BtnWrapper>\n        <BtnAdd\n      type=\"button\"\n      onClick={() => setModalActive(true)}>\n        Add Item\n      </BtnAdd>\n        </BtnWrapper>\n        \n          {!loading && items.length > 0 && \n          <ItemList\n          items={items} \n          itemsCategory={itemsCategory}\n          />}\n          {loading && <ItemsLoading >...loading</ItemsLoading>}\n          {error && <p>No items yet</p>}\n      </ItemsList>\n      \n      </>\n    // </div>\n    )\n};","import styled\n//  {keyframes} \n from 'styled-components';\n// import { device } from 'Device';\n\n// const rotateAnim = keyframes`\n// 0% {\n// transform: scale(0.5);\n// }\n// 100% {\n//   transform: scale(1);\n// }\n// `\nexport const ModalBackdrop = styled.div`\n  position: fixed;\n  z-index: 1000;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(17, 17, 17, 0.6);\n  backdrop-filter: blur(10px);\n  overflow-y: scroll;\n  overflow-x: hidden;\n  transition: 0.5s;\n  align-items: center;\njustify-content: center;\n  display: flex;\n  opacity: 0;\npointer-events: none;\ntransition: 1s;\n&.active {\n    opacity: 1;\n    pointer-events: all;\n  };\n`\n\n// export const ModalContentDellLogout = styled.div`\n// position: absolute;\n//   padding: 20px;\n//   border-radius: 40px;\n//   background-color: ${p => p.theme.colors.white};\n//   box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11);\n// /* transform: scale(0.5); */\n// transition: 0.5s all;\n// /* &.active {\n//   animation: ${rotateAnim}\n//     1s infinite linear\n//   transform: scale(1);\n// } */\n// `\n// export const ModalContent = styled.div`\n//   position: absolute;\n  \n//   /* left: 50%; */\n\n//   /* transform: translate(-50%, -5%); */\n//   background: ${p => p.theme.colors.white};\n//   border-radius: 40px;\n//   box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11),\n//   0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n\n\n//   transform: scale(0.5);\n// transition: 1s all;\n// &.active {\n//   transform: scale(1);\n// }\n// `\n// export const ModalContentAddPets1 = styled(ModalContent)`\n//   top: 15%;\n//   height: 530px;\n//   width: 280px;\n\n//   @media ${device.tablet} {\n//     height: 570px;\n//     width: 620px;\n//   }`\n\n// export const ModalContentAddPets2 = styled(ModalContent)`\n//   top: 15%;\n//   height: 670px;\n//   width: 280px;\n//   @media ${device.tablet} {\n//     height: 662px;\n//     width: 608px;\n//   }\n// `\n// export const ModalContentAddNotice = styled(ModalContent)`\n//   top: 5%;\n//   height: 700px;\n//   width: 280px;\n//   @media ${device.tablet} {\n//     width: 608px;\n//   }\n\n// `;\n// export const ModalContentLearnMore = styled(ModalContent)`\n// //   width: 280px;\n//   padding: 60px 20px 40px 20px;\n//   top: 5%;\n//   height: 530px;\n//   overflow-x: hidden;\n//   overflow-y: scroll;\n\n//   @media ${device.tablet} {\n//     width: 704px;\n//     padding: 32px 40px 32px 20px;\n//     top: 10%;\n//     overflow-y: hidden;\n//   }\n\n// `;\n// export const WrapperModal = styled.div`\n//   position: absolute;\n//   top: 0;\n//   left: 0;\n//   height: 100%;\n//   overflow-y: auto;\n//   width: 100%;\n// `;\n// export const WrapperModalAddPet1 = styled(WrapperModal)`\n// padding: 30px 20px;\n//   @media ${device.tablet} {\n//     width: 620px;\n//     height: 100%;\n//     padding: 40px 75px;\n//   }\n// `;\n// export const WrapperModalAddPet2 = styled(WrapperModal)`\n//   padding: 20px 20px;\n//   @media ${device.tablet} {\n//     width: 620px;\n//     height: 100%;\n//     padding: 40px 75px;\n//   }\n// `;\n// export const WrapperModalAddNotice = styled(WrapperModal)`\n//   padding: 10px 20px;\n//   @media ${device.tablet} {\n//     width: 608px;\n//     padding: 10px 75px;\n//   }\n// `;\n\n// export const ModalButton = styled.button`\n// z-index: 1;\n// position: absolute;\n// display: flex;\n// top: 16px;\n// right: 16px;\n// background-color: transparent;\n// border: 0;\n// transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n//   :hover,\n//   :focus {\n//     cursor: pointer;\n//   transform: scale(1.2);\n//   }\n// `;\n","import React from 'react';\n// import { createPortal } from 'react-dom';\nimport { ModalBackdrop } from './Modal.styled';\n\n// const modalRoot = document.querySelector('#modal_root');\n\nexport const Modal = ({active, className, onClick, setActive, children}) => {\n  const handleKeyDown = e => {\n    if (e.code === 'Escape') {\n        setActive(false);\n        document.body.style.overflow = '';\n    }\n  };\n  window.addEventListener('keydown', handleKeyDown);\n \n  return (    \n  <ModalBackdrop \n    className={active ? \"modal active\" : \"modal\"}\n    onClick={onClick}\n    >\n      {children}\n    </ModalBackdrop>\n  );\n};","export const getItems = ({items}) => items.items;\nexport const getItemsLive = ({items}) => items.itemsLive;\nexport const isLive = ({items}) => items.isLive;\nexport const getItemsByCategory = ({items}) => ( items.itemsByCategory);\nexport const getItemUpdate = ({items}) => (items.itemsByCategory);\nexport const getState = ({items}) => ({loading: items.loading, error: items.error});\nexport const getFilteredItems = ({filter, items}) => {   \n    if (!filter) \n    {return items.items};\n};","export const getSections = ({sections}) => ( sections.sections)\nexport const getSectionsLive = ({sectionsLive}) => ( sectionsLive.sections)\nexport const getState = ({sections}) => ({loading: sections.loading, error: sections.error});"],"names":["ModalItemForm","setModalActive","category","itemsCategory","console","log","dispatch","useDispatch","useState","itemName","setItemName","price","setPrice","description","setDescription","section","setSection","itemNameID","nanoid","priceID","descriptionID","handleChange","e","currentTarget","name","value","onClick","stopPropagation","className","scss","onSubmit","preventDefault","find","itemCategory","toLocaleLowerCase","Notify","addItems","htmlFor","id","type","pattern","title","required","onChange","ModalSectionForm","setModalSectionActive","sections","useSelector","getSections","setCategory","sectionNameID","addSection","Sections","styled","SectionForm","FilterList","Button","NavLink","StyledChange","ModalChangeSectionName","_id","closeModal","newSectionName","setNewSectionName","updateSection","defaultValue","modalActive","document","body","style","overflow","fetchSections","buttons","btn","link","map","b","to","Modal","active","setActive","NavbarLive","user","getUser","chekName","Boolean","items","text","target","rel","end","MenuItems","useLocation","pathname","split","modalSectionActive","getItemsByCategory","useEffect","fetchItems","MenuItemsDetails","getFilter","store","filter","ItemsList","Item","DelItem","DelIcon","MdDeleteForever","FormWrapper","Form","FormInputList","FormInput","FormBtn","Img","ModalItemDetail","itemImg","newItemName","setNewItemName","newPrice","setNewPrice","newDescription","setNewDescription","newItemImg","setNewItemImg","itemImgID","itemPriceID","itemDescriptionID","UploadFile","fileSelect","imageURL","FormData","append","imgUpdate","encType","method","accept","files","src","noimg","alt","loading","itemUpdate","ModalItemDelete","deleteItem","ItemInList","filteredItem","filteredItemId","modalDeleteActive","setModalDeleteActive","modalDetailActive","setModalDetailActive","ItemList","undefined","geItemsByCategory","normalizedFilter","includes","getFilteredItem","ItemsFilter","ItemFilterLabel","ItemFilterInput","filters","findID","setFilter","ItemsLoading","BtnWrapper","BtnAdd","getItems","getState","error","length","ModalBackdrop","children","window","addEventListener","code","getItemsLive","itemsLive","isLive","itemsByCategory"],"sourceRoot":""}