{"version":3,"file":"static/js/909.d9af2e22.chunk.js","mappings":"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","sources":["components/Live/LiveItemsSections/LiveItemsSections.styled.jsx","components/Live/LiveItemsSections/LiveItemsSections.jsx","Pages/LivePage/LivePage.styled.jsx","Pages/LivePage/LivePage.jsx","redux/items/items-selector.js","redux/sections/sections-selector.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import styled from 'styled-components';\n\n\nexport const List = styled.div`\ntext-align: center;\ncolor: #ffffff;\n\n`\n\nexport const Title = styled.h2`\n  font-size: 25px;\n  position: sticky;\n  top: -1px;\n`\n\nexport const ImgLive = styled.img`\n/* position: relative; */\ndisplay: flex;\n  width: 100px;\n  height: 100px;\n  /* margin-right: 5px; */\n  justify-content: flex-end;\n  /* right: 5px;\n  bottom: auto; */\n  border-radius: 5px;\n\n`\nexport const ItemList = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-left:auto;\n  margin-right: auto;\n  text-align: center;\n      &:not(:first-child) {\n      margin-top: 10px;\n  }\n\n  /* padding-left: 10px;\n  padding-right: 5px; */\n  padding: 5px 5px 5px 10px;\n  border-radius: 10px;\n  border: 1px solid rgb(7, 94, 138);\n`;\nexport const ItemsGroup = styled.div`\n  /* display:flex; */\n  width: 100%;\n`\nexport const ItemTitle = styled.span`\n  font-size: 12px;\n`\nexport const ItemDescription = styled.span`\ndisplay: flex;\n  font-size: 8px;\n`\nexport const Item = styled.span`\nfont-size: 10px;\n  display: flex;\n`\n","import { nanoid } from 'nanoid';\nimport noimg from 'img/noimg.jpg'\nimport {List, \n  // ListLive,\n   Title, ImgLive, ItemList, ItemsGroup, ItemTitle, ItemDescription, Item} from './LiveItemsSections.styled'\n\n// const btnId = nanoid();\n// const sectionId = nanoid();\n\n\n\nfunction LiveItemsSections ({section, item}) {\n \n  const { \n    category,\n  } = section;\n  \n  const buttons = [\n    {\n      btn: category,\n      list: item,\n    }\n  \n  ];\n  \n  return (\n   \n      // <ListLive key={nanoid()}>     // </ListLive>\n\n      <>\n                  {buttons.map(b => (\n              <List\n              key={nanoid()}>\n               <b> <Title\n                key={nanoid()}>{b.btn}</Title> </b>\n                <ul>\n                {b.list.map(list => (\n                  \n                <ItemList \n                key={nanoid()}\n                \n                > <ItemsGroup>\n                  <ItemTitle>  <p>{list.itemName}</p></ItemTitle>\n                  <ItemDescription>  <p>{list.description}</p></ItemDescription>\n                  <Item><p>Price:</p>  <p>{list.price} </p></Item>\n                  </ItemsGroup>\n                  <ImgLive \n                  src={list.itemImg || noimg} \n                  alt=\"img\" \n                  loading='lazy' \n                  />\n                  </ItemList>\n                  \n                ))}\n                </ul>\n              </List>\n              \n              )\n              \n              )}\n       </>     \n  \n  );\n}\n\nexport default LiveItemsSections;\n","import styled from 'styled-components';\n\n\nexport const List = styled.ul`\ncolor: ${props => props.theme.colors.mainTextLive};\nfont-family:  ${props => props.theme.fonts.mainLive};\nbackground-color: ${props => props.theme.colors.backgrondLive};\n`\nexport const Menu = styled.h2`\n    font-size: 35px;\n`","// import {  getAllUser } from \"redux/user/user-selector\";\nimport {  useDispatch,useSelector } from \"react-redux\";\nimport React, { useEffect } from \"react\";\nimport {  allUsers } from \"redux/user/user-operation\";\n// import LiveListUser from \"components/Live/LiveListUser/LIveListUser\";\nimport { nanoid } from 'nanoid';\nimport { getSections } from \"redux/sections/sections-selector\"\nimport { fetchSections } from \"redux/sections/sections-operation\"\nimport LiveItemsSections from \"components/Live/LiveItemsSections/LiveItemsSections\";\nimport { useLocation } from 'react-router-dom'\nimport {  fetchItemsLive } from \"redux/items/items-operation\"\nimport { getItemsLive } from 'redux/items/items-selector';\nimport { List, Menu } from \"./LivePage.styled\";\n\n\nexport default function LivePage() {\n\n\n  const location = useLocation();\n  const category = (location.pathname.split('/')[2])\n  \n    const dispatch = useDispatch();\n    const sections = useSelector(getSections);\n    const items = useSelector(getItemsLive);\n// console.log(items)\n    useEffect(() => {\n      \n        dispatch(allUsers())\n        if (category) {\n          dispatch(fetchItemsLive(category));\n          dispatch(fetchSections(category));\n          \n        }\n        \n        \n      }, \n\n      [dispatch, category])\n\n\n  \n  return (\n    <>\n    \n    {/* <ul key={nanoid()}>\n          {users.map(user =>\n           <LiveListUser\n           user={user}\n          //  sections={sections}\n           ></LiveListUser>\n            ) } \n    </ul> */}\n    <List key={nanoid()}>\n      <Menu>Menu</Menu>\n       {sections.map(section =>\n        <LiveItemsSections\n        key={nanoid()}\n        section={section}\n        item={items.filter(i => \n          i.section === section._id)}\n        />  )\n}\n    </List>\n      </>\n  )\n}\n","export const getItems = ({items}) => items.items;\nexport const getItemsLive = ({items}) => items.itemsLive;\nexport const isLive = ({items}) => items.isLive;\nexport const imgSaved = ({items}) => (items.imgSaved);\nexport const getItemsByCategory = ({items}) => ( items.itemsByCategory);\nexport const getItemUpdate = ({items}) => (items.itemsByCategory);\nexport const getState = ({items}) => ({loading: items.loading, error: items.error});\nexport const getFilteredItems = ({filter, items}) => {   \n    if (!filter) \n    {return items.items};\n};","export const getSections = ({sections}) => ( sections.sections)\nexport const getSectionsLive = ({sectionsLive}) => ( sectionsLive.sections)\nexport const getState = ({sections}) => ({loading: sections.loading, error: sections.error});","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n"],"names":["List","styled","Title","ImgLive","ItemList","ItemsGroup","ItemTitle","ItemDescription","Item","section","item","buttons","btn","category","list","map","b","nanoid","itemName","description","price","src","itemImg","noimg","alt","loading","props","theme","colors","mainTextLive","fonts","mainLive","backgrondLive","Menu","LivePage","useLocation","pathname","split","dispatch","useDispatch","sections","useSelector","getSections","items","getItemsLive","useEffect","allUsers","fetchItemsLive","fetchSections","filter","i","_id","getItems","itemsLive","isLive","imgSaved","getItemsByCategory","itemsByCategory","getState","error","size","id","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase"],"sourceRoot":""}