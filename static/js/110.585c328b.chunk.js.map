{"version":3,"file":"static/js/110.585c328b.chunk.js","mappings":"iKAmBIA,EAAS,WAGX,IAH0B,IAAdC,EAAc,uDAAP,GACfC,EAAK,GACLC,EAAQC,OAAOC,gBAAgB,IAAIC,WAAWL,IAC3CA,KAAQ,CACb,IAAIM,EAAqB,GAAdJ,EAAMF,GAEfC,GADEK,EAAO,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,GAET,CACD,OAAOL,CACR,ECjBD,EAhBc,CACV,CAACA,GAAIF,IACLU,GAAI,IACJC,KAAM,QAEN,CAACT,GAAIF,IACLU,GAAI,SACJC,KAAM,SAEV,CAACT,GAAIF,IACDU,GAAI,YACJC,KAAM,a,SCVK,SAASC,IACpB,OACE,wBACKC,EAAAA,KAAU,YAAqB,IAAnBX,EAAkB,EAAlBA,GAAIQ,EAAc,EAAdA,GAAIC,EAAU,EAAVA,KACjB,OACI,yBACI,SAAC,KAAD,CAASD,GAAIA,EAAII,KAAG,EAApB,SAAsBH,KADhBT,EAGZ,KAIb,C","sources":["../node_modules/nanoid/index.browser.js","components/Navbar/items.js","components/Navbar/Navbar.jsx"],"sourcesContent":["import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","import { nanoid } from \"nanoid\";\n\nconst items = [\n    {id: nanoid(),\n    to: \"/\",\n    text: \"Home\"\n},\n    {id: nanoid(),\n    to: \"/login\",\n    text: \"Login\"\n},\n{id: nanoid(),\n    to: \"/register\",\n    text: \"Register\"\n},\n]\n\n\nexport default items;","import { NavLink } from \"react-router-dom\"\nimport items from \"./items\"\n\nexport default function NavbarMenu() {\n    return (\n      <ul >\n          {items.map(({id, to, text}) => {\n              return (\n                  <li  key={id}>\n                      <NavLink to={to} end>{text}</NavLink>\n                  </li>\n              )})\n          }\n      </ul>\n    )\n  }"],"names":["nanoid","size","id","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","to","text","NavbarMenu","items","end"],"sourceRoot":""}